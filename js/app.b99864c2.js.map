{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/readonly.js","webpack:///./src/Helpers/UniqueIdFactory.js","webpack:///./src/Object/State.js","webpack:///./src/Object/Surface/SurfaceObject.js","webpack:///./src/Object/Projectiles/Projectile.js","webpack:///./src/Object/Surface/ShootingSurfaceObject.js","webpack:///./src/Helpers/MessageBroker.js","webpack:///./src/Object/Enemies/Enemy.js","webpack:///./src/utils/randomRange.js","webpack:///./src/Object/Enemies/EnemyFlipper.js","webpack:///./src/Object/Enemies/EnemyFuseball.js","webpack:///./src/Object/Shooters/Shooter.js","webpack:///./src/Object/Manager/FIFOManager.js","webpack:///./src/Object/Enemies/EnemySpiker.js","webpack:///./src/Object/Enemies/EnemySpike.js","webpack:///./src/Object/Manager/SurfaceObjectsManager.js","webpack:///./src/Object/Manager/ProjectileManager.js","webpack:///./src/utils/KeyboardInput.js","webpack:///./src/Object/Enemies/EnemyPulsar.js","webpack:///./src/Object/Enemies/EnemyTanker.js","webpack:///./src/Object/Enemies/EnemyFlipperTanker.js","webpack:///./src/Object/Enemies/EnemyFuseballTanker.js","webpack:///./src/Object/Enemies/EnemyPulsarTanker.js","webpack:///./src/Object/Enemies/EnemySpawner.js","webpack:///./src/Object/Level.js","webpack:///./src/Helpers/BoundingBox2.js","webpack:///./src/Object/Surface/Surface.js","webpack:///./src/utils/Angle.js","webpack:///./src/Renderer/Surface/SurfaceRenderer.js","webpack:///./src/utils/objLoader.js","webpack:///./src/utils/compareVectors.js","webpack:///./src/Assets/Enemies.js","webpack:///./src/Assets/Explosions.js","webpack:///./src/Renderer/Surface/SurfaceObjectWrapper.js","webpack:///./src/Renderer/Shooters/ShooterRenderer.js","webpack:///./src/Renderer/Projectiles/ProjectileRenderer.js","webpack:///./src/Renderer/Surface/ProjectileRendererManager.js","webpack:///./src/Renderer/Enemies/EnemyRenderer.js","webpack:///./src/Renderer/Enemies/EnemyFlipperRenderer.js","webpack:///./src/Renderer/Enemies/EnemySpikerRenderer.js","webpack:///./src/Renderer/Enemies/EnemySpikeRenderer.js","webpack:///./src/Renderer/Enemies/EnemyFlipperTankerRenderer.js","webpack:///./src/Renderer/Enemies/EnemyFuseballRenderer.js","webpack:///./src/Renderer/Enemies/EnemyFuseballTankerRenderer.js","webpack:///./src/Renderer/Enemies/EnemyPulsarRenderer.js","webpack:///./src/Renderer/Enemies/EnemyPulsarTankerRenderer.js","webpack:///./src/Renderer/Surface/EnemyRendererManager.js","webpack:///./src/Renderer/LevelRenderer.js","webpack:///./src/Object/Screen/Canvas3d.js","webpack:///./src/Helpers/ContentManager.js","webpack:///./src/Object/Screen/ScreenContentManager.js","webpack:///./src/Object/Screen/ScreenPlay.js","webpack:///./src/Assets/Surfaces.js","webpack:///./src/Object/Screen/ScreenSelectSurface.js","webpack:///./src/Object/Screen/ScreenHighScores.js","webpack:///./src/Assets/Levels.js","webpack:///./src/Object/Manager/AudioManager.js","webpack:///./src/Object/Game.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","readonly","target","descriptor","writable","UniqueIdFactory","this","lastId","uniqueIdFactory","State","duration","probability","id","getNewId","state","states","range","reduce","acc","val","draw","Math","random","Error","SurfaceObject","surface","laneId","type","getActualLaneIdFromProjectedMovement","objectId","ObjectIdManager","die","prevLaneId","laneChangeMapsNeedUpdate","prevState","lastStateChange","Date","now","timeSienceLastStateChange","timeSinceLastStateChange","equals","flag","flags","isFlagSet","Projectile","source","zPosition","TYPE_PROJECTILE","SOURCE_SHOOTER","zSpeed","PROJECTILE_SPEED","alive","SOURCE_ENEMY","laneObjects","collision","findIndex","hittable","PROJECTILE_KILL_RADIUS_BACKWARD","PROJECTILE_KILL_RADIUS_FORWARD","hitByProjectile","ShootingSurfaceObject","projectileManager","projectileSource","TYPE_SHOOTER","canChangeState","updateState","updateEntity","canShoot","lastShootTimestamp","shootTimeoutMs","fire","MessageBroker","topic","message","context","messages","Message","console","log","messageBroker","Enemy","rewardCallback","SHOOT_TIMEOUT_MS","constructor","reward","publish","TOPIC_AUDIO","MESSAGE_ENEMY_SHOOT","clearFlags","valueInPoints","MESSAGE_ENEMY_DEATH","randomRange","low","high","floor","EnemyFlipper","TYPE_FLIPPER","firstLevel","setState","STATE_IDLE","inState","FLAG_REACHED_TOP","STATE_ROTATING_BEGIN","drawNextState","STATE_SHOOTING","isFlagNotSet","FLAG_CANNOT_FLIP","STATE_ROTATING_END","FLAG_IMMUNE_ROTATION","unsetFlag","FLAG_LANE_CHANGED","FLAG_ROTATION_CW","FLAG_ROTATION_CCW","FLAG_ROTATION_DIR_CHOSEN","FLAG_SHOOTS_FIRED","STATE_EXPLODING","STATE_DISAPPEARING","STATE_DEAD","setFlag","direction","getShortestPathDirection","activeLaneId","FLAG_REACHED_SHOOTER","canRotateCCW","canRotateCW","setLane","EnemyFuseball","TYPE_FUSEBALL","STATE_MOVING_ALONG_LINE","FLAG_IMMUNE","STATE_SWITCHING_LANE","FLAG_MOVING_TARGET_CHOSEN","FLAG_SWITCHING_LANE_CW","FLAG_SET_LANE_CW","FLAG_SWITCHING_DIR_CHOSEN","FLAG_SWITCHING_LANE_CCW","FLAG_SET_LANE_CCW","canSwitchCCW","canSwitchCW","laneChanges","zBase","zTarget","MIN_Z_POSITION","MAX_Z_POSITION","MIN_AMOUNT_OF_LANE_CHANGES_UNTIL_TOP","x","MAX_AMOUNT_OF_LANE_CHANGES_UNTIL_TOP","lastLaneSwitchingProgress","stateProgressInTime","Shooter","surfaceObjectsManager","killedCallback","laneChangeTimeoutMs","LANE_CHANGE_TIMEOUT_MS","setActiveLane","STATE_APPROACHING_TUBE","STATE_RENOVATING","STATE_ALIVE","STATE_GOING_DOWN_THE_TUBE","STATE_REACHED_TUBE_BOTTOM","FLAG_ITS_ALREADY_TOO_LATE","handleShortedLanes","handleCollisionWithEnemy","handleCollisionWithSpike","handleCaptureByEnemy","TUBE_DESCENDING_LENGTH_MULTIPLIER","TUBE_APPROACHING_LENGTH_MULTIPLIER","isLaneShorted","shockedByPulsar","enemiesMapRef","enemiesMap","forEach","enemy","capturedByFlipper","capturedByFuseball","COLLISION_RADIUS_BACKWARD","COLLISION_RADIUS_FORWARD","spikesMapRef","spikesMap","impaledOnSpike","desiredLane","lastLaneChangeTimestamp","MESSAGE_PLAYER_CHANGED_LANE","moveToLane","penaltyTimestamp","BURST_PENALTY_MS","MESSAGE_PLAYER_SHOOT","MESSAGE_PLAYER_DEATH","FLAG_SUPERZAPPER_USED","TOPIC_SCREEN","MESSAGE_PLAYER_SUPERZAPPER_USED","handleSuperzapper","superzapperUsed","FIFOManager","lastGarbageCollectorExecutionTimestamp","GARBAGE_COLLECTION_TIMEOUT_MS","objects","indexOfAliveObject","temp","map","forceUpdate","mapNeedsUpdate","filter","shouldUpdateFIFOMaps","lane","EnemySpiker","TYPE_SPIKER","TURNAROUND_HEIGHT","EnemySpike","TYPE_SPIKE","canExplode","spikers","spiker","lowestSpikerZPosition","lowest","extendTo","newZPosition","ceil","HUNK_LENGTH","rendererHelperZPositionChanged","HIT_DESTROYED_LENGTH","SurfaceObjectsManager","shootersMap","Array","lanesAmount","fill","shooter","shooters","rendererHelperNewObjectsIds","enemies","createSpikes","spike","spikes","addSpike","update","extendToLowestSpiker","runGarbageCollector","updateObjectsMap","shouldTriggerGarbageCollector","collectedEnemies","garbageCollector","forceMapsUpdate","collectedSpikes","updateMap","disappear","removeEnemies","removeSpikes","removeShooters","ProjectileManager","enemyProjectilesMap","shooterProjectiles","MAX_AMOUNT_OF_SHOOTER_PROJECTILES","rendererHelperNewProjectilesIds","enemyProjectiles","MAX_AMOUNT_OF_ENEMY_PROJECTILES","projectile","detectCollision","collectedEnemyProjectiles","KeyboardInput","document","onkeydown","event","element","keyToFunctionMap","find","keyMap","code","undefined","keyDown","onkeyup","action","unregister","index","keyboardInput","EnemyPulsar","TYPE_PULSAR","FLAG_NO_WARNING","STATE_PULSATING","STATE_WARNING","shortLane","unshortLane","rendererHelperLaneChangesAmount","EnemyTanker","enemySpawnFunction","createEnemies","EnemyFlipperTanker","TYPE_FLIPPER_TANKER","CWLaneId","canSpawnEnemyCW","CWWLaneId","canSpawnEnemyCCW","enemyCW","enemyCCW","immuneDuringNextRotation","EnemyFuseballTanker","TYPE_FUSEBALL_TANKER","immuneDuringNextLaneSwitch","EnemyPulsarTanker","TYPE_PULSAR_TANKER","EnemySpawner","level","levelInitScore","targetScore","currentLevel","currentScore","score","amountOfAliveEnemiesOnSurface","getAmountOfAliveEnemies","amountOfEnemiesAllowedOnSurface","MAX_LEVEL","MAX_ENEMIES","MIN_ENEMIES","spawnChance","enemiesThatCanBeSpawned","SPAWN_MAP","enemyToSpawn","drawEnemy","spawnFlipper","spawnFlipperTanker","spawnSpiker","spawnFuseball","spawnPulsar","spawnFuseballTanker","spawnPulsarTanker","chanceOfSpawning","flipper","addEnemy","cannotFlip","Level","levelWonCallback","shooterKilledCallback","getCurrentScore","enemySpawner","shooterKilled","addShooter","removeProjectiles","unregisterKeys","register","moveLeft","moveRight","fireSuperzapper","updateScore","spawn","reachedScoreTarget","MESSAGE_NEXT_LEVEL","renovate","BoundingBox2","top","right","bottom","left","findCenter","center","Vector2","points","point","y","Surface","isOpen","lanesCoords","zOffset","rawLanesCoords","depth","shortedLanes","calculateCenteredLanesCoords","calculateLanesCenterCoords","calculateLanesCenterDirection","boundingBox2","vector2","sub","getCenter","lanesMiddleCoords","LINES_AMOUNT","lanesCenterDirectionRadians","angleVector","clone","axis","normalize","angle","projectedLaneId","fromLaneId","toLaneId","cwDistance","ccwDistance","isDiffPositive","abs","isCwShortest","desiredActiveLane","dataset","coords","Angle","angleInRadians","PI","angleInDegrees","SurfaceRenderer","castShadow","setSurface","createLanes","setLinesAppearance","laneDefaultMaterial","setConnectorsAppearance","laneActiveMaterial","shortedLanesIds","shortedStrength","thisLaneId","prevShortedLaneId","laneShortedMaterial","hole","clear","connectorBackDepth","lanes","lanesLines","lanesConnectors","surfaceColor","LineBasicMaterial","color","DEFAULT_LANE_COLOR","ACTIVE_LANE_COLOR","SHORTED_LANE_COLOR","getAmountOfLanes","current","linePoints","Vector3","Line","BufferGeometry","setFromPoints","next","connectorFrontPoints","connectorFrontDepth","connectorBackPoints","line","add","connector","material","MeshBasicMaterial","rotateAround","toRadians","geometry","connectorId","visible","lineId","includeOpen","Group","objLoader","OBJLoader","compareVectors","v1","v2","epsilon","Number","EPSILON","z","explosions","SurfaceObjectWrapper","objectType","setObjectRef","loadModel","loadExplosion","setVisualsToNormal","position","set","rotation","manageVisibility","move","rotate","modelGroup","explosionGroup","isEnemy","explosionDataset","explosion","concat","xyArray","isArray","ShooterRenderer","explodeAnimation","disappearingAnimation","renovatingAnimation","scale","pow","modelScale","setVisualsToExplode","zRotationOffset","EXPLOSION_ROTATION_SPEED","explosionScale","desiredPosition","movement","setLength","positionChangeSpeed","desiredRotation","rotationChangeSpeed","leftAngularDistance","rightAngularDistance","rotationDirection","that","load","MODEL_PATH","traverse","child","isMesh","shooterWireframe","Three","SHOOTER_WIREFRAME_COLOR","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","MODEL_SCALE","MODEL_ROTATION","MODEL_Z_OFFSET","warn","ProjectileRenderer","children","getMaterialColor","ROTATION_SPEED","BoxGeometry","PROJECTILE_SIZE","Mesh","projectileWireframe","LineSegments","WireframeGeometry","PROJECTILE_SHOOTER_COLOR","PROJECTILE_ENEMY_COLOR","ProjectileRendererManager","includes","pushProjectile","projectileRenderers","projectileRenderer","breakObjectRef","projectileRenderersAvailabilityMap","EnemyRenderer","enemyType","valid","continuousRotationUpdate","relativeHalfStep","sourceLaneId","targetLaneId","setLaneOffset","positionBase","positionOffset","zRotationBase","offset","laneCoords","laneCenterCoords","scalar","multiplyScalar","rotatingStateCache","relativeStep","currentLaneRotation","targetLaneRotation","targetRealRotation","enemyDataset","EnemyFlipperRenderer","enemyFlipper","isRotationStateCacheValid","calculateRotationStateCacheVariables","rotationAxisLaneId","positionRotationXYOffset","subVectors","invalidateRotationStateCache","EnemySpikerRenderer","enemySpiker","EnemySpikeRenderer","enemySpike","shouldRerenderSpikeDueToSpikeLengthChange","updateModel","materials","SPIKE_COLOR","EnemyFlipperTankerRenderer","enemyFlipperTanker","EnemyFuseballRenderer","fuseball","EnemyFuseballTankerRenderer","EnemyPulsarRenderer","enemyPulsar","setScale","setMaterial","BASE_Y_SCALE","PULSE_Y_SCALE","sin","setY","colorHelperPrevState","neutral","NEUTRAL_COLOR","PULSE_COLOR","EnemyPulsarTankerRenderer","EnemyRendererManager","pushEnemy","enemyRenderers","enemyRenderer","enemyRenderersAvailabilityMap","enemyRendererFactory","LevelRenderer","camera","surfaceRenderer","shooterRenderer","enemyRendererManager","projectileRendererManager","remove","surfaceDepth","cameraZPosition","CAMERA_TO_SHOOTER_DISTANCE","lookAt","followShooter","Canvas3d","screenContentManager","width","height","canvasResX","canvasResY","contextRef","createElement","getContext","canvas","texture","THREE","minFilter","PlaneGeometry","side","DoubleSide","transparent","setLineWidth","setFontSizePx","vectorBattleFont","FontFace","then","font","fonts","fontReady","lastKeyInputTimestamp","KEY_INPUT_DELAY","clearRect","lineWidth","size","fontName","text","spacing","toString","split","join","String","fromCharCode","debug","textMetrics","measureText","drawRect","actualBoundingBoxAscent","COLOR_WHITE","drawLine","strokeStyle","strokeText","fillStyle","fillText","x2","y2","beginPath","moveTo","lineTo","stroke","w","h","strokeRect","COLOR_RED","displayCanvasBorder","queueTextureUpdate","clearCanvas","drawText","needsUpdate","number","padStart","ContentManager","content","setUpdateFlag","updateFlag","ScreenContentManager","KEY_SCORE","highScores","KEY_HIGH_SCORES","KEY_HIGHEST_SCORE","credits","KEY_CREDITS","lives","KEY_LIVES","KEY_LEVEL","KEY_SUPERZAPPER_USED","KEY_SELECT_OFFSET","active","KEY_SELECT_ACTIVE","levels","KEY_LEVELS","levelSelectedCallback","KEY_LEVEL_SELECTED_CALLBACK","closeHighScoresScreenCallback","KEY_CLOSE_HIGH_SCORES_SCREEN_CALLBACK","pushHighScoreCallback","KEY_PUSH_HIGH_SCORE_CALLBACK","ScreenPlay","scoreRisingSpeed","messageBrokerScreenTopicConsumer","consume","isMessage","displaySuperzapperHint","alignNumberToRight","COLOR_BLUE","drawLiveIcon","COLOR_GREEN","unit","surfaces","ScreenSelectSurface","registerKeys","selectLevel","keyInputDelay","selectedLevel","MESSAGE_MENU_SELECT","moveSelection","MESSAGE_MENU_CHANGE","currentActive","currentOffset","desiredSelection","levelsLength","COLOR_CYAN","COLOR_YELLOW","xOffset","xStep","surfaceId","SURFACE_COLORS","drawMapIcon","scoreBonus","cx","cy","ScreenHighScores","place","row","pop","currentStep","prevChar","nextChar","step","char","playerName","charCodeAt","selectable","AudioManager","audioListener","audio","Audio","soundName","volume","availableAudio","isPlaying","audioLoader","AudioLoader","buffer","setBuffer","setVolume","SOUND_VOLUME","play","playSound","SOUND_ENEMY_DEATH","SOUND_PLAYER_DEATH","SOUND_PLAYER_LANE_CHANGE","SOUND_NEXT_LEVEL","SOUND_PLAYER_SHOOT","SOUND_ENEMY_SHOOT","Game","STATE_SELECT_SURFACE","setupRenderer","setupLogic","screenStateUpdated","releaseScreen","STATE_PLAY","releaseLevel","loadScreen","loadLevel","setLevel","populateScreenContentManager","STATE_HIGH_SCORES","saveGameState","levelObject","surfacesCollection","levelData","levelRenderer","bindLevel","release","screen","screenObject","screenGroup","loadGameState","fromDataset","localStorage","getItem","HIGH_SCORES_STORAGE_KEY","JSON","parse","highestLevel","HIGHEST_LEVEL","parseInt","setItem","stringify","setLives","setScore","setCredits","setHighScores","setSuperzapperUsed","setSelectActive","setSelectOffset","setSelectLevels","setLevelSelectedCallback","startLevel","setPushHighScoreCallback","pushScoreToHighScores","setCloseHighScoresScreenCallback","highQuality","scene","Scene","PerspectiveCamera","innerWidth","innerHeight","AudioListener","audioManager","renderer","WebGLRenderer","antialias","setSize","body","appendChild","domElement","composer","EffectComposer","addPass","RenderPass","UnrealBloomPass","SMAAPass","requestAnimationFrame","handleState","dispatchActions","render","BONUS_EVERY","game"],"mappings":"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","file":"js/app.b99864c2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/tempest2021/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default function readonly(target, key, descriptor){\n  descriptor.writable = false;\n  return descriptor;\n}\n","class UniqueIdFactory {\r\n  /** {number} */\r\n  lastId = 0;\r\n\r\n  /**\r\n   * @return {number}\r\n   */\r\n  getNewId () {\r\n    return this.lastId++;\r\n  }\r\n}\r\n\r\nconst uniqueIdFactory = new UniqueIdFactory();\r\nexport default uniqueIdFactory;\r\n","import uniqueIdFactory from '@/Helpers/UniqueIdFactory';\r\n\r\nexport default class State {\r\n  /** {number} */\r\n  id;\r\n  /** {number} */\r\n  duration;\r\n  /** {number} */\r\n  probability;\r\n  /** {string} */\r\n  name;\r\n\r\n  /**\r\n   * @param {number} duration\r\n   * @param {number} probability\r\n   * @param {string} name\r\n   */\r\n  constructor (duration, probability = 1, name = '') {\r\n    this.id = uniqueIdFactory.getNewId();\r\n    this.duration = duration;\r\n    this.probability = probability;\r\n    this.name = name;\r\n  }\r\n\r\n  /**\r\n   * @param {State} state\r\n   * @return {boolean}\r\n   */\r\n  equals (state) {\r\n    return this.id === state.id;\r\n  }\r\n\r\n  /** @param {State} states */\r\n  static drawNextState (...states) {\r\n    let range = states.reduce(((acc, val) => acc + val.probability), 0);\r\n    let draw = Math.random() * range;\r\n\r\n    for (let i = 0; i < states.length; i++) {\r\n      if (states[i].probability >= draw) {\r\n        return states[i];\r\n      } else {\r\n        draw -= states[i].probability;\r\n      }\r\n    }\r\n\r\n    throw new Error('Something weird happened.');\r\n  }\r\n}\r\n","import readonly from '@/utils/readonly';\r\nimport ObjectIdManager from '@/Helpers/UniqueIdFactory';\r\nimport State from '@/Object/State';\r\n\r\nexport default class SurfaceObject {\r\n  @readonly\r\n  static TYPE_SHOOTER = 'shooter';\r\n  @readonly\r\n  static TYPE_PULSAR = 'pulsar';\r\n  @readonly\r\n  static TYPE_SPIKER = 'spiker';\r\n  @readonly\r\n  static TYPE_SPIKE = 'spike';\r\n  @readonly\r\n  static TYPE_FLIPPER_TANKER = 'flipperTanker';\r\n  @readonly\r\n  static TYPE_FUSEBALL_TANKER = 'fuseballTanker';\r\n  @readonly\r\n  static TYPE_PULSAR_TANKER = 'pulsarTanker';\r\n  @readonly\r\n  static TYPE_FLIPPER = 'flipper';\r\n  @readonly\r\n  static TYPE_FUSEBALL = 'fuseball';\r\n  @readonly\r\n  static TYPE_PROJECTILE = 'projectile';\r\n\r\n  /** @var {Surface} */\r\n  surface;\r\n\r\n  /** @var {number} */\r\n  objectId;\r\n\r\n  /** @var {number} */\r\n  laneId = 0;\r\n  /** @var {number} */\r\n  prevLaneId = -1;\r\n  /** @var {boolean} */\r\n  laneChangeMapsNeedUpdate = true;\r\n\r\n  /** @var {string} */\r\n  type;\r\n  /** @var {boolean} */\r\n  alive = true;\r\n  /** @var {boolean} */\r\n  hittable = true;\r\n  /** @var {boolean} */\r\n  canExplode = true;\r\n\r\n  /** @var {number} */\r\n  zPosition = 0;\r\n  /** @var {number} */\r\n  zSpeed = 0;\r\n\r\n  /** @var {State} */\r\n  state = new State(0);\r\n  /** @var {State} */\r\n  prevState = new State(0);\r\n  /** @var {number} */\r\n  lastStateChange;\r\n\r\n  /** @var {number} */\r\n  flags = 0;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {number} laneId\r\n   * @param {string} type\r\n   */\r\n  constructor (surface, laneId, type) {\r\n    this.surface = surface;\r\n    this.laneId = this.surface.getActualLaneIdFromProjectedMovement(laneId);\r\n    this.type = type;\r\n    this.objectId = ObjectIdManager.getNewId();\r\n  }\r\n\r\n  update () {\r\n    throw new Error('Method \\'update()\\' must be implemented.');\r\n  }\r\n\r\n  die () {\r\n    throw new Error('Method \\'die()\\' must be implemented.');\r\n  }\r\n\r\n  hitByProjectile () {\r\n    this.die();\r\n  }\r\n\r\n  disappear () {\r\n    throw new Error('Method \\'disappear()\\' must be implemented.');\r\n  }\r\n\r\n  /**\r\n   * @param {number} laneId\r\n   */\r\n  setLane (laneId) {\r\n    this.prevLaneId = this.laneId;\r\n    this.laneId = this.surface.getActualLaneIdFromProjectedMovement(laneId);\r\n    this.laneChangeMapsNeedUpdate = true;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  shouldUpdateFIFOMaps () {\r\n    if (!this.laneChangeMapsNeedUpdate) {\r\n      return false;\r\n    }\r\n\r\n    this.laneChangeMapsNeedUpdate = false;\r\n    return this.laneId !== this.prevLaneId;\r\n  }\r\n\r\n  /** @param {State} state */\r\n  setState (state) {\r\n    this.prevState = this.state;\r\n    this.state = state;\r\n    this.lastStateChange = Date.now();\r\n  }\r\n\r\n  /**\r\n   * @return {number}\r\n   */\r\n  timeSinceLastStateChange () {\r\n    return Date.now() - this.lastStateChange;\r\n  }\r\n\r\n  /**\r\n   * @return {number} 0 - 100%\r\n   */\r\n  stateProgressInTime () {\r\n    let timeSienceLastStateChange = this.timeSinceLastStateChange();\r\n\r\n    if (timeSienceLastStateChange >= this.state.duration) {\r\n      return 1;\r\n    } else {\r\n      return timeSienceLastStateChange / this.state.duration;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  canChangeState () {\r\n    return this.timeSinceLastStateChange() > this.state.duration;\r\n  }\r\n\r\n  /**\r\n   * @param {State} state\r\n   * @return {boolean}\r\n   */\r\n  inState (state) {\r\n    return this.state.equals(state);\r\n  }\r\n\r\n  /**\r\n   * @param {State} state\r\n   * @return {boolean}\r\n   */\r\n  prevInState (state) {\r\n    return this.prevState.equals(state);\r\n  }\r\n\r\n  /**\r\n   * @param {number} flag\r\n   */\r\n  setFlag (flag) {\r\n    this.flags |= flag;\r\n  }\r\n\r\n  /**\r\n   * @param {number} flag\r\n   */\r\n  unsetFlag (flag) {\r\n    this.flags &= ~flag;\r\n  }\r\n\r\n  clearFlags () {\r\n    this.flags = 0;\r\n  }\r\n\r\n  /**\r\n   * @param {number} flag\r\n   * @return {boolean}\r\n   */\r\n  isFlagSet (flag) {\r\n    return (this.flags & flag) > 0;\r\n  }\r\n\r\n  /**\r\n   * @param {number} flag\r\n   * @return {boolean}\r\n   */\r\n  isFlagNotSet (flag) {\r\n    return !this.isFlagSet(flag);\r\n  }\r\n}\r\n","import readonly from '@/utils/readonly';\r\nimport SurfaceObject from '@/Object/Surface/SurfaceObject';\r\n\r\nexport default class Projectile extends SurfaceObject {\r\n  @readonly\r\n  static PROJECTILE_SPEED = 0.028;\r\n  @readonly\r\n  static PROJECTILE_KILL_RADIUS_FORWARD = 0.02;\r\n  @readonly\r\n  static PROJECTILE_KILL_RADIUS_BACKWARD = 0.08;\r\n\r\n  @readonly\r\n  static SOURCE_SHOOTER = 1;\r\n  @readonly\r\n  static SOURCE_ENEMY = -1;\r\n\r\n  /** @bar {boolean} */\r\n  canExplode = false;\r\n\r\n  /** @var {number} */\r\n  source;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {number} laneId\r\n   * @param {number} source\r\n   * @param {?number} zPosition\r\n   */\r\n  constructor (surface, laneId, source, zPosition = null) {\r\n    super(surface, laneId, SurfaceObject.TYPE_PROJECTILE);\r\n\r\n    this.source = source;\r\n\r\n    if (this.source === Projectile.SOURCE_SHOOTER) {\r\n      this.zPosition = zPosition ?? 0;\r\n      this.zSpeed = Projectile.PROJECTILE_SPEED;\r\n    } else {\r\n      this.zPosition = zPosition ?? 1;\r\n      this.zSpeed = -Projectile.PROJECTILE_SPEED;\r\n    }\r\n  }\r\n\r\n  update () {\r\n    if (!this.alive) {\r\n      return;\r\n    }\r\n\r\n    this.zPosition += this.zSpeed;\r\n\r\n    this.alive = (\r\n      (this.source === Projectile.SOURCE_SHOOTER && this.zPosition >= 1)\r\n      || (this.source === Projectile.SOURCE_ENEMY && this.zPosition <= 0)\r\n    ) === false;\r\n  }\r\n\r\n  /**\r\n   * @param {array} laneObjects\r\n   * @return {number} index of colliding object or -1\r\n   */\r\n  detectCollision (laneObjects) {\r\n    if (!this.alive) {\r\n      return -1;\r\n    }\r\n\r\n    let collision = laneObjects.findIndex(object => (\r\n      object.hittable\r\n      && object.alive\r\n      && object.zPosition >= this.zPosition - Projectile.PROJECTILE_KILL_RADIUS_BACKWARD\r\n      && object.zPosition <= this.zPosition + Projectile.PROJECTILE_KILL_RADIUS_FORWARD\r\n      )\r\n    );\r\n\r\n    if (collision >= 0) {\r\n      // console.log(`Hit ${laneObjects[collision].type}.`);\r\n      laneObjects[collision].hitByProjectile();\r\n      this.alive = false;\r\n    }\r\n\r\n    return collision;\r\n  }\r\n\r\n  hitByProjectile () {\r\n    // console.log('Projectile collision detected');\r\n    this.alive = false;\r\n  }\r\n\r\n  disappear () {\r\n    this.alive = false;\r\n  }\r\n}\r\n","import SurfaceObject from '@/Object/Surface/SurfaceObject';\r\nimport Projectile from '@/Object/Projectiles/Projectile';\r\n\r\nexport default class ShootingSurfaceObject extends SurfaceObject {\r\n  /** @var {ProjectileManager} */\r\n  projectileManager;\r\n\r\n  /** @var {number} */\r\n  projectileSource;\r\n\r\n  /** @var {number} */\r\n  lastShootTimestamp;\r\n  /** @var {number} */\r\n  shootTimeoutMs;\r\n\r\n  /** @var {boolean} */\r\n  canShoot = true;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {number} laneId\r\n   * @param {string} type\r\n   */\r\n  constructor (surface, projectileManager, laneId, type) {\r\n    super(surface, laneId, type);\r\n\r\n    this.projectileManager = projectileManager;\r\n    this.projectileSource = type === SurfaceObject.TYPE_SHOOTER ? Projectile.SOURCE_SHOOTER : Projectile.SOURCE_ENEMY;\r\n  }\r\n\r\n  update () {\r\n    if (!this.alive) {\r\n      return;\r\n    }\r\n\r\n    if (this.canChangeState()) {\r\n      this.updateState();\r\n    }\r\n\r\n    this.updateEntity();\r\n  }\r\n\r\n  updateState () {\r\n    throw new Error('Method \\'updateState()\\' must be implemented.');\r\n  }\r\n\r\n  updateEntity () {\r\n    throw new Error('Method \\'updateEntity()\\' must be implemented.');\r\n  }\r\n\r\n  fire () {\r\n    if (!this.canShoot) {\r\n      return;\r\n    }\r\n\r\n    let now = Date.now();\r\n\r\n    if (now - this.lastShootTimestamp < this.shootTimeoutMs) {\r\n      return;\r\n    }\r\n\r\n    this.lastShootTimestamp = now;\r\n    return this.projectileManager.fire(this.laneId, this.projectileSource, this.zPosition);\r\n  }\r\n}\r\n","import readonly from '@/utils/readonly';\r\n\r\nexport class MessageBroker {\r\n  @readonly\r\n  static TOPIC_AUDIO = 'topic_audio';\r\n  @readonly\r\n  static TOPIC_SCREEN = 'topic_screen';\r\n\r\n  @readonly\r\n  static MESSAGE_PLAYER_DEATH = 'message_player_death';\r\n  @readonly\r\n  static MESSAGE_PLAYER_CHANGED_LANE = 'message_player_changed_lane';\r\n  @readonly\r\n  static MESSAGE_NEXT_LEVEL = 'message_next_level';\r\n  @readonly\r\n  static MESSAGE_PLAYER_SHOOT = 'message_player_shoot';\r\n  @readonly\r\n  static MESSAGE_PLAYER_SUPERZAPPER_USED = 'message_player_superzapper_used';\r\n  @readonly\r\n  static MESSAGE_ENEMY_SHOOT = 'message_enemy_shoot';\r\n  @readonly\r\n  static MESSAGE_ENEMY_DEATH = 'message_enemy_death';\r\n  @readonly\r\n  static MESSAGE_MENU_CHANGE = 'message_menu_change';\r\n  @readonly\r\n  static MESSAGE_MENU_SELECT = 'message_menu_select';\r\n\r\n  /** {Message[][]} messages */\r\n  messages = [];\r\n\r\n  /**\r\n   * @param {string} topic\r\n   * @param {string} message\r\n   * @param {array} context\r\n   */\r\n  publish (topic, message, context = []) {\r\n    if (!(topic in this.messages)) {\r\n      this.messages[topic] = [];\r\n    }\r\n\r\n    this.messages[topic].push(new Message(topic, message, context));\r\n\r\n    console.log(`Published ${message} under ${topic}`);\r\n  }\r\n\r\n  /**\r\n   * @param {string} topic\r\n   * @return {?Message}\r\n   */\r\n  consume (topic) {\r\n    if (!(topic in this.messages)) {\r\n      return null;\r\n    }\r\n\r\n    if (this.messages[topic].length === 0) {\r\n      return null;\r\n    }\r\n\r\n    console.log(`Consumed ${this.messages[topic][0].message} under ${topic}`);\r\n    return this.messages[topic].shift();\r\n  }\r\n}\r\n\r\nexport class Message {\r\n  /** {string} */\r\n  topic;\r\n  /** {string} */\r\n  message;\r\n  /** {array} */\r\n  context;\r\n\r\n  /**\r\n   * @param {string} topic\r\n   * @param {string} message\r\n   * @param {array} context\r\n   */\r\n  constructor (topic, message, context = []) {\r\n    this.topic = topic;\r\n    this.message = message;\r\n    this.context = context;\r\n  }\r\n\r\n  /**\r\n   * @param {string} topic\r\n   * @return {boolean}\r\n   */\r\n  isTopic (topic) {\r\n    return this.topic === topic;\r\n  }\r\n\r\n  /**\r\n   * @param {string} message\r\n   * @return {boolean}\r\n   */\r\n  isMessage (message) {\r\n    return this.message === message;\r\n  }\r\n}\r\n\r\nconst messageBroker = new MessageBroker();\r\nexport default messageBroker;\r\n","import readonly from '@/utils/readonly';\r\nimport ShootingSurfaceObject from '@/Object/Surface/ShootingSurfaceObject';\r\nimport messageBroker, { MessageBroker } from '@/Helpers/MessageBroker';\r\n\r\nexport default class Enemy extends ShootingSurfaceObject {\r\n  @readonly\r\n  static SHOOT_TIMEOUT_MS = 100;\r\n\r\n  /** @var {number} */\r\n  firstLevel;\r\n\r\n  /** @var {number} */\r\n  valueInPoints;\r\n\r\n  /** @var {function} */\r\n  rewardCallback;\r\n\r\n  /** @var {boolean} */\r\n  reward = false;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {function} rewardCallback\r\n   * @param {number} laneId\r\n   * @param {number} zPosition\r\n   * @param {string} type\r\n   */\r\n  constructor (surface, projectileManager, rewardCallback, laneId, zPosition, type) {\r\n    super(surface, projectileManager, laneId, type);\r\n\r\n    this.zPosition = zPosition;\r\n\r\n    this.rewardCallback = rewardCallback;\r\n    this.shootTimeoutMs = Enemy.SHOOT_TIMEOUT_MS;\r\n\r\n    if (this.constructor === Enemy) {\r\n      throw new Error('Abstract classes can\\'t be instantiated.');\r\n    }\r\n  }\r\n\r\n  hitByProjectile () {\r\n    this.reward = true;\r\n    this.die();\r\n  }\r\n\r\n  fire () {\r\n    if (super.fire()) {\r\n      messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_ENEMY_SHOOT);\r\n    }\r\n  }\r\n\r\n  die () {\r\n    this.hittable = false;\r\n    this.canShoot = false;\r\n    this.clearFlags();\r\n\r\n    if (this.reward === true) {\r\n      this.reward = false;\r\n      this.rewardCallback(this.valueInPoints);\r\n\r\n      messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_ENEMY_DEATH);\r\n    }\r\n  }\r\n}\r\n","const randomRange = (low, high) => Math.floor(Math.random() * (high - low) + low);\r\nexport default randomRange;\r\n","import Enemy from '@/Object/Enemies/Enemy';\r\nimport SurfaceObject from '@/Object/Surface/SurfaceObject';\r\nimport randomRange from '@/utils/randomRange';\r\nimport readonly from '@/utils/readonly';\r\nimport State from '@/Object/State';\r\n\r\nexport default class EnemyFlipper extends Enemy {\r\n  @readonly\r\n  static STATE_IDLE = new State(100, 1, 'idle');\r\n  @readonly\r\n  static STATE_ROTATING_BEGIN = new State(175, 0.2, 'rotate_begin');\r\n  @readonly\r\n  static STATE_ROTATING_END = new State(175, 1, 'rotate_end');\r\n  @readonly\r\n  static STATE_SHOOTING = new State(100, 0.1, 'shooting');\r\n  @readonly\r\n  static STATE_DISAPPEARING = new State(1000, 1, 'disappearing');\r\n  @readonly\r\n  static STATE_EXPLODING = new State(1000, 1, 'exploding');\r\n  @readonly\r\n  static STATE_DEAD = new State(0, 1, 'dead');\r\n\r\n  @readonly\r\n  static FLAG_REACHED_TOP = 0x1;\r\n  @readonly\r\n  static FLAG_SHOOTS_FIRED = 0x2;\r\n  @readonly\r\n  static FLAG_LANE_CHANGED = 0x4;\r\n  @readonly\r\n  static FLAG_ROTATION_CW = 0x8;\r\n  @readonly\r\n  static FLAG_ROTATION_CCW = 0x10;\r\n  @readonly\r\n  static FLAG_ROTATION_DIR_CHOSEN = 0x20;\r\n  @readonly\r\n  static FLAG_IMMUNE_ROTATION = 0x40;\r\n  @readonly\r\n  static FLAG_REACHED_SHOOTER = 0x80;\r\n  @readonly\r\n  static FLAG_CANNOT_FLIP = 0x100;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {function} rewardCallback\r\n   * @param {number} laneId\r\n   * @param {number} zPosition\r\n   */\r\n  constructor (surface, projectileManager, rewardCallback, laneId = 0, zPosition = 1) {\r\n    super(surface, projectileManager, rewardCallback, laneId, zPosition, SurfaceObject.TYPE_FLIPPER);\r\n\r\n    this.firstLevel = 1;\r\n    this.valueInPoints = 150;\r\n\r\n    this.zSpeed = -randomRange(6, 9) * 0.001;\r\n    this.setState(EnemyFlipper.STATE_IDLE);\r\n  }\r\n\r\n  updateState () {\r\n    if (this.inState(EnemyFlipper.STATE_IDLE)) {\r\n      if (this.isFlagSet(EnemyFlipper.FLAG_REACHED_TOP)) {\r\n        this.setState(EnemyFlipper.STATE_ROTATING_BEGIN);\r\n\r\n      } else {\r\n        this.setState(\r\n          State.drawNextState(\r\n            EnemyFlipper.STATE_IDLE,\r\n            EnemyFlipper.STATE_SHOOTING,\r\n            this.isFlagNotSet(EnemyFlipper.FLAG_CANNOT_FLIP)\r\n              ? EnemyFlipper.STATE_ROTATING_BEGIN\r\n              : EnemyFlipper.STATE_IDLE\r\n          )\r\n        );\r\n      }\r\n\r\n    } else if (this.inState(EnemyFlipper.STATE_ROTATING_BEGIN)) {\r\n      this.setState(EnemyFlipper.STATE_ROTATING_END);\r\n\r\n      if (this.isFlagSet(EnemyFlipper.FLAG_IMMUNE_ROTATION)) {\r\n        this.unsetFlag(EnemyFlipper.FLAG_IMMUNE_ROTATION);\r\n        this.hittable = true;\r\n      }\r\n\r\n    } else if (this.inState(EnemyFlipper.STATE_ROTATING_END)) {\r\n      if (this.isFlagSet(EnemyFlipper.FLAG_REACHED_TOP)) {\r\n        this.setState(EnemyFlipper.STATE_ROTATING_BEGIN);\r\n      } else {\r\n        this.setState(EnemyFlipper.STATE_IDLE);\r\n      }\r\n      this.unsetFlag(EnemyFlipper.FLAG_LANE_CHANGED);\r\n      this.unsetFlag(EnemyFlipper.FLAG_ROTATION_CW);\r\n      this.unsetFlag(EnemyFlipper.FLAG_ROTATION_CCW);\r\n      this.unsetFlag(EnemyFlipper.FLAG_ROTATION_DIR_CHOSEN);\r\n\r\n    } else if (this.inState(EnemyFlipper.STATE_SHOOTING)) {\r\n      this.setState(EnemyFlipper.STATE_IDLE);\r\n      this.unsetFlag(EnemyFlipper.FLAG_SHOOTS_FIRED);\r\n\r\n    } else if (this.inState(EnemyFlipper.STATE_EXPLODING)) {\r\n      this.setState(EnemyFlipper.STATE_DEAD);\r\n\r\n    } else if (this.inState(EnemyFlipper.STATE_DISAPPEARING)) {\r\n      this.setState(EnemyFlipper.STATE_DEAD);\r\n    }\r\n  }\r\n\r\n  updateEntity () {\r\n    if (this.inState(EnemyFlipper.STATE_DEAD)) {\r\n      this.alive = false;\r\n    }\r\n\r\n    if (this.zPosition <= 0 && this.isFlagNotSet(EnemyFlipper.FLAG_REACHED_TOP)) {\r\n      this.setFlag(EnemyFlipper.FLAG_REACHED_TOP);\r\n      this.zPosition = 0;\r\n    }\r\n\r\n    if (this.inState(EnemyFlipper.STATE_ROTATING_BEGIN) && this.isFlagNotSet(EnemyFlipper.FLAG_ROTATION_DIR_CHOSEN)) {\r\n      this.setFlag(EnemyFlipper.FLAG_ROTATION_DIR_CHOSEN);\r\n\r\n      if (this.isFlagSet(EnemyFlipper.FLAG_REACHED_TOP)) {\r\n        let direction = this.surface.getShortestPathDirection(this.laneId, this.surface.activeLaneId);\r\n\r\n        if (direction === 1) {\r\n          this.setFlag(EnemyFlipper.FLAG_ROTATION_CCW);\r\n          this.unsetFlag(EnemyFlipper.FLAG_ROTATION_CW);\r\n          this.unsetFlag(EnemyFlipper.FLAG_REACHED_SHOOTER);\r\n        } else if (direction === -1) {\r\n          this.setFlag(EnemyFlipper.FLAG_ROTATION_CW);\r\n          this.unsetFlag(EnemyFlipper.FLAG_ROTATION_CCW);\r\n          this.unsetFlag(EnemyFlipper.FLAG_REACHED_SHOOTER);\r\n        } else {\r\n          this.setFlag(EnemyFlipper.FLAG_REACHED_SHOOTER);\r\n        }\r\n      } else {\r\n        if (this.isFlagNotSet(EnemyFlipper.FLAG_ROTATION_CW) && this.isFlagNotSet(EnemyFlipper.FLAG_ROTATION_CCW)) {\r\n          let canRotateCCW = this.surface.getActualLaneIdFromProjectedMovement(this.laneId + 1) !== this.laneId;\r\n          let canRotateCW = this.surface.getActualLaneIdFromProjectedMovement(this.laneId - 1) !== this.laneId;\r\n\r\n          if (canRotateCCW && canRotateCW) {\r\n            this.setFlag(Math.random() > 0.5 ? EnemyFlipper.FLAG_ROTATION_CW : EnemyFlipper.FLAG_ROTATION_CCW);\r\n          } else if (canRotateCW) {\r\n            this.setFlag(EnemyFlipper.FLAG_ROTATION_CW);\r\n          } else {\r\n            this.setFlag(EnemyFlipper.FLAG_ROTATION_CCW);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.inState(EnemyFlipper.STATE_ROTATING_END) && this.isFlagNotSet(EnemyFlipper.FLAG_LANE_CHANGED)) {\r\n      this.setFlag(EnemyFlipper.FLAG_LANE_CHANGED);\r\n\r\n      if (this.isFlagSet(EnemyFlipper.FLAG_ROTATION_CW) || this.isFlagSet(EnemyFlipper.FLAG_ROTATION_CCW)) {\r\n        let direction = this.isFlagSet(EnemyFlipper.FLAG_ROTATION_CCW) ? 1 : -1;\r\n        this.setLane(this.laneId + direction);\r\n      }\r\n    }\r\n\r\n    if (this.inState(EnemyFlipper.STATE_SHOOTING) && this.isFlagNotSet(EnemyFlipper.FLAG_SHOOTS_FIRED)) {\r\n      this.setFlag(EnemyFlipper.FLAG_SHOOTS_FIRED);\r\n      this.fire();\r\n    }\r\n\r\n    if (this.isFlagNotSet(EnemyFlipper.FLAG_REACHED_TOP) && !this.inState(EnemyFlipper.STATE_EXPLODING)) {\r\n      this.zPosition += this.zSpeed;\r\n    }\r\n  }\r\n\r\n  cannotFlip () {\r\n    this.setFlag(EnemyFlipper.FLAG_CANNOT_FLIP);\r\n  }\r\n\r\n  immuneDuringNextRotation () {\r\n    this.setFlag(EnemyFlipper.FLAG_IMMUNE_ROTATION);\r\n    this.hittable = false;\r\n  }\r\n\r\n  disappear () {\r\n    if (this.inState(EnemyFlipper.STATE_EXPLODING) || this.inState(EnemyFlipper.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    this.setState(EnemyFlipper.STATE_DISAPPEARING);\r\n    super.die();\r\n  }\r\n\r\n  die () {\r\n    if (this.inState(EnemyFlipper.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    this.setState(EnemyFlipper.STATE_EXPLODING);\r\n    super.die();\r\n  }\r\n}\r\n","import Enemy from '@/Object/Enemies/Enemy';\nimport SurfaceObject from '@/Object/Surface/SurfaceObject';\nimport randomRange from '@/utils/randomRange';\nimport readonly from '@/utils/readonly';\nimport State from '@/Object/State';\n\nexport default class EnemyFuseball extends Enemy {\n  @readonly\n  static MIN_Z_POSITION = 0.1;\n  @readonly\n  static MAX_Z_POSITION = 0.9;\n  @readonly\n  static MIN_AMOUNT_OF_LANE_CHANGES_UNTIL_TOP = 2;\n  @readonly\n  static MAX_AMOUNT_OF_LANE_CHANGES_UNTIL_TOP = 10;\n\n  @readonly\n  static STATE_MOVING_ALONG_LINE = new State(1500, 1, 'moving_along_line');\n  @readonly\n  static STATE_SWITCHING_LANE = new State(2000, 1, 'switching_lane');\n  @readonly\n  static STATE_DISAPPEARING = new State(1000, 1, 'disappearing');\n  @readonly\n  static STATE_EXPLODING = new State(1000, 1, 'exploding');\n  @readonly\n  static STATE_DEAD = new State(0, 1, 'dead');\n\n  @readonly\n  static FLAG_REACHED_TOP = 0x1;\n  @readonly\n  static FLAG_LANE_CHANGED = 0x2;\n  @readonly\n  static FLAG_SWITCHING_LANE_CW = 0x4;\n  @readonly\n  static FLAG_SWITCHING_LANE_CCW = 0x8;\n  @readonly\n  static FLAG_SET_LANE_CW = 0x10;\n  @readonly\n  static FLAG_SET_LANE_CCW = 0x20;\n  @readonly\n  static FLAG_SWITCHING_DIR_CHOSEN = 0x40;\n  @readonly\n  static FLAG_MOVING_TARGET_CHOSEN = 0x80;\n  @readonly\n  static FLAG_IMMUNE = 0x100;\n  @readonly\n  static FLAG_REACHED_SHOOTER = 0x200;\n\n  /** {number} */\n  zBase = 0;\n  /** {number} */\n  zTarget = 0;\n\n  /** {number} */\n  laneChanges = 0;\n  /** {number} */\n  lastLaneSwitchingProgress = 0;\n\n  /**\n   * @param {Surface} surface\n   * @param {ProjectileManager} projectileManager\n   * @param {function} rewardCallback\n   * @param {number} laneId\n   * @param {number} zPosition\n   */\n  constructor (surface, projectileManager, rewardCallback, laneId = 0, zPosition = 1) {\n    super(surface, projectileManager, rewardCallback, laneId, zPosition, SurfaceObject.TYPE_FUSEBALL);\n\n    this.firstLevel = 11;\n    this.valueInPoints = 250;\n\n    this.setState(EnemyFuseball.STATE_MOVING_ALONG_LINE);\n    this.setFlag(EnemyFuseball.FLAG_IMMUNE);\n  }\n\n  updateState () {\n    if (this.inState(EnemyFuseball.STATE_MOVING_ALONG_LINE)) {\n      this.setState(EnemyFuseball.STATE_SWITCHING_LANE);\n\n      this.unsetFlag(EnemyFuseball.FLAG_IMMUNE);\n      this.unsetFlag(EnemyFuseball.FLAG_MOVING_TARGET_CHOSEN);\n\n    } else if (this.inState(EnemyFuseball.STATE_SWITCHING_LANE)) {\n      if (this.isFlagSet(EnemyFuseball.FLAG_REACHED_TOP)) {\n        this.setState(EnemyFuseball.STATE_SWITCHING_LANE);\n      } else {\n        this.setState(EnemyFuseball.STATE_MOVING_ALONG_LINE);\n      }\n\n      if (this.isFlagSet(EnemyFuseball.FLAG_SWITCHING_LANE_CW)) {\n        this.setFlag(EnemyFuseball.FLAG_SET_LANE_CW);\n      }\n\n      this.setFlag(EnemyFuseball.FLAG_IMMUNE);\n      this.unsetFlag(EnemyFuseball.FLAG_SWITCHING_DIR_CHOSEN);\n      this.unsetFlag(EnemyFuseball.FLAG_SWITCHING_LANE_CCW);\n      this.unsetFlag(EnemyFuseball.FLAG_SWITCHING_LANE_CW);\n      this.unsetFlag(EnemyFuseball.FLAG_LANE_CHANGED);\n\n    } else if (this.inState(EnemyFuseball.STATE_EXPLODING)) {\n      this.setState(EnemyFuseball.STATE_DEAD);\n\n    } else if (this.inState(EnemyFuseball.STATE_DISAPPEARING)) {\n      this.setState(EnemyFuseball.STATE_DEAD);\n    }\n  }\n\n  updateEntity () {\n    if (this.inState(EnemyFuseball.STATE_DEAD)) {\n      this.alive = false;\n    }\n\n    if (!this.inState(EnemyFuseball.STATE_EXPLODING)) {\n      this.hittable = !this.isFlagSet(EnemyFuseball.FLAG_IMMUNE);\n    }\n\n    if (\n      this.inState(EnemyFuseball.STATE_SWITCHING_LANE)\n      && this.isFlagNotSet(EnemyFuseball.FLAG_SWITCHING_DIR_CHOSEN)\n    ) {\n      this.setFlag(EnemyFuseball.FLAG_SWITCHING_DIR_CHOSEN);\n\n      if (this.isFlagSet(EnemyFuseball.FLAG_REACHED_TOP)) {\n        let direction = this.surface.getShortestPathDirection(this.laneId, this.surface.activeLaneId);\n\n        if (direction === -1) {\n          this.setFlag(EnemyFuseball.FLAG_SWITCHING_LANE_CCW);\n          this.setFlag(EnemyFuseball.FLAG_SET_LANE_CCW);\n          this.unsetFlag(EnemyFuseball.FLAG_SWITCHING_LANE_CW);\n          this.unsetFlag(EnemyFuseball.FLAG_REACHED_SHOOTER);\n        } else if (direction === 1) {\n          this.setFlag(EnemyFuseball.FLAG_SWITCHING_LANE_CW);\n          this.setFlag(EnemyFuseball.FLAG_SET_LANE_CW);\n          this.unsetFlag(EnemyFuseball.FLAG_SWITCHING_LANE_CCW);\n          this.unsetFlag(EnemyFuseball.FLAG_REACHED_SHOOTER);\n        } else {\n          this.setFlag(EnemyFuseball.FLAG_REACHED_SHOOTER);\n        }\n      } else {\n        if (\n          this.isFlagNotSet(EnemyFuseball.FLAG_SWITCHING_LANE_CW)\n          && this.isFlagNotSet(EnemyFuseball.FLAG_SWITCHING_LANE_CCW)\n        ) {\n          let canSwitchCCW = this.surface.getActualLaneIdFromProjectedMovement(this.laneId + 1) !== this.laneId;\n          let canSwitchCW = this.surface.getActualLaneIdFromProjectedMovement(this.laneId - 1) !== this.laneId;\n\n          if (canSwitchCCW && canSwitchCW) {\n            if (Math.random() > 0.5) {\n              this.setFlag(EnemyFuseball.FLAG_SWITCHING_LANE_CW);\n            } else {\n              this.setFlag(EnemyFuseball.FLAG_SWITCHING_LANE_CCW);\n              this.setFlag(EnemyFuseball.FLAG_SET_LANE_CCW);\n            }\n          } else if (canSwitchCW) {\n            this.setFlag(EnemyFuseball.FLAG_SWITCHING_LANE_CW);\n          } else {\n            this.setFlag(EnemyFuseball.FLAG_SWITCHING_LANE_CCW);\n            this.setFlag(EnemyFuseball.FLAG_SET_LANE_CCW);\n          }\n        }\n      }\n    }\n\n    if (this.inState(EnemyFuseball.STATE_SWITCHING_LANE) && this.isFlagNotSet(EnemyFuseball.FLAG_LANE_CHANGED)) {\n      this.setFlag(EnemyFuseball.FLAG_LANE_CHANGED);\n      this.laneChanges++;\n    }\n\n    if (this.isFlagSet(EnemyFuseball.FLAG_SET_LANE_CW) || this.isFlagSet(EnemyFuseball.FLAG_SET_LANE_CCW)) {\n      let direction = this.isFlagSet(EnemyFuseball.FLAG_SET_LANE_CW) ? 1 : -1;\n\n      this.setLane(this.laneId + direction);\n\n      this.unsetFlag(EnemyFuseball.FLAG_SET_LANE_CW);\n      this.unsetFlag(EnemyFuseball.FLAG_SET_LANE_CCW);\n    }\n\n    if (\n      this.inState(EnemyFuseball.STATE_MOVING_ALONG_LINE)\n      && this.isFlagNotSet(EnemyFuseball.FLAG_MOVING_TARGET_CHOSEN)\n      && this.isFlagNotSet(EnemyFuseball.FLAG_REACHED_TOP)\n    ) {\n      this.setFlag(EnemyFuseball.FLAG_MOVING_TARGET_CHOSEN);\n      this.zBase = this.zPosition;\n      this.zTarget = randomRange(EnemyFuseball.MIN_Z_POSITION * 10, EnemyFuseball.MAX_Z_POSITION * 10) / 10;\n\n      if (this.laneChanges >= EnemyFuseball.MIN_AMOUNT_OF_LANE_CHANGES_UNTIL_TOP) {\n        let x = (this.laneChanges - EnemyFuseball.MIN_AMOUNT_OF_LANE_CHANGES_UNTIL_TOP)\n          / EnemyFuseball.MAX_AMOUNT_OF_LANE_CHANGES_UNTIL_TOP;\n\n        if (Math.random() < x * x) {\n          this.zTarget = 0;\n        }\n      }\n    }\n\n    if (this.inState(EnemyFuseball.STATE_SWITCHING_LANE)) {\n      this.zPosition = this.zTarget;\n      this.lastLaneSwitchingProgress = this.stateProgressInTime();\n\n      if (this.zPosition === 0) {\n        this.setFlag(EnemyFuseball.FLAG_REACHED_TOP);\n      }\n    }\n\n    if (this.inState(EnemyFuseball.STATE_MOVING_ALONG_LINE)) {\n      this.zPosition = this.zBase + (this.zTarget - this.zBase) * this.stateProgressInTime();\n    }\n  }\n\n  immuneDuringNextLaneSwitch () {\n    this.setFlag(EnemyFuseball.FLAG_IMMUNE);\n    this.hittable = false;\n  }\n\n  disappear () {\n    if (this.inState(EnemyFuseball.STATE_EXPLODING) || this.inState(EnemyFuseball.STATE_DEAD)) {\n      return;\n    }\n\n    this.setState(EnemyFuseball.STATE_DISAPPEARING);\n    super.die();\n  }\n\n  die () {\n    if (this.inState(EnemyFuseball.STATE_DEAD)) {\n      return;\n    }\n\n    this.setState(EnemyFuseball.STATE_EXPLODING);\n    super.die();\n  }\n}\n","import readonly from '@/utils/readonly';\r\nimport SurfaceObject from '@/Object/Surface/SurfaceObject';\r\nimport ShootingSurfaceObject from '@/Object/Surface/ShootingSurfaceObject';\r\nimport State from '@/Object/State';\r\nimport EnemyFlipper from '@/Object/Enemies/EnemyFlipper';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport EnemyFuseball from '@/Object/Enemies/EnemyFuseball';\r\nimport messageBroker, { MessageBroker } from '@/Helpers/MessageBroker';\r\n\r\nexport default class Shooter extends ShootingSurfaceObject {\r\n  @readonly\r\n  static LANE_CHANGE_TIMEOUT_MS = 50;\r\n  @readonly\r\n  static SHOOT_TIMEOUT_MS = 80;\r\n  @readonly\r\n  static BURST_PENALTY_MS = 500;\r\n\r\n  @readonly\r\n  static TUBE_DESCENDING_LENGTH_MULTIPLIER = 2;\r\n  @readonly\r\n  static TUBE_APPROACHING_LENGTH_MULTIPLIER = 4;\r\n  @readonly\r\n  static COLLISION_RADIUS_FORWARD = 0;\r\n  @readonly\r\n  static COLLISION_RADIUS_BACKWARD = 0.08;\r\n\r\n  /** @var {number} */\r\n  penaltyTimestamp = 0;\r\n\r\n  @readonly\r\n  static STATE_ALIVE = new State(1000, 1, 'alive');\r\n  @readonly\r\n  static STATE_EXPLODING = new State(1000, 1, 'exploding');\r\n  @readonly\r\n  static STATE_DISAPPEARING = new State(1000, 1, 'disappearing');\r\n  @readonly\r\n  static STATE_RENOVATING = new State(1000, 1, 'renovating');\r\n  @readonly\r\n  static STATE_APPROACHING_TUBE = new State(2000, 1, 'approaching_tube');\r\n  @readonly\r\n  static STATE_GOING_DOWN_THE_TUBE = new State(4000, 1, 'going_down_the_tube');\r\n  @readonly\r\n  static STATE_REACHED_TUBE_BOTTOM = new State(0, 1, 'reached_tube_bottom');\r\n  @readonly\r\n  static STATE_DEAD = new State(0, 1, 'dead');\r\n\r\n  @readonly\r\n  static FLAG_ITS_ALREADY_TOO_LATE = 0x1;\r\n  @readonly\r\n  static FLAG_SUPERZAPPER_USED = 0x2;\r\n\r\n  /** @var {number} */\r\n  lastLaneChangeTimestamp;\r\n  /** @var {number} */\r\n  laneChangeTimeoutMs;\r\n\r\n  /** {SurfaceObjectsManager} */\r\n  surfaceObjectsManager;\r\n\r\n  /** @var {function} */\r\n  killedCallback;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {SurfaceObjectsManager} surfaceObjectsManager\r\n   * @param {function} killedCallback\r\n   * @param {number} laneId\r\n   */\r\n  constructor (\r\n    surface,\r\n    projectileManager,\r\n    surfaceObjectsManager,\r\n    killedCallback,\r\n    laneId = 0\r\n  ) {\r\n    super(surface, projectileManager, laneId, SurfaceObject.TYPE_SHOOTER);\r\n\r\n    this.surfaceObjectsManager = surfaceObjectsManager;\r\n    this.killedCallback = killedCallback;\r\n\r\n    this.zPosition = 0;\r\n\r\n    this.shootTimeoutMs = Shooter.SHOOT_TIMEOUT_MS;\r\n    this.laneChangeTimeoutMs = Shooter.LANE_CHANGE_TIMEOUT_MS;\r\n\r\n    this.hittable = false;\r\n    this.canShoot = false;\r\n\r\n    this.surface.setActiveLane(laneId);\r\n    this.setState(Shooter.STATE_APPROACHING_TUBE);\r\n  }\r\n\r\n  updateState () {\r\n    if (this.inState(Shooter.STATE_RENOVATING)) {\r\n      this.hittable = true;\r\n      this.canShoot = true;\r\n\r\n      this.setState(Shooter.STATE_ALIVE);\r\n\r\n    } else if (this.inState(Shooter.STATE_EXPLODING)) {\r\n      this.setState(Shooter.STATE_DEAD);\r\n      this.killedCallback();\r\n\r\n    } else if (this.inState(Shooter.STATE_DISAPPEARING)) {\r\n      this.setState(Shooter.STATE_DEAD);\r\n\r\n    } else if (this.inState(Shooter.STATE_DEAD)) {\r\n      this.alive = false;\r\n\r\n    } else if (this.inState(Shooter.STATE_GOING_DOWN_THE_TUBE)) {\r\n      this.setState(Shooter.STATE_REACHED_TUBE_BOTTOM);\r\n      this.die();\r\n\r\n    } else if (this.inState(Shooter.STATE_APPROACHING_TUBE)) {\r\n      this.hittable = true;\r\n      this.canShoot = true;\r\n\r\n      this.setState(Shooter.STATE_ALIVE);\r\n    }\r\n  }\r\n\r\n  updateEntity () {\r\n    if (this.isFlagNotSet(Shooter.FLAG_ITS_ALREADY_TOO_LATE)) {\r\n      this.handleShortedLanes();\r\n\r\n      if (!this.inState(Shooter.STATE_GOING_DOWN_THE_TUBE)) {\r\n        this.handleCaptureByEnemy();\r\n      } else {\r\n        if (this.zPosition <= 1) {\r\n          this.handleCollisionWithEnemy();\r\n          this.handleCollisionWithSpike();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.inState(Shooter.STATE_GOING_DOWN_THE_TUBE)) {\r\n      this.zPosition = this.stateProgressInTime() * Shooter.TUBE_DESCENDING_LENGTH_MULTIPLIER;\r\n    } else if (this.inState(Shooter.STATE_APPROACHING_TUBE)) {\r\n      this.zPosition = -1 * (1 - this.stateProgressInTime()) * Shooter.TUBE_APPROACHING_LENGTH_MULTIPLIER;\r\n    } else if (this.inState(Shooter.STATE_ALIVE) || this.inState(Shooter.STATE_RENOVATING)) {\r\n      this.zPosition = 0;\r\n    }\r\n  }\r\n\r\n  handleShortedLanes () {\r\n    if (this.surface.isLaneShorted(this.laneId)) {\r\n      this.shockedByPulsar();\r\n    }\r\n  }\r\n\r\n  handleCaptureByEnemy () {\r\n    let enemiesMapRef = this.surfaceObjectsManager.enemiesMap[this.laneId];\r\n\r\n    if (enemiesMapRef.length > 0) {\r\n      enemiesMapRef.forEach(enemy => {\r\n        if (enemy.type === Enemy.TYPE_FLIPPER && enemy.isFlagSet(EnemyFlipper.FLAG_REACHED_SHOOTER)) {\r\n          this.capturedByFlipper();\r\n        }\r\n\r\n        if (enemy.type === Enemy.TYPE_FUSEBALL && enemy.isFlagSet(EnemyFuseball.FLAG_REACHED_SHOOTER)) {\r\n          this.capturedByFuseball();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCollisionWithEnemy () {\r\n    let enemiesMapRef = this.surfaceObjectsManager.enemiesMap[this.laneId];\r\n\r\n    let collision = enemiesMapRef.findIndex(object => (\r\n        object.hittable\r\n        && object.alive\r\n        && object.zPosition >= this.zPosition - Shooter.COLLISION_RADIUS_BACKWARD\r\n        && object.zPosition <= this.zPosition + Shooter.COLLISION_RADIUS_FORWARD\r\n      )\r\n    );\r\n\r\n    if (collision >= 0) {\r\n      enemiesMapRef[collision].hitByProjectile();\r\n      this.hitByProjectile();\r\n    }\r\n  }\r\n\r\n  handleCollisionWithSpike () {\r\n    let spikesMapRef = this.surfaceObjectsManager.spikesMap[this.laneId];\r\n\r\n    let collision = spikesMapRef.findIndex(object => (\r\n        object.hittable\r\n        && object.alive\r\n        && object.zPosition <= this.zPosition + Shooter.COLLISION_RADIUS_FORWARD\r\n      )\r\n    );\r\n\r\n    if (collision >= 0) {\r\n      this.impaledOnSpike();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} desiredLane\r\n   */\r\n  moveToLane (desiredLane) {\r\n    if (!this.inState(Shooter.STATE_ALIVE)\r\n      && !this.inState(Shooter.STATE_GOING_DOWN_THE_TUBE)\r\n      && !this.inState(Shooter.STATE_APPROACHING_TUBE)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let now = Date.now();\r\n\r\n    if (now - this.lastLaneChangeTimestamp < Shooter.LANE_CHANGE_TIMEOUT_MS) {\r\n      return;\r\n    }\r\n\r\n    this.setLane(desiredLane);\r\n    this.surface.setActiveLane(this.laneId);\r\n\r\n    this.lastLaneChangeTimestamp = now;\r\n\r\n    messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_PLAYER_CHANGED_LANE);\r\n  }\r\n\r\n  moveLeft () {\r\n    this.moveToLane(this.laneId + 1);\r\n  }\r\n\r\n  moveRight () {\r\n    this.moveToLane(this.laneId - 1);\r\n  }\r\n\r\n  fire () {\r\n    if (\r\n      !this.canShoot\r\n      || this.zPosition > 1\r\n      || (!this.inState(Shooter.STATE_ALIVE) && !this.inState(Shooter.STATE_GOING_DOWN_THE_TUBE))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let now = Date.now();\r\n\r\n    if (now - this.penaltyTimestamp < Shooter.BURST_PENALTY_MS) {\r\n      return;\r\n    }\r\n\r\n    if (super.fire() === false) {\r\n      this.penaltyTimestamp = now;\r\n    } else {\r\n      messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_PLAYER_SHOOT);\r\n    }\r\n  }\r\n\r\n  hitByProjectile () {\r\n    console.log('BOOM! (projectile)');\r\n    this.setState(Shooter.STATE_EXPLODING);\r\n    this.die();\r\n\r\n    messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_PLAYER_DEATH);\r\n  }\r\n\r\n  capturedByFlipper () {\r\n    console.log('BAM! (flipper)');\r\n    this.setState(Shooter.STATE_EXPLODING);\r\n    this.die();\r\n\r\n    messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_PLAYER_DEATH);\r\n  }\r\n\r\n  capturedByFuseball () {\r\n    console.log('POW! (fuseball)');\r\n    this.setState(Shooter.STATE_EXPLODING);\r\n    this.die();\r\n\r\n    messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_PLAYER_DEATH);\r\n  }\r\n\r\n  impaledOnSpike () {\r\n    console.log('SPUT! (spike)');\r\n    this.setState(Shooter.STATE_EXPLODING);\r\n    this.die();\r\n\r\n    messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_PLAYER_DEATH);\r\n  }\r\n\r\n  shockedByPulsar () {\r\n    console.log('BZZZT! (pulsar)');\r\n    this.setState(Shooter.STATE_EXPLODING);\r\n    this.die();\r\n\r\n    messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_PLAYER_DEATH);\r\n  }\r\n\r\n  die () {\r\n    this.setFlag(Shooter.FLAG_ITS_ALREADY_TOO_LATE);\r\n    this.hittable = false;\r\n    this.canShoot = false;\r\n  }\r\n\r\n  disappear () {\r\n    if (this.inState(Shooter.STATE_EXPLODING) || this.inState(Shooter.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    this.setState(Shooter.STATE_DISAPPEARING);\r\n    this.die();\r\n  }\r\n\r\n  fireSuperzapper () {\r\n    if (\r\n      this.canShoot\r\n      && (this.inState(Shooter.STATE_ALIVE) || this.inState(Shooter.STATE_GOING_DOWN_THE_TUBE))\r\n      && this.isFlagNotSet(Shooter.FLAG_SUPERZAPPER_USED)\r\n    ) {\r\n      this.setFlag(Shooter.FLAG_SUPERZAPPER_USED);\r\n\r\n      messageBroker.publish(MessageBroker.TOPIC_SCREEN, MessageBroker.MESSAGE_PLAYER_SUPERZAPPER_USED);\r\n      messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_PLAYER_SUPERZAPPER_USED);\r\n\r\n      this.surfaceObjectsManager.handleSuperzapper();\r\n    }\r\n  }\r\n\r\n  renovate () {\r\n    this.setState(Shooter.STATE_RENOVATING);\r\n    this.alive = true;\r\n\r\n    let superzapperUsed = this.isFlagSet(Shooter.FLAG_SUPERZAPPER_USED);\r\n    this.clearFlags();\r\n\r\n    if (superzapperUsed) {\r\n      this.setFlag(Shooter.FLAG_SUPERZAPPER_USED);\r\n    }\r\n  }\r\n}\r\n","import readonly from '@/utils/readonly';\r\n\r\nexport default class FIFOManager {\r\n  @readonly\r\n  static GARBAGE_COLLECTION_TIMEOUT_MS = 200;\r\n\r\n  /** @var {number} */\r\n  lastGarbageCollectorExecutionTimestamp = 0;\r\n  /** {boolean} */\r\n  forceMapsUpdate = false;\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  shouldTriggerGarbageCollector () {\r\n    let now = Date.now();\r\n\r\n    if (now - this.lastGarbageCollectorExecutionTimestamp < FIFOManager.GARBAGE_COLLECTION_TIMEOUT_MS) {\r\n      return false;\r\n    }\r\n\r\n    this.lastGarbageCollectorExecutionTimestamp = now;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @param {Object[]} objects\r\n   * @return {number}\r\n   */\r\n  static garbageCollector (objects) {\r\n    if (objects.length === 0) {\r\n      return 0;\r\n    }\r\n\r\n    let indexOfAliveObject = objects.findIndex(object => object.alive);\r\n\r\n    if (indexOfAliveObject === 0) {\r\n      return 0;\r\n    }\r\n\r\n    if (indexOfAliveObject === -1) {\r\n      let temp = objects.length;\r\n      objects.length = 0;\r\n      return temp;\r\n    } else {\r\n      objects.splice(0, indexOfAliveObject);\r\n      return indexOfAliveObject;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {SurfaceObject[]} objects\r\n   * @param {array} map\r\n   * @param {boolean} forceUpdate\r\n   * @return {boolean}\r\n   */\r\n  static updateMap (objects, map, forceUpdate) {\r\n    const mapNeedsUpdate = objects.filter(object => object.shouldUpdateFIFOMaps()).length;\r\n\r\n    if (!(forceUpdate || mapNeedsUpdate)) {\r\n      return false;\r\n    }\r\n\r\n    map.forEach(lane => lane.length = 0);\r\n    objects.forEach(object => {\r\n      map[object.laneId].push(object);\r\n    });\r\n\r\n    return true;\r\n  }\r\n}\r\n","import Enemy from '@/Object/Enemies/Enemy';\r\nimport readonly from '@/utils/readonly';\r\nimport State from '@/Object/State';\r\nimport SurfaceObject from '@/Object/Surface/SurfaceObject';\r\nimport randomRange from '@/utils/randomRange';\r\n\r\nexport default class EnemySpiker extends Enemy {\r\n  @readonly\r\n  static TURNAROUND_HEIGHT = 0.1;\r\n\r\n  @readonly\r\n  static STATE_IDLE = new State(100, 1, 'idle');\r\n  @readonly\r\n  static STATE_SHOOTING = new State(200, 0.05, 'shooting');\r\n  @readonly\r\n  static STATE_DISAPPEARING = new State(1000, 1, 'disappearing');\r\n  @readonly\r\n  static STATE_EXPLODING = new State(1000, 1, 'exploding');\r\n  @readonly\r\n  static STATE_DEAD = new State(0, 1, 'dead');\r\n\r\n  @readonly\r\n  static FLAG_REACHED_TOP = 0x1;\r\n  @readonly\r\n  static FLAG_SHOOTS_FIRED = 0x2;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {function} rewardCallback\r\n   * @param {number} laneId\r\n   * @param {number} zPosition\r\n   */\r\n  constructor (surface, projectileManager, rewardCallback, laneId = 0, zPosition = 1) {\r\n    super(surface, projectileManager, rewardCallback, laneId, zPosition, SurfaceObject.TYPE_SPIKER);\r\n\r\n    this.firstLevel = 4;\r\n    this.valueInPoints = 150;\r\n\r\n    this.zSpeed = -randomRange(3, 6) * 0.001;\r\n    this.setState(EnemySpiker.STATE_IDLE);\r\n  }\r\n\r\n  updateState () {\r\n    if (this.inState(EnemySpiker.STATE_IDLE)) {\r\n      this.setState(\r\n        State.drawNextState(\r\n          EnemySpiker.STATE_IDLE,\r\n          EnemySpiker.STATE_SHOOTING\r\n        )\r\n      );\r\n\r\n    } else if (this.inState(EnemySpiker.STATE_SHOOTING)) {\r\n      this.setState(EnemySpiker.STATE_IDLE);\r\n      this.unsetFlag(EnemySpiker.FLAG_SHOOTS_FIRED);\r\n\r\n    } else if (this.inState(EnemySpiker.STATE_EXPLODING)) {\r\n      this.setState(EnemySpiker.STATE_DEAD);\r\n\r\n    } else if (this.inState(EnemySpiker.STATE_DISAPPEARING)) {\r\n      this.setState(EnemySpiker.STATE_DEAD);\r\n    }\r\n  }\r\n\r\n  updateEntity () {\r\n    if (this.inState(EnemySpiker.STATE_DEAD)) {\r\n      this.alive = false;\r\n    }\r\n\r\n    if (this.zPosition <= EnemySpiker.TURNAROUND_HEIGHT && this.isFlagNotSet(EnemySpiker.FLAG_REACHED_TOP)) {\r\n      this.setFlag(EnemySpiker.FLAG_REACHED_TOP);\r\n      this.zPosition = EnemySpiker.TURNAROUND_HEIGHT;\r\n    }\r\n\r\n    if (this.zPosition >= 1 && this.isFlagSet(EnemySpiker.FLAG_REACHED_TOP)) {\r\n      this.alive = false;\r\n    }\r\n\r\n    if (this.inState(EnemySpiker.STATE_SHOOTING) && this.isFlagNotSet(EnemySpiker.FLAG_SHOOTS_FIRED)) {\r\n      this.setFlag(EnemySpiker.FLAG_SHOOTS_FIRED);\r\n      this.fire();\r\n    }\r\n\r\n    if (!this.inState(EnemySpiker.STATE_EXPLODING)) {\r\n      if (this.isFlagNotSet(EnemySpiker.FLAG_REACHED_TOP)) {\r\n        this.zPosition += this.zSpeed;\r\n      } else {\r\n        this.zPosition -= this.zSpeed;\r\n      }\r\n    }\r\n  }\r\n\r\n  disappear () {\r\n    if (this.inState(EnemySpiker.STATE_EXPLODING) || this.inState(EnemySpiker.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    this.setState(EnemySpiker.STATE_DISAPPEARING);\r\n    super.die();\r\n  }\r\n\r\n  die () {\r\n    if (this.inState(EnemySpiker.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    this.setState(EnemySpiker.STATE_EXPLODING);\r\n    super.die();\r\n  }\r\n}\r\n","import Enemy from '@/Object/Enemies/Enemy';\r\nimport readonly from '@/utils/readonly';\r\nimport State from '@/Object/State';\r\nimport SurfaceObject from '@/Object/Surface/SurfaceObject';\r\nimport EnemySpiker from '@/Object/Enemies/EnemySpiker';\r\n\r\nexport default class EnemySpike extends Enemy {\r\n  @readonly\r\n  static HEIGHT_LIMIT = 0.9;\r\n  @readonly\r\n  static HUNK_LENGTH = 0.02;\r\n  @readonly\r\n  static HIT_DESTROYED_LENGTH = 0.1;\r\n\r\n  @readonly\r\n  static STATE_ALIVE = new State(500, 1, 'alive');\r\n  @readonly\r\n  static STATE_DEAD = new State(0, 1, 'dead');\r\n\r\n  /** {number} */\r\n  rendererHelperZPositionChanged = false;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {function} rewardCallback\r\n   * @param {number} laneId\r\n   */\r\n  constructor (surface, projectileManager, rewardCallback, laneId = 0) {\r\n    super(surface, projectileManager, rewardCallback, laneId, 1, SurfaceObject.TYPE_SPIKE);\r\n\r\n    this.firstLevel = 1;\r\n    this.valueInPoints = 1;\r\n\r\n    this.canShoot = false;\r\n    this.canExplode = false;\r\n\r\n    this.setState(EnemySpike.STATE_ALIVE);\r\n  }\r\n\r\n  updateState () {\r\n    if (this.inState(EnemySpike.STATE_DEAD)) {\r\n      this.alive = false;\r\n    }\r\n  }\r\n\r\n  updateEntity () {}\r\n\r\n  /**\r\n   * @param {EnemySpiker[]} spikers\r\n   */\r\n  extendToLowestSpiker (spikers) {\r\n    if (spikers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    spikers = spikers.filter(spiker =>\r\n      spiker.alive\r\n      && !spiker.inState(EnemySpiker.STATE_EXPLODING)\r\n      && !spiker.inState(EnemySpiker.STATE_DISAPPEARING)\r\n    );\r\n\r\n    let lowestSpikerZPosition = spikers\r\n      .map(spiker => spiker.zPosition)\r\n      .reduce((lowest, val) => (lowest < val ? lowest : val), 1);\r\n\r\n    this.extendTo(lowestSpikerZPosition);\r\n  }\r\n\r\n  /**\r\n   * @param {number} zPosition\r\n   */\r\n  extendTo (zPosition) {\r\n    let newZPosition = Math.ceil(zPosition / EnemySpike.HUNK_LENGTH) * EnemySpike.HUNK_LENGTH;\r\n\r\n    if (this.zPosition > newZPosition) {\r\n      this.zPosition = newZPosition;\r\n      this.rendererHelperZPositionChanged = true;\r\n    }\r\n  }\r\n\r\n  hitByProjectile () {\r\n    this.zPosition += EnemySpike.HIT_DESTROYED_LENGTH;\r\n    this.rendererHelperZPositionChanged = true;\r\n\r\n    if (this.zPosition + EnemySpike.HIT_DESTROYED_LENGTH >= 1) {\r\n      this.reward = true;\r\n      this.die();\r\n    } else {\r\n      this.rewardCallback(this.valueInPoints);\r\n    }\r\n  }\r\n\r\n  disappear () {\r\n    if (this.inState(EnemySpike.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    this.die();\r\n  }\r\n\r\n  die () {\r\n    if (this.inState(EnemySpike.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    this.setState(EnemySpike.STATE_DEAD);\r\n    super.die();\r\n  }\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  shouldRerenderSpikeDueToSpikeLengthChange () {\r\n    if (this.rendererHelperZPositionChanged) {\r\n      this.rendererHelperZPositionChanged = false;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import FIFOManager from '@/Object/Manager/FIFOManager';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport EnemySpike from '@/Object/Enemies/EnemySpike';\r\n\r\nexport default class SurfaceObjectsManager extends FIFOManager {\r\n  /** {Surface} */\r\n  surface;\r\n\r\n  /** {Shooter[]} */\r\n  shooters = [];\r\n  /** {Enemy[]} */\r\n  enemies = [];\r\n  /** {Spike[]} */\r\n  spikes = [];\r\n\r\n  /** {array} */\r\n  shootersMap;\r\n  /** {array} */\r\n  enemiesMap;\r\n  /** {array} */\r\n  spikesMap;\r\n\r\n  /** @var {number[]} */\r\n  rendererHelperNewObjectsIds = [];\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (surface) {\r\n    super();\r\n\r\n    this.surface = surface;\r\n    this.shootersMap = new Array(this.surface.lanesAmount).fill(0).map(() => []);\r\n    this.enemiesMap = new Array(this.surface.lanesAmount).fill(0).map(() => []);\r\n    this.spikesMap = new Array(this.surface.lanesAmount).fill(0).map(() => []);\r\n  }\r\n\r\n  addShooter (shooter) {\r\n    this.shooters.push(shooter);\r\n    this.rendererHelperNewObjectsIds.push(this.shooters[this.shooters.length - 1].objectId);\r\n  }\r\n\r\n  addEnemy (enemy) {\r\n    this.enemies.push(enemy);\r\n    this.rendererHelperNewObjectsIds.push(this.enemies[this.enemies.length - 1].objectId);\r\n\r\n    this.createSpikes(enemy);\r\n\r\n    return enemy;\r\n  }\r\n\r\n  addSpike (spike) {\r\n    this.spikes.push(spike);\r\n    this.rendererHelperNewObjectsIds.push(this.spikes[this.spikes.length - 1].objectId);\r\n  }\r\n\r\n  createSpikes (enemy) {\r\n    if (enemy.type === Enemy.TYPE_SPIKER) {\r\n      if (\r\n        this.spikesMap[enemy.laneId].length === 0\r\n        || this.spikesMap[enemy.laneId].length === this.spikesMap[enemy.laneId].filter(spike => !spike.alive).length\r\n      ) {\r\n        this.addSpike(new EnemySpike(enemy.surface, enemy.projectileManager, enemy.rewardCallback, enemy.laneId));\r\n      }\r\n    }\r\n  }\r\n\r\n  update () {\r\n    this.shooters.forEach(shooter => shooter.update());\r\n    this.enemies.forEach(enemy => enemy.update());\r\n\r\n    this.spikes.forEach(spike => {\r\n      spike.extendToLowestSpiker(this.enemiesMap[spike.laneId].filter(enemy => enemy.type === Enemy.TYPE_SPIKER));\r\n      spike.update();\r\n    });\r\n\r\n    this.runGarbageCollector();\r\n    this.updateObjectsMap();\r\n  }\r\n\r\n  runGarbageCollector () {\r\n    if (this.shouldTriggerGarbageCollector()) {\r\n      const collectedEnemies = FIFOManager.garbageCollector(this.enemies);\r\n      if (collectedEnemies) {\r\n        this.forceMapsUpdate = true;\r\n      }\r\n\r\n      if (collectedEnemies) console.log(`Collected ${collectedEnemies} enemies`);\r\n\r\n      const collectedSpikes = FIFOManager.garbageCollector(this.spikes);\r\n      if (collectedSpikes) {\r\n        this.forceMapsUpdate = true;\r\n      }\r\n\r\n      if (collectedSpikes) console.log(`Collected ${collectedSpikes} spikes`);\r\n    }\r\n  }\r\n\r\n  updateObjectsMap () {\r\n    FIFOManager.updateMap(this.shooters, this.shootersMap, this.forceMapsUpdate);\r\n    FIFOManager.updateMap(this.enemies, this.enemiesMap, this.forceMapsUpdate);\r\n    FIFOManager.updateMap(this.spikes, this.spikesMap, this.forceMapsUpdate);\r\n\r\n    this.forceMapsUpdate = false;\r\n  }\r\n\r\n  handleSuperzapper () {\r\n    this.enemies.forEach(enemy => {\r\n      enemy.reward = true;\r\n      enemy.die();\r\n    });\r\n  }\r\n\r\n  removeEnemies () {\r\n    this.enemies.forEach(enemy => { enemy.disappear(); });\r\n    this.runGarbageCollector();\r\n    this.updateObjectsMap();\r\n  }\r\n\r\n  removeSpikes () {\r\n    this.spikes.forEach(enemy => { enemy.disappear(); });\r\n    this.runGarbageCollector();\r\n    this.updateObjectsMap();\r\n  }\r\n\r\n  removeShooters () {\r\n    this.shooters.forEach(shooter => { shooter.disappear(); });\r\n    this.runGarbageCollector();\r\n    this.updateObjectsMap();\r\n  }\r\n\r\n  purgePlayField () {\r\n    this.removeEnemies();\r\n    this.removeSpikes();\r\n    this.removeShooters();\r\n  }\r\n\r\n  getAmountOfAliveEnemies () {\r\n    return this.enemies.filter(enemy => enemy.alive).length;\r\n  }\r\n}\r\n","import Projectile from '@/Object/Projectiles/Projectile';\r\nimport readonly from '@/utils/readonly';\r\nimport FIFOManager from '@/Object/Manager/FIFOManager';\r\n\r\nexport default class ProjectileManager extends FIFOManager {\r\n  @readonly\r\n  static MAX_AMOUNT_OF_SHOOTER_PROJECTILES = 6;\r\n  @readonly\r\n  static MAX_AMOUNT_OF_ENEMY_PROJECTILES = 32;\r\n\r\n  /** @var {SurfaceObjectsManager} */\r\n  surfaceObjectsManager;\r\n\r\n  /** @var {Projectile[]} */\r\n  shooterProjectiles = [];\r\n  /** @var {Projectile[]} */\r\n  enemyProjectiles = [];\r\n\r\n  /** {array} */\r\n  enemyProjectilesMap;\r\n\r\n  /** @var {number[]} */\r\n  rendererHelperNewProjectilesIds = [];\r\n\r\n  /**\r\n   * @param {SurfaceObjectsManager} surfaceObjectsManager\r\n   */\r\n  constructor (surfaceObjectsManager) {\r\n    super();\r\n\r\n    this.surfaceObjectsManager = surfaceObjectsManager;\r\n    this.enemyProjectilesMap = new Array(this.surfaceObjectsManager.surface.lanesAmount).fill(0).map(() => []);\r\n  }\r\n\r\n  /**\r\n   * @param {number} laneId\r\n   * @param {number} source\r\n   * @param {?number} zPosition\r\n   */\r\n  fire (laneId, source, zPosition = null) {\r\n    if (source === Projectile.SOURCE_SHOOTER) {\r\n      if (this.shooterProjectiles.length >= ProjectileManager.MAX_AMOUNT_OF_SHOOTER_PROJECTILES) {\r\n        console.log('Too much shooter projectiles!');\r\n        return false;\r\n      }\r\n\r\n      this.shooterProjectiles.push(new Projectile(this.surfaceObjectsManager.surface, laneId, source, zPosition));\r\n      this.rendererHelperNewProjectilesIds.push(this.shooterProjectiles[this.shooterProjectiles.length - 1].objectId);\r\n    } else {\r\n      if (this.enemyProjectiles.length >= ProjectileManager.MAX_AMOUNT_OF_ENEMY_PROJECTILES) {\r\n        console.log('Too much enemy projectiles!');\r\n        return false;\r\n      }\r\n\r\n      this.enemyProjectiles.push(new Projectile(this.surfaceObjectsManager.surface, laneId, source, zPosition));\r\n      this.rendererHelperNewProjectilesIds.push(this.enemyProjectiles[this.enemyProjectiles.length - 1].objectId);\r\n    }\r\n\r\n    this.forceMapsUpdate = true;\r\n    return true;\r\n  }\r\n\r\n  update () {\r\n    this.shooterProjectiles.forEach(projectile => {\r\n      projectile.update();\r\n      projectile.detectCollision(this.surfaceObjectsManager.enemiesMap[projectile.laneId]);\r\n      projectile.detectCollision(this.surfaceObjectsManager.spikesMap[projectile.laneId]);\r\n      projectile.detectCollision(this.enemyProjectilesMap[projectile.laneId]);\r\n    });\r\n\r\n    this.enemyProjectiles.forEach(projectile => {\r\n      projectile.update();\r\n      projectile.detectCollision(this.surfaceObjectsManager.shootersMap[projectile.laneId]);\r\n    });\r\n\r\n    this.runGarbageCollector();\r\n    this.updateObjectsMap();\r\n  }\r\n\r\n  runGarbageCollector () {\r\n    if (this.shouldTriggerGarbageCollector()) {\r\n      FIFOManager.garbageCollector(this.shooterProjectiles);\r\n      const collectedEnemyProjectiles = FIFOManager.garbageCollector(this.enemyProjectiles);\r\n\r\n      if (collectedEnemyProjectiles) {\r\n        this.forceMapsUpdate = true;\r\n      }\r\n\r\n      // if (collectedShooterProjectiles) console.log(`Collected ${collectedShooterProjectiles} shooter projectiles.`);\r\n      // if (collectedEnemyProjectiles) console.log(`Collected ${collectedEnemyProjectiles} enemy projectiles`);\r\n    }\r\n  }\r\n\r\n  updateObjectsMap () {\r\n    FIFOManager.updateMap(this.enemyProjectiles, this.enemyProjectilesMap, this.forceMapsUpdate);\r\n\r\n    this.forceMapsUpdate = false;\r\n  }\r\n\r\n  removeProjectiles () {\r\n    this.shooterProjectiles.forEach(projectile => { projectile.disappear(); });\r\n    this.enemyProjectiles.forEach(projectile => { projectile.disappear(); });\r\n\r\n    this.runGarbageCollector();\r\n    this.updateObjectsMap();\r\n  }\r\n}\r\n","class KeyboardInput {\n  /** @var {{key: string, keyDown: boolean, action: function}[]} **/\n  keyToFunctionMap = [];\n\n  constructor () {\n    document.onkeydown = event => {\n      let element = this.keyToFunctionMap.find(keyMap => keyMap.key === event.code);\n\n      if (element !== undefined) {\n        element.keyDown = true;\n      }\n    };\n\n    document.onkeyup = event => {\n      let element = this.keyToFunctionMap.find(keyMap => keyMap.key === event.code);\n\n      if (element !== undefined) {\n        element.keyDown = false;\n      }\n    };\n  }\n\n  dispatchActions () {\n    this.keyToFunctionMap.filter(keyMap => keyMap.keyDown).forEach(keyMap => keyMap.action());\n  }\n\n  /**\n   * @param {string} key\n   * @param {function} action\n   */\n  register (key, action) {\n    this.unregister(key);\n\n    this.keyToFunctionMap.push({\n        key: key,\n        keyDown: false,\n        action: action\n      }\n    );\n  }\n\n  /**\n   * @param {string} key\n   */\n  unregister (key) {\n    const index = this.keyToFunctionMap.findIndex(keyMap => keyMap.key === key);\n\n    if (index >= 0) {\n      this.keyToFunctionMap.splice(index, 1);\n    }\n  }\n\n  purge () {\n    this.keyToFunctionMap = [];\n  }\n}\n\nconst keyboardInput = new KeyboardInput();\nexport default keyboardInput;\n","import Enemy from '@/Object/Enemies/Enemy';\r\nimport SurfaceObject from '@/Object/Surface/SurfaceObject';\r\nimport randomRange from '@/utils/randomRange';\r\nimport readonly from '@/utils/readonly';\r\nimport State from '@/Object/State';\r\n\r\nexport default class EnemyPulsar extends Enemy {\r\n  @readonly\r\n  static MIN_Z_POSITION = 0.1;\r\n  @readonly\r\n  static MAX_Z_POSITION = 0.9;\r\n\r\n  @readonly\r\n  static STATE_MOVING_ALONG_LINE = new State(1500, 0.8, 'moving_along_line');\r\n  @readonly\r\n  static STATE_ROTATING_BEGIN = new State(200, 1, 'rotate_begin');\r\n  @readonly\r\n  static STATE_ROTATING_END = new State(200, 1, 'rotate_end');\r\n  @readonly\r\n  static STATE_WARNING = new State(1000, 1, 'warning');\r\n  @readonly\r\n  static STATE_PULSATING = new State(2000, 1, 'pulsating');\r\n  @readonly\r\n  static STATE_DISAPPEARING = new State(1000, 1, 'disappearing');\r\n  @readonly\r\n  static STATE_EXPLODING = new State(1000, 1, 'exploding');\r\n  @readonly\r\n  static STATE_DEAD = new State(0, 1, 'dead');\r\n\r\n  @readonly\r\n  static FLAG_LANE_CHANGED = 0x1;\r\n  @readonly\r\n  static FLAG_ROTATION_CW = 0x2;\r\n  @readonly\r\n  static FLAG_ROTATION_CCW = 0x4;\r\n  @readonly\r\n  static FLAG_ROTATION_DIR_CHOSEN = 0x8;\r\n  @readonly\r\n  static FLAG_IMMUNE_ROTATION = 0x10;\r\n  @readonly\r\n  static FLAG_MOVING_TARGET_CHOSEN = 0x20;\r\n  @readonly\r\n  static FLAG_NO_WARNING = 0x40;\r\n\r\n  /** {number} */\r\n  zBase = 0;\r\n  /** {number} */\r\n  zTarget = 0;\r\n\r\n  /** {number} */\r\n  rendererHelperLaneChangesAmount = 0;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {function} rewardCallback\r\n   * @param {number} laneId\r\n   * @param {number} zPosition\r\n   */\r\n  constructor (surface, projectileManager, rewardCallback, laneId = 0, zPosition = 1) {\r\n    super(surface, projectileManager, rewardCallback, laneId, zPosition, SurfaceObject.TYPE_PULSAR);\r\n\r\n    this.firstLevel = 17;\r\n    this.valueInPoints = 200;\r\n\r\n    this.zTarget = zPosition;\r\n\r\n    this.setState(EnemyPulsar.STATE_MOVING_ALONG_LINE);\r\n  }\r\n\r\n  updateState () {\r\n    if (this.inState(EnemyPulsar.STATE_MOVING_ALONG_LINE)) {\r\n      this.setState(\r\n        State.drawNextState(\r\n          EnemyPulsar.STATE_MOVING_ALONG_LINE,\r\n          EnemyPulsar.STATE_ROTATING_BEGIN,\r\n          this.isFlagSet(EnemyPulsar.FLAG_NO_WARNING) ? EnemyPulsar.STATE_PULSATING : EnemyPulsar.STATE_WARNING,\r\n        )\r\n      );\r\n\r\n      if (this.inState(EnemyPulsar.STATE_PULSATING)) {\r\n        this.surface.shortLane(this.laneId);\r\n      }\r\n\r\n      this.unsetFlag(EnemyPulsar.FLAG_MOVING_TARGET_CHOSEN);\r\n\r\n    } else if (this.inState(EnemyPulsar.STATE_WARNING)) {\r\n      this.setState(EnemyPulsar.STATE_PULSATING);\r\n\r\n      this.surface.shortLane(this.laneId);\r\n\r\n    } else if (this.inState(EnemyPulsar.STATE_PULSATING)) {\r\n      this.setState(\r\n        State.drawNextState(\r\n          EnemyPulsar.STATE_MOVING_ALONG_LINE,\r\n          EnemyPulsar.STATE_ROTATING_BEGIN,\r\n          this.isFlagSet(EnemyPulsar.FLAG_NO_WARNING) ? EnemyPulsar.STATE_PULSATING : EnemyPulsar.STATE_WARNING,\r\n        )\r\n      );\r\n\r\n      if (!this.inState(EnemyPulsar.STATE_PULSATING)) {\r\n        this.surface.unshortLane(this.laneId);\r\n      }\r\n\r\n    } else if (this.inState(EnemyPulsar.STATE_ROTATING_BEGIN)) {\r\n      this.setState(EnemyPulsar.STATE_ROTATING_END);\r\n\r\n      if (this.isFlagSet(EnemyPulsar.FLAG_IMMUNE_ROTATION)) {\r\n        this.unsetFlag(EnemyPulsar.FLAG_IMMUNE_ROTATION);\r\n        this.hittable = true;\r\n      }\r\n\r\n    } else if (this.inState(EnemyPulsar.STATE_ROTATING_END)) {\r\n      this.setState(EnemyPulsar.STATE_MOVING_ALONG_LINE);\r\n\r\n      this.unsetFlag(EnemyPulsar.FLAG_LANE_CHANGED);\r\n      this.unsetFlag(EnemyPulsar.FLAG_ROTATION_CW);\r\n      this.unsetFlag(EnemyPulsar.FLAG_ROTATION_CCW);\r\n      this.unsetFlag(EnemyPulsar.FLAG_ROTATION_DIR_CHOSEN);\r\n\r\n      this.rendererHelperLaneChangesAmount++;\r\n\r\n    } else if (this.inState(EnemyPulsar.STATE_EXPLODING)) {\r\n      this.setState(EnemyPulsar.STATE_DEAD);\r\n\r\n    } else if (this.inState(EnemyPulsar.STATE_DISAPPEARING)) {\r\n      this.setState(EnemyPulsar.STATE_DEAD);\r\n    }\r\n  }\r\n\r\n  updateEntity () {\r\n    if (this.inState(EnemyPulsar.STATE_DEAD)) {\r\n      this.alive = false;\r\n    }\r\n\r\n    if (this.inState(EnemyPulsar.STATE_ROTATING_BEGIN) && this.isFlagNotSet(EnemyPulsar.FLAG_ROTATION_DIR_CHOSEN)) {\r\n      this.setFlag(EnemyPulsar.FLAG_ROTATION_DIR_CHOSEN);\r\n\r\n      if (this.isFlagSet(EnemyPulsar.FLAG_REACHED_TOP)) {\r\n        let direction = this.surface.getShortestPathDirection(this.laneId, this.surface.activeLaneId);\r\n\r\n        if (direction === 1) {\r\n          this.setFlag(EnemyPulsar.FLAG_ROTATION_CCW);\r\n          this.unsetFlag(EnemyPulsar.FLAG_ROTATION_CW);\r\n        } else if (direction === -1) {\r\n          this.setFlag(EnemyPulsar.FLAG_ROTATION_CW);\r\n          this.unsetFlag(EnemyPulsar.FLAG_ROTATION_CCW);\r\n        }\r\n      } else {\r\n        if (this.isFlagNotSet(EnemyPulsar.FLAG_ROTATION_CW) && this.isFlagNotSet(EnemyPulsar.FLAG_ROTATION_CCW)) {\r\n          let canRotateCCW = this.surface.getActualLaneIdFromProjectedMovement(this.laneId + 1) !== this.laneId;\r\n          let canRotateCW = this.surface.getActualLaneIdFromProjectedMovement(this.laneId - 1) !== this.laneId;\r\n\r\n          if (canRotateCCW && canRotateCW) {\r\n            this.setFlag(Math.random() > 0.5 ? EnemyPulsar.FLAG_ROTATION_CW : EnemyPulsar.FLAG_ROTATION_CCW);\r\n          } else if (canRotateCW) {\r\n            this.setFlag(EnemyPulsar.FLAG_ROTATION_CW);\r\n          } else {\r\n            this.setFlag(EnemyPulsar.FLAG_ROTATION_CCW);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.inState(EnemyPulsar.STATE_ROTATING_END) && this.isFlagNotSet(EnemyPulsar.FLAG_LANE_CHANGED)) {\r\n      this.setFlag(EnemyPulsar.FLAG_LANE_CHANGED);\r\n\r\n      if (this.isFlagSet(EnemyPulsar.FLAG_ROTATION_CW) || this.isFlagSet(EnemyPulsar.FLAG_ROTATION_CCW)) {\r\n        let direction = this.isFlagSet(EnemyPulsar.FLAG_ROTATION_CCW) ? 1 : -1;\r\n        this.setLane(this.laneId + direction);\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.inState(EnemyPulsar.STATE_MOVING_ALONG_LINE)\r\n      && this.isFlagNotSet(EnemyPulsar.FLAG_MOVING_TARGET_CHOSEN)\r\n    ) {\r\n      this.setFlag(EnemyPulsar.FLAG_MOVING_TARGET_CHOSEN);\r\n      this.zBase = this.zPosition;\r\n      this.zTarget = randomRange(EnemyPulsar.MIN_Z_POSITION * 10, EnemyPulsar.MAX_Z_POSITION * 10) / 10;\r\n    }\r\n\r\n    if (this.inState(EnemyPulsar.STATE_MOVING_ALONG_LINE)) {\r\n      this.zPosition = this.zBase + (this.zTarget - this.zBase) * this.stateProgressInTime();\r\n    } else if (!this.inState(EnemyPulsar.STATE_EXPLODING)) {\r\n      this.zPosition = this.zTarget;\r\n    }\r\n  }\r\n\r\n  immuneDuringNextRotation () {\r\n    this.setFlag(EnemyPulsar.FLAG_IMMUNE_ROTATION);\r\n    this.hittable = false;\r\n  }\r\n\r\n  disappear () {\r\n    if (this.inState(EnemyPulsar.STATE_EXPLODING) || this.inState(EnemyPulsar.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    if (this.inState(EnemyPulsar.STATE_PULSATING)) {\r\n      this.surface.unshortLane(this.laneId);\r\n    }\r\n\r\n    this.setState(EnemyPulsar.STATE_DISAPPEARING);\r\n    super.die();\r\n  }\r\n\r\n  die () {\r\n    if (this.inState(EnemyPulsar.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    if (this.inState(EnemyPulsar.STATE_PULSATING)) {\r\n      this.surface.unshortLane(this.laneId);\r\n    }\r\n\r\n    this.setState(EnemyPulsar.STATE_EXPLODING);\r\n    super.die();\r\n  }\r\n}\r\n","import Enemy from '@/Object/Enemies/Enemy';\r\nimport readonly from '@/utils/readonly';\r\nimport State from '@/Object/State';\r\nimport randomRange from '@/utils/randomRange';\r\n\r\nexport default class EnemyTanker extends Enemy {\r\n  @readonly\r\n  static STATE_IDLE = new State(100, 1, 'idle');\r\n  @readonly\r\n  static STATE_SHOOTING = new State(100, 0.1, 'shooting');\r\n  @readonly\r\n  static STATE_DISAPPEARING = new State(1000, 1, 'disappearing');\r\n  @readonly\r\n  static STATE_EXPLODING = new State(1000, 1, 'exploding');\r\n  @readonly\r\n  static STATE_DEAD = new State(0, 1, 'dead');\r\n\r\n  @readonly\r\n  static FLAG_SHOOTS_FIRED = 0x1;\r\n\r\n  /** {function} */\r\n  enemySpawnFunction;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {function} enemySpawnFunction\r\n   * @param {function} rewardCallback\r\n   * @param {string} type\r\n   * @param {number} laneId\r\n   * @param {number} zPosition\r\n   */\r\n  constructor (\r\n    surface,\r\n    projectileManager,\r\n    enemySpawnFunction,\r\n    rewardCallback,\r\n    type,\r\n    laneId = 0,\r\n    zPosition = 1\r\n  ) {\r\n    super(surface, projectileManager, rewardCallback, laneId, zPosition, type);\r\n\r\n    this.enemySpawnFunction = enemySpawnFunction;\r\n\r\n    this.firstLevel = 3;\r\n    this.valueInPoints = 100;\r\n\r\n    this.zSpeed = -randomRange(3, 6) * 0.001;\r\n    this.setState(EnemyTanker.STATE_IDLE);\r\n  }\r\n\r\n  updateState () {\r\n    if (this.inState(EnemyTanker.STATE_IDLE)) {\r\n      this.setState(\r\n        State.drawNextState(\r\n          EnemyTanker.STATE_IDLE,\r\n          EnemyTanker.STATE_SHOOTING\r\n        )\r\n      );\r\n\r\n    } else if (this.inState(EnemyTanker.STATE_SHOOTING)) {\r\n      this.setState(EnemyTanker.STATE_IDLE);\r\n      this.unsetFlag(EnemyTanker.FLAG_SHOOTS_FIRED);\r\n\r\n    } else if (this.inState(EnemyTanker.STATE_EXPLODING)) {\r\n      this.setState(EnemyTanker.STATE_DEAD);\r\n\r\n    } else if (this.inState(EnemyTanker.STATE_DISAPPEARING)) {\r\n      this.setState(EnemyTanker.STATE_DEAD);\r\n    }\r\n  }\r\n\r\n  updateEntity () {\r\n    if (this.inState(EnemyTanker.STATE_DEAD)) {\r\n      this.alive = false;\r\n    }\r\n\r\n    if (this.zPosition <= 0) {\r\n      this.alive = false;\r\n      this.createEnemies();\r\n    }\r\n\r\n    if (this.inState(EnemyTanker.STATE_SHOOTING) && this.isFlagNotSet(EnemyTanker.FLAG_SHOOTS_FIRED)) {\r\n      this.setFlag(EnemyTanker.FLAG_SHOOTS_FIRED);\r\n      this.fire();\r\n    }\r\n\r\n    if (!this.inState(EnemyTanker.STATE_EXPLODING) && !this.inState(EnemyTanker.STATE_DISAPPEARING)) {\r\n      this.zPosition += this.zSpeed;\r\n    }\r\n  }\r\n\r\n  hitByProjectile () {\r\n    this.reward = true;\r\n    this.die();\r\n    this.createEnemies();\r\n  }\r\n\r\n  disappear () {\r\n    if (this.inState(EnemyTanker.STATE_EXPLODING) || this.inState(EnemyTanker.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    this.setState(EnemyTanker.STATE_DISAPPEARING);\r\n    super.die();\r\n  }\r\n\r\n  die () {\r\n    if (this.inState(EnemyTanker.STATE_DEAD)) {\r\n      return;\r\n    }\r\n\r\n    this.setState(EnemyTanker.STATE_EXPLODING);\r\n    super.die();\r\n  }\r\n\r\n  createEnemies () {\r\n    throw new Error('Method \\'createEnemies()\\' must be implemented.');\r\n  }\r\n}\r\n","import EnemyTanker from '@/Object/Enemies/EnemyTanker';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport EnemyFlipper from '@/Object/Enemies/EnemyFlipper';\r\n\r\nexport default class EnemyFlipperTanker extends EnemyTanker {\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {function} enemySpawnFunction\r\n   * @param {function} rewardCallback\r\n   * @param {number} laneId\r\n   * @param zPosition\r\n   */\r\n  constructor (\r\n    surface,\r\n    projectileManager,\r\n    enemySpawnFunction,\r\n    rewardCallback,\r\n    laneId = 0,\r\n    zPosition = 1\r\n  ) {\r\n    super(surface, projectileManager, enemySpawnFunction, rewardCallback, Enemy.TYPE_FLIPPER_TANKER, laneId, zPosition);\r\n\r\n    this.firstLevel = 3;\r\n  }\r\n\r\n  createEnemies () {\r\n    let CWLaneId = this.surface.getActualLaneIdFromProjectedMovement(this.laneId + 1);\r\n    let canSpawnEnemyCW = CWLaneId !== this.laneId;\r\n    let CWWLaneId = this.surface.getActualLaneIdFromProjectedMovement(this.laneId - 1);\r\n    let canSpawnEnemyCCW = CWWLaneId !== this.laneId;\r\n\r\n    let enemyCW = this.enemySpawnFunction(this.laneId, this.zPosition);\r\n    let enemyCCW = this.enemySpawnFunction(this.laneId, this.zPosition);\r\n\r\n    if (canSpawnEnemyCW) {\r\n      enemyCW.setState(EnemyFlipper.STATE_ROTATING_BEGIN);\r\n      enemyCW.setFlag(EnemyFlipper.FLAG_ROTATION_DIR_CHOSEN);\r\n      enemyCW.setFlag(EnemyFlipper.FLAG_ROTATION_CCW);\r\n      enemyCW.immuneDuringNextRotation();\r\n    }\r\n\r\n    if (canSpawnEnemyCCW) {\r\n      enemyCCW.setState(EnemyFlipper.STATE_ROTATING_BEGIN);\r\n      enemyCCW.setFlag(EnemyFlipper.FLAG_ROTATION_DIR_CHOSEN);\r\n      enemyCCW.setFlag(EnemyFlipper.FLAG_ROTATION_CW);\r\n      enemyCCW.immuneDuringNextRotation();\r\n    }\r\n  }\r\n}\r\n","import EnemyTanker from '@/Object/Enemies/EnemyTanker';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport EnemyFuseball from '@/Object/Enemies/EnemyFuseball';\r\n\r\nexport default class EnemyFuseballTanker extends EnemyTanker {\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {function} enemySpawnFunction\r\n   * @param {function} rewardCallback\r\n   * @param {number} laneId\r\n   * @param {number} zPosition\r\n   */\r\n  constructor (\r\n    surface,\r\n    projectileManager,\r\n    enemySpawnFunction,\r\n    rewardCallback,\r\n    laneId = 0,\r\n    zPosition = 1\r\n  ) {\r\n    super(\r\n      surface,\r\n      projectileManager,\r\n      enemySpawnFunction,\r\n      rewardCallback,\r\n      Enemy.TYPE_FUSEBALL_TANKER,\r\n      laneId,\r\n      zPosition\r\n    );\r\n\r\n    this.firstLevel = 33;\r\n  }\r\n\r\n  createEnemies () {\r\n    let CWLaneId = this.surface.getActualLaneIdFromProjectedMovement(this.laneId + 1);\r\n\r\n    let enemyCW = this.enemySpawnFunction(CWLaneId, this.zPosition);\r\n    let enemyCCW = this.enemySpawnFunction(this.laneId, this.zPosition);\r\n\r\n    enemyCW.setState(EnemyFuseball.STATE_MOVING_ALONG_LINE);\r\n    enemyCW.immuneDuringNextLaneSwitch();\r\n\r\n    enemyCCW.setState(EnemyFuseball.STATE_MOVING_ALONG_LINE);\r\n    enemyCCW.immuneDuringNextLaneSwitch();\r\n  }\r\n}\r\n","import EnemyTanker from '@/Object/Enemies/EnemyTanker';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport EnemyPulsar from '@/Object/Enemies/EnemyPulsar';\r\n\r\nexport default class EnemyPulsarTanker extends EnemyTanker {\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {function} enemySpawnFunction\r\n   * @param {function} rewardCallback\r\n   * @param {number} laneId\r\n   * @param {number} zPosition\r\n   */\r\n  constructor (\r\n    surface,\r\n    projectileManager,\r\n    enemySpawnFunction,\r\n    rewardCallback,\r\n    laneId = 0,\r\n    zPosition = 1\r\n  ) {\r\n    super(surface, projectileManager, enemySpawnFunction, rewardCallback, Enemy.TYPE_PULSAR_TANKER, laneId, zPosition);\r\n\r\n    this.firstLevel = 41;\r\n  }\r\n\r\n  createEnemies () {\r\n    let CWLaneId = this.surface.getActualLaneIdFromProjectedMovement(this.laneId + 1);\r\n    let canSpawnEnemyCW = CWLaneId !== this.laneId;\r\n    let CWWLaneId = this.surface.getActualLaneIdFromProjectedMovement(this.laneId - 1);\r\n    let canSpawnEnemyCCW = CWWLaneId !== this.laneId;\r\n\r\n    let enemyCW = this.enemySpawnFunction(this.laneId, this.zPosition);\r\n    let enemyCCW = this.enemySpawnFunction(this.laneId, this.zPosition);\r\n\r\n    if (canSpawnEnemyCW) {\r\n      enemyCW.setState(EnemyPulsar.STATE_ROTATING_BEGIN);\r\n      enemyCW.setFlag(EnemyPulsar.FLAG_ROTATION_DIR_CHOSEN);\r\n      enemyCW.setFlag(EnemyPulsar.FLAG_ROTATION_CCW);\r\n      enemyCW.immuneDuringNextRotation();\r\n    }\r\n\r\n    if (canSpawnEnemyCCW) {\r\n      enemyCCW.setState(EnemyPulsar.STATE_ROTATING_BEGIN);\r\n      enemyCCW.setFlag(EnemyPulsar.FLAG_ROTATION_DIR_CHOSEN);\r\n      enemyCCW.setFlag(EnemyPulsar.FLAG_ROTATION_CW);\r\n      enemyCCW.immuneDuringNextRotation();\r\n    }\r\n  }\r\n}\r\n","import readonly from '@/utils/readonly';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport EnemyFlipper from '@/Object/Enemies/EnemyFlipper';\r\nimport EnemySpiker from '@/Object/Enemies/EnemySpiker';\r\nimport EnemyFuseball from '@/Object/Enemies/EnemyFuseball';\r\nimport EnemyPulsar from '@/Object/Enemies/EnemyPulsar';\r\nimport EnemyFlipperTanker from '@/Object/Enemies/EnemyFlipperTanker';\r\nimport EnemyFuseballTanker from '@/Object/Enemies/EnemyFuseballTanker';\r\nimport EnemyPulsarTanker from '@/Object/Enemies/EnemyPulsarTanker';\r\nimport randomRange from '@/utils/randomRange';\r\n\r\nexport default class EnemySpawner {\r\n  @readonly\r\n  static SPAWN_MAP = [\r\n    { type: Enemy.TYPE_FLIPPER, level: 1, chanceOfSpawning: 1 },\r\n    { type: Enemy.TYPE_FLIPPER_TANKER, level: 3, chanceOfSpawning: 0.5 },\r\n    { type: Enemy.TYPE_SPIKER, level: 4, chanceOfSpawning: 1 },\r\n    { type: Enemy.TYPE_FUSEBALL, level: 11, chanceOfSpawning: 0.8 },\r\n    { type: Enemy.TYPE_PULSAR, level: 17, chanceOfSpawning: 0.8 },\r\n    { type: Enemy.TYPE_FUSEBALL_TANKER, level: 33, chanceOfSpawning: 0.5 },\r\n    { type: Enemy.TYPE_PULSAR_TANKER, level: 41, chanceOfSpawning: 0.5 },\r\n  ];\r\n\r\n  @readonly\r\n  static MIN_ENEMIES = 4;\r\n  @readonly\r\n  static MAX_ENEMIES = 16;\r\n  @readonly\r\n  static MAX_LEVEL = 99;\r\n\r\n  /** @var {SurfaceObjectsManager} */\r\n  surfaceObjectsManager;\r\n  /** @var {ProjectileManager} */\r\n  projectileManager;\r\n  /** @var {function} */\r\n  rewardCallback;\r\n\r\n  /** @var {number} */\r\n  currentLevel;\r\n  /** @var {number} */\r\n  currentScore;\r\n  /** @var {number} */\r\n  targetScore;\r\n\r\n  /**\r\n   * @param {SurfaceObjectsManager} surfaceObjectsManager\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {Function} rewardCallback\r\n   * @param {number} level\r\n   * @param {number} levelInitScore\r\n   * @param {number} targetScore\r\n   */\r\n  constructor (surfaceObjectsManager, projectileManager, rewardCallback, level, levelInitScore, targetScore) {\r\n    this.surfaceObjectsManager = surfaceObjectsManager;\r\n    this.projectileManager = projectileManager;\r\n    this.rewardCallback = rewardCallback;\r\n\r\n    this.currentLevel = level;\r\n    this.currentScore = levelInitScore;\r\n    this.targetScore = targetScore;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  reachedScoreTarget () {\r\n    return this.currentScore >= this.targetScore;\r\n  }\r\n\r\n  updateScore (score) {\r\n    this.currentScore = score;\r\n  }\r\n\r\n  spawn () {\r\n    if (this.currentScore >= this.targetScore) {\r\n      return;\r\n    }\r\n\r\n    let amountOfAliveEnemiesOnSurface = this.surfaceObjectsManager.getAmountOfAliveEnemies();\r\n    let amountOfEnemiesAllowedOnSurface = Math.ceil(\r\n      (this.currentLevel / EnemySpawner.MAX_LEVEL)\r\n      * (EnemySpawner.MAX_ENEMIES - EnemySpawner.MIN_ENEMIES)\r\n      + EnemySpawner.MIN_ENEMIES - 1\r\n    );\r\n\r\n    let spawnChance = 1 - (amountOfAliveEnemiesOnSurface / amountOfEnemiesAllowedOnSurface);\r\n\r\n    if (spawnChance === 0 || Math.random() > spawnChance) {\r\n      return;\r\n    }\r\n\r\n    let enemiesThatCanBeSpawned = EnemySpawner.SPAWN_MAP.filter(enemy => enemy.level <= this.currentLevel);\r\n    let enemyToSpawn = this.drawEnemy(enemiesThatCanBeSpawned);\r\n    let lane = randomRange(0, 15);\r\n\r\n    /** @var {?Enemy} */\r\n    let enemy;\r\n    switch (enemyToSpawn.type) {\r\n      case Enemy.TYPE_FLIPPER:\r\n        enemy = this.spawnFlipper(lane);\r\n        break;\r\n      case Enemy.TYPE_FLIPPER_TANKER:\r\n        enemy = this.spawnFlipperTanker(lane);\r\n        break;\r\n      case Enemy.TYPE_SPIKER:\r\n        enemy = this.spawnSpiker(lane);\r\n        break;\r\n      case Enemy.TYPE_FUSEBALL:\r\n        enemy = this.spawnFuseball(lane);\r\n        break;\r\n      case Enemy.TYPE_PULSAR:\r\n        enemy = this.spawnPulsar(lane);\r\n        break;\r\n      case Enemy.TYPE_FUSEBALL_TANKER:\r\n        enemy = this.spawnFuseballTanker(lane);\r\n        break;\r\n      case Enemy.TYPE_PULSAR_TANKER:\r\n        enemy = this.spawnPulsarTanker(lane);\r\n        break;\r\n      default:\r\n        throw new Error(`Trying to spawn unknown enemy: ${enemyToSpawn.type}`);\r\n    }\r\n\r\n    this.currentScore += enemy.valueInPoints;\r\n\r\n    // console.log(`Spawning ${enemyToSpawn.type} on lane ${lane}. Score on surface: ${this.currentScore}`);\r\n  }\r\n\r\n  /** @param {{level: number, type: string, chanceOfSpawning: number}[]} enemies */\r\n  drawEnemy (enemies) {\r\n    let range = enemies.reduce(((acc, val) => acc + val.chanceOfSpawning), 0);\r\n    let draw = Math.random() * range;\r\n\r\n    for (let i = 0; i < enemies.length; i++) {\r\n      if (enemies[i].chanceOfSpawning >= draw) {\r\n        return enemies[i];\r\n      } else {\r\n        draw -= enemies[i].chanceOfSpawning;\r\n      }\r\n    }\r\n\r\n    throw new Error('Something weird happened.');\r\n  }\r\n\r\n  /**\r\n   * @param {number} lane\r\n   * @param {number} zPosition\r\n   */\r\n  spawnFlipper (lane, zPosition = 1) {\r\n    /** @var {EnemyFlipper} */\r\n    let flipper = this.surfaceObjectsManager.addEnemy(\r\n      new EnemyFlipper(\r\n        this.surfaceObjectsManager.surface,\r\n        this.projectileManager,\r\n        this.rewardCallback,\r\n        lane,\r\n        zPosition\r\n      )\r\n    );\r\n\r\n    if (this.currentLevel === 1) {\r\n      flipper.cannotFlip();\r\n    }\r\n\r\n    return flipper;\r\n  }\r\n\r\n  /**\r\n   * @param {number} lane\r\n   * @param {number} zPosition\r\n   */\r\n  spawnSpiker (lane, zPosition = 1) {\r\n    return this.surfaceObjectsManager.addEnemy(\r\n      new EnemySpiker(\r\n        this.surfaceObjectsManager.surface,\r\n        this.projectileManager,\r\n        this.rewardCallback,\r\n        lane,\r\n        zPosition\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} lane\r\n   * @param {number} zPosition\r\n   */\r\n  spawnFuseball (lane, zPosition = 1) {\r\n    return this.surfaceObjectsManager.addEnemy(\r\n      new EnemyFuseball(\r\n        this.surfaceObjectsManager.surface,\r\n        this.projectileManager,\r\n        this.rewardCallback,\r\n        lane,\r\n        zPosition\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} lane\r\n   * @param {number} zPosition\r\n   */\r\n  spawnPulsar (lane, zPosition = 1) {\r\n    return this.surfaceObjectsManager.addEnemy(\r\n      new EnemyPulsar(\r\n        this.surfaceObjectsManager.surface,\r\n        this.projectileManager,\r\n        this.rewardCallback,\r\n        lane,\r\n        zPosition\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} lane\r\n   * @param {number} zPosition\r\n   */\r\n  spawnFlipperTanker (lane, zPosition = 1) {\r\n    return this.surfaceObjectsManager.addEnemy(\r\n      new EnemyFlipperTanker(\r\n        this.surfaceObjectsManager.surface,\r\n        this.projectileManager,\r\n        this.spawnFlipper.bind(this),\r\n        this.rewardCallback,\r\n        lane,\r\n        zPosition\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} lane\r\n   * @param {number} zPosition\r\n   */\r\n  spawnFuseballTanker (lane, zPosition = 1) {\r\n    return this.surfaceObjectsManager.addEnemy(\r\n      new EnemyFuseballTanker(\r\n        this.surfaceObjectsManager.surface,\r\n        this.projectileManager,\r\n        this.spawnFuseball.bind(this),\r\n        this.rewardCallback,\r\n        lane,\r\n        zPosition\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} lane\r\n   * @param {number} zPosition\r\n   */\r\n  spawnPulsarTanker (lane, zPosition = 1) {\r\n    return this.surfaceObjectsManager.addEnemy(\r\n      new EnemyPulsarTanker(\r\n        this.surfaceObjectsManager.surface,\r\n        this.projectileManager,\r\n        this.spawnPulsar.bind(this),\r\n        this.rewardCallback,\r\n        lane,\r\n        zPosition\r\n      )\r\n    );\r\n  }\r\n}\r\n","import Shooter from '@/Object/Shooters/Shooter';\r\nimport SurfaceObjectsManager from '@/Object/Manager/SurfaceObjectsManager';\r\nimport ProjectileManager from '@/Object/Manager/ProjectileManager';\r\n\r\nimport keyboardInput from '@/utils/KeyboardInput';\r\nimport EnemySpawner from '@/Object/Enemies/EnemySpawner';\r\nimport messageBroker, { MessageBroker } from '@/Helpers/MessageBroker';\r\n\r\nexport default class Level {\r\n  /** @var {Surface} */\r\n  surface;\r\n  /** @var {Shooter} */\r\n  shooter;\r\n  /** @var {SurfaceObjectsManager} */\r\n  surfaceObjectsManager;\r\n  /** @var {ProjectileManager} */\r\n  projectileManager;\r\n  /** @var {EnemySpawner} */\r\n  enemySpawner;\r\n\r\n  /** @var {number} */\r\n  currentLevel;\r\n  /** @var {number} */\r\n  levelInitScore;\r\n  /** @var {number} */\r\n  targetScore;\r\n\r\n  /** @var {function} */\r\n  rewardCallback;\r\n  /** @var {function} */\r\n  levelWonCallback;\r\n  /** @var {function} */\r\n  shooterKilledCallback;\r\n  /** @var {function} */\r\n  getCurrentScore;\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   * @param {number} currentLevel\r\n   * @param {number} levelInitScore\r\n   * @param {number} targetScore\r\n   * @param {function} rewardCallback\r\n   * @param {function} levelWonCallback\r\n   * @param {function} shooterKilledCallback\r\n   * @param {function} getCurrentScore\r\n   */\r\n  constructor (\r\n    surface,\r\n    currentLevel,\r\n    levelInitScore,\r\n    targetScore,\r\n    rewardCallback,\r\n    levelWonCallback,\r\n    shooterKilledCallback,\r\n    getCurrentScore\r\n  ) {\r\n    this.surface = surface;\r\n\r\n    this.currentLevel = currentLevel;\r\n    this.levelInitScore = levelInitScore;\r\n    this.targetScore = targetScore;\r\n\r\n    this.rewardCallback = rewardCallback;\r\n    this.levelWonCallback = levelWonCallback;\r\n    this.shooterKilledCallback = shooterKilledCallback;\r\n    this.getCurrentScore = getCurrentScore;\r\n\r\n    this.surfaceObjectsManager = new SurfaceObjectsManager(surface);\r\n    this.projectileManager = new ProjectileManager(this.surfaceObjectsManager);\r\n    this.enemySpawner = new EnemySpawner(\r\n      this.surfaceObjectsManager,\r\n      this.projectileManager,\r\n      this.rewardCallback,\r\n      this.currentLevel,\r\n      this.levelInitScore,\r\n      this.targetScore\r\n    );\r\n\r\n    this.shooter = new Shooter(\r\n      surface,\r\n      this.projectileManager,\r\n      this.surfaceObjectsManager,\r\n      this.shooterKilled.bind(this),\r\n      7\r\n    );\r\n\r\n    this.surfaceObjectsManager.addShooter(this.shooter);\r\n  }\r\n\r\n  release () {\r\n    this.surfaceObjectsManager.removeEnemies();\r\n    this.surfaceObjectsManager.removeShooters();\r\n    this.surfaceObjectsManager.removeSpikes();\r\n    this.surfaceObjectsManager = undefined;\r\n\r\n    this.projectileManager.removeProjectiles();\r\n    this.projectileManager = undefined;\r\n\r\n    this.surface = undefined;\r\n    this.shooter = undefined;\r\n\r\n    this.unregisterKeys();\r\n  }\r\n\r\n  registerKeys () {\r\n    keyboardInput.register('KeyA', () => { this.shooter.moveLeft(); });\r\n    keyboardInput.register('KeyD', () => { this.shooter.moveRight(); });\r\n    keyboardInput.register('Space', () => { this.shooter.fire(); });\r\n    keyboardInput.register('KeyE', () => { this.shooter.fireSuperzapper(); });\r\n    keyboardInput.register('End', () => { this.shooter.setState(Shooter.STATE_GOING_DOWN_THE_TUBE); });\r\n  }\r\n\r\n  unregisterKeys () {\r\n    keyboardInput.unregister('KeyA');\r\n    keyboardInput.unregister('KeyD');\r\n    keyboardInput.unregister('Space');\r\n    keyboardInput.unregister('KeyE');\r\n    keyboardInput.unregister('End');\r\n  }\r\n\r\n  update () {\r\n    this.projectileManager.update();\r\n    this.surfaceObjectsManager.update();\r\n    this.enemySpawner.updateScore(this.getCurrentScore());\r\n\r\n    if (this.shooter.inState(Shooter.STATE_ALIVE)) {\r\n      this.enemySpawner.spawn();\r\n    }\r\n\r\n    if (this.enemySpawner.reachedScoreTarget()\r\n      && this.surfaceObjectsManager.getAmountOfAliveEnemies() <= 3\r\n      && !this.shooter.inState(Shooter.STATE_GOING_DOWN_THE_TUBE)\r\n      && !this.shooter.inState(Shooter.STATE_REACHED_TUBE_BOTTOM)\r\n    ) {\r\n      this.shooter.setState(Shooter.STATE_GOING_DOWN_THE_TUBE);\r\n      messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_NEXT_LEVEL);\r\n    }\r\n\r\n    if (this.shooter.inState(Shooter.STATE_REACHED_TUBE_BOTTOM)) {\r\n      this.levelWonCallback();\r\n    }\r\n  }\r\n\r\n  shooterKilled () {\r\n    this.surfaceObjectsManager.removeEnemies();\r\n\r\n    if (this.shooterKilledCallback()) {\r\n      this.shooter.renovate();\r\n    }\r\n  }\r\n}\r\n","import { Vector2 } from 'three';\n\nexport default class BoundingBox2 {\n  /** @var {number} */\n  top;\n  /** @var {number} */\n  right;\n  /** @var {number} */\n  bottom;\n  /** @var {number} */\n  left;\n  /** @var {Vector2} */\n  center;\n\n  /**\n   * @param {number} top\n   * @param {number} right\n   * @param {number} bottom\n   * @param {number} left\n   */\n  constructor (top, right, bottom, left) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n\n    this.findCenter();\n  }\n\n  findCenter () {\n    this.center = new Vector2(\n      (this.left + this.right) / 2,\n      (this.top + this.bottom) / 2\n    );\n  }\n\n  /**\n   * @return {Vector2}\n   */\n  getCenter () {\n    return this.center;\n  }\n\n  /**\n   * @param {Vector2[]} points\n   * @return {BoundingBox2}\n   */\n  static create (points) {\n    let top, right, bottom, left;\n\n    let data = [...points];\n    let point = data.shift();\n\n    top = bottom = point.y;\n    left = right = point.x;\n\n    data.forEach(point => {\n      if (point.x < left) {\n        left = point.x;\n      }\n\n      if (point.x > right) {\n        right = point.x;\n      }\n\n      if (point.y > top) {\n        top = point.y;\n      }\n\n      if (point.y < bottom) {\n        bottom = point.y;\n      }\n    });\n\n    return new BoundingBox2(top, right, bottom, left);\n  }\n}\n","import { Vector2 } from 'three';\r\nimport BoundingBox2 from '@/Helpers/BoundingBox2';\r\nimport readonly from '@/utils/readonly';\r\n\r\nexport default class Surface {\r\n  @readonly\r\n  static LINES_AMOUNT = 16;\r\n\r\n  /** @var {number} id */\r\n  id;\r\n  /** @var {string} name */\r\n  name;\r\n  /** @var {boolean} isOpen */\r\n  isOpen;\r\n  /** @var {number} lanesAmount */\r\n  lanesAmount;\r\n  /** @var {number} activeLaneId */\r\n  activeLaneId;\r\n  /** @var {number} depth */\r\n  depth;\r\n\r\n  /** @var {Vector2[]} rawLanesCoords */\r\n  rawLanesCoords;\r\n  /** @var {Vector2[]} rawLanesCoords */\r\n  lanesCoords;\r\n  /** @var {Vector2[]} lanesMiddleCoords */\r\n  lanesMiddleCoords;\r\n  /** @var {number[]} lanesCenterDirectionRadians */\r\n  lanesCenterDirectionRadians;\r\n\r\n  /** @var {number[]} shortedLanes */\r\n  shortedLanes;\r\n\r\n  /**\r\n   * @param {number} id\r\n   * @param {string} name\r\n   * @param {boolean} isOpen\r\n   * @param {Vector2[]} lanesCoords\r\n   * @param {number} zOffset\r\n   */\r\n  constructor (id, name, isOpen, lanesCoords, zOffset = 0) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.isOpen = isOpen;\r\n    this.rawLanesCoords = lanesCoords;\r\n    this.zOffset = zOffset;\r\n    this.lanesAmount = lanesCoords.length - (isOpen ? 1 : 0);\r\n    this.activeLaneId = 0;\r\n    this.depth = 20;\r\n\r\n    this.shortedLanes = new Array(this.lanesAmount).fill(0);\r\n\r\n    this.calculateCenteredLanesCoords();\r\n    this.calculateLanesCenterCoords();\r\n    this.calculateLanesCenterDirection();\r\n  }\r\n\r\n  calculateCenteredLanesCoords () {\r\n    let boundingBox2 = BoundingBox2.create(this.rawLanesCoords);\r\n    this.lanesCoords = this.rawLanesCoords.map(vector2 => vector2.sub(boundingBox2.getCenter()));\r\n  }\r\n\r\n  calculateLanesCenterCoords () {\r\n    this.lanesMiddleCoords = [];\r\n\r\n    for (let i = 0; i < this.lanesAmount; i++) {\r\n      let boundingBox2 = BoundingBox2.create([\r\n        this.lanesCoords[i],\r\n        this.lanesCoords[(i + 1) % Surface.LINES_AMOUNT]\r\n      ]);\r\n      this.lanesMiddleCoords.push(boundingBox2.center);\r\n    }\r\n  }\r\n\r\n  calculateLanesCenterDirection () {\r\n    this.lanesCenterDirectionRadians = [];\r\n\r\n    this.lanesMiddleCoords.forEach((center, i) => {\r\n      let angleVector = this.lanesCoords[i].clone();\r\n      let axis = center.clone();\r\n\r\n      angleVector.sub(axis).normalize();\r\n\r\n      this.lanesCenterDirectionRadians.push(angleVector.angle());\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {number} projectedLaneId\r\n   * @return {number}\r\n   */\r\n  getActualLaneIdFromProjectedMovement (projectedLaneId) {\r\n    if (this.isOpen) {\r\n      if (projectedLaneId < 0) {\r\n        return 0;\r\n      } else if (projectedLaneId >= this.lanesAmount) {\r\n        return this.lanesAmount - 1;\r\n      }\r\n      return projectedLaneId;\r\n    } else {\r\n      projectedLaneId %= this.lanesAmount;\r\n\r\n      if (projectedLaneId < 0) {\r\n        projectedLaneId += this.lanesAmount;\r\n      }\r\n\r\n      return projectedLaneId;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} fromLaneId\r\n   * @param {number} toLaneId\r\n   * @return {number}\r\n   */\r\n  getShortestPathDirection (fromLaneId, toLaneId) {\r\n    if (fromLaneId === toLaneId) {\r\n      return 0;\r\n    }\r\n\r\n    if (this.isOpen) {\r\n      return (toLaneId - fromLaneId) > 0 ? 1 : -1;\r\n    } else {\r\n      let isDiffPositive = (toLaneId - fromLaneId) > 0;\r\n      let cwDistance, ccwDistance;\r\n\r\n      if (isDiffPositive) {\r\n        cwDistance = Math.abs(toLaneId - fromLaneId);\r\n        ccwDistance = Math.abs(toLaneId - fromLaneId - this.lanesAmount);\r\n      } else {\r\n        cwDistance = Math.abs(toLaneId - fromLaneId + this.lanesAmount);\r\n        ccwDistance = Math.abs(toLaneId - fromLaneId);\r\n      }\r\n\r\n      let isCwShortest = cwDistance <= ccwDistance;\r\n      return isCwShortest ? 1 : -1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} desiredActiveLane\r\n   */\r\n  setActiveLane (desiredActiveLane) {\r\n    this.activeLaneId = this.getActualLaneIdFromProjectedMovement(desiredActiveLane);\r\n  }\r\n\r\n  shortLane (laneId) {\r\n    this.shortedLanes[laneId]++;\r\n  }\r\n\r\n  unshortLane (laneId) {\r\n    this.shortedLanes[laneId]--;\r\n  }\r\n\r\n  /**\r\n   * @param {number} laneId\r\n   * @return {boolean}\r\n   */\r\n  isLaneShorted (laneId) {\r\n    return this.shortedLanes[laneId] > 0;\r\n  }\r\n\r\n  /**\r\n   * @param {{id: number, name:string, isOpen: boolean, coords:{x: number, y: number}[], zOffset: number}[]} dataset\r\n   * @return {Surface[]}\r\n   */\r\n  static fromDataset (dataset) {\r\n    return dataset.map(data =>\r\n      new Surface(\r\n        data.id,\r\n        data.name,\r\n        data.isOpen,\r\n        data.coords.map(coords =>\r\n          new Vector2(coords.x, coords.y)\r\n        ),\r\n        data.zOffset\r\n      )\r\n    );\r\n  }\r\n}\r\n","export default class Angle {\n  static toDegrees (angleInRadians) {\n    return angleInRadians / Math.PI * 180;\n  }\n\n  static toRadians (angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n  }\n}\n","import { BufferGeometry, Group, Line, LineBasicMaterial, MeshBasicMaterial, Vector3 } from 'three';\r\nimport readonly from '@/utils/readonly';\r\nimport Surface from '@/Object/Surface/Surface';\r\nimport Angle from '@/utils/Angle';\r\n\r\nexport default class SurfaceRenderer extends Group {\r\n  @readonly\r\n  static WIREFRAME_LINE_WIDTH = 2;\r\n  @readonly\r\n  static ACTIVE_LANE_COLOR = 0xffff00;\r\n  @readonly\r\n  static DEFAULT_LANE_COLOR = [0x0000ff, 0xff0000, 0x00ff00];\r\n  @readonly\r\n  static SHORTED_LANE_COLOR = 0xffffff;\r\n\r\n  /** @var {string} **/\r\n  type = 'Group';\r\n\r\n  /** @var {Surface} surface */\r\n  surface;\r\n\r\n  /** @var {number} level */\r\n  level;\r\n\r\n  /** @var {number} */\r\n  connectorFrontDepth = 0;\r\n  /** @var {number} */\r\n  connectorBackDepth = 0;\r\n\r\n  /** @var {Line[]} **/\r\n  lanesLines = [];\r\n  /** @var {Line[]} **/\r\n  lanesConnectors = [];\r\n\r\n  /** @var {LineBasicMaterial} */\r\n  laneActiveMaterial;\r\n  /** @var {LineBasicMaterial} */\r\n  laneDefaultMaterial;\r\n  /** @var {LineBasicMaterial} */\r\n  laneShortedMaterial;\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {Surface} surface\r\n   * @param {number} level\r\n   */\r\n  constructor (surface, level) {\r\n    super();\r\n\r\n    this.castShadow = false;\r\n\r\n    this.level = level;\r\n    this.setSurface(surface);\r\n  }\r\n\r\n  /**\r\n   * @param {Surface} surface\r\n   */\r\n  setSurface (surface) {\r\n    this.surface = surface;\r\n\r\n    this.createLanes();\r\n    this.update();\r\n  }\r\n\r\n  update () {\r\n    let activeLaneId = this.surface.activeLaneId;\r\n\r\n    //Normal lanes\r\n    for (let i = 0; i < this.surface.lanesAmount; i++) {\r\n      this.setLinesAppearance(i, this.laneDefaultMaterial);\r\n      this.setConnectorsAppearance(i, this.laneDefaultMaterial);\r\n    }\r\n\r\n    //Active lane\r\n    this.setConnectorsAppearance(activeLaneId, this.laneActiveMaterial);\r\n    this.setLinesAppearance(activeLaneId, this.laneActiveMaterial);\r\n    this.setLinesAppearance(activeLaneId + 1, this.laneActiveMaterial);\r\n\r\n    //Shorted lanes\r\n    let shortedLanesIds = this.surface.shortedLanes\r\n      .map((shortedStrength, laneId) => (shortedStrength > 0 ? laneId : -1))\r\n      .filter(laneId => laneId !== -1);\r\n\r\n    for (let i = 0; i < shortedLanesIds.length; i++) {\r\n      let thisLaneId = shortedLanesIds[i];\r\n      let prevShortedLaneId = (i - 1 >= 0) ? shortedLanesIds[i - 1] : shortedLanesIds[shortedLanesIds.length - 1];\r\n\r\n      this.setConnectorsAppearance(thisLaneId, this.laneShortedMaterial, false);\r\n\r\n      let hole = prevShortedLaneId + 1 === thisLaneId;\r\n      this.setLinesAppearance(shortedLanesIds[i], this.laneShortedMaterial, !hole);\r\n      this.setLinesAppearance(shortedLanesIds[i] + 1, this.laneShortedMaterial, true);\r\n    }\r\n  }\r\n\r\n  createLanes () {\r\n    this.clear();\r\n\r\n    this.connectorBackDepth = this.surface.depth;\r\n\r\n    this.lanes = [];\r\n    this.lanesLines = [];\r\n    this.lanesConnectors = [];\r\n\r\n    let surfaceColor = Math.floor(this.level / 16) % 3;\r\n\r\n    this.laneDefaultMaterial = new LineBasicMaterial({ color: SurfaceRenderer.DEFAULT_LANE_COLOR[surfaceColor] });\r\n    this.laneActiveMaterial = new LineBasicMaterial({ color: SurfaceRenderer.ACTIVE_LANE_COLOR });\r\n    this.laneShortedMaterial = new LineBasicMaterial({ color: SurfaceRenderer.SHORTED_LANE_COLOR });\r\n\r\n    for (let i = 0; i < this.getAmountOfLanes(); i++) {\r\n      let current = this.surface.lanesCoords[i];\r\n\r\n      //Create lines\r\n      let linePoints = [\r\n        new Vector3(current.x, current.y, 0),\r\n        new Vector3(current.x, current.y, this.surface.depth)\r\n      ];\r\n\r\n      this.lanesLines.push(\r\n        new Line(new BufferGeometry().setFromPoints(linePoints), this.laneDefaultMaterial)\r\n      );\r\n    }\r\n\r\n    for (let i = 0; i < this.getAmountOfLanes(false); i++) {\r\n      let current = this.surface.lanesCoords[i];\r\n      let next = this.surface.lanesCoords[(i + 1) % Surface.LINES_AMOUNT];\r\n\r\n      //Create connectors\r\n      let connectorFrontPoints = [\r\n        new Vector3(current.x, current.y, this.connectorFrontDepth),\r\n        new Vector3(next.x, next.y, this.connectorFrontDepth)\r\n      ];\r\n\r\n      let connectorBackPoints = [\r\n        new Vector3(current.x, current.y, this.connectorBackDepth),\r\n        new Vector3(next.x, next.y, this.connectorBackDepth)\r\n      ];\r\n\r\n      this.lanesConnectors.push(\r\n        new Line(new BufferGeometry().setFromPoints(connectorFrontPoints), this.laneDefaultMaterial),\r\n        new Line(new BufferGeometry().setFromPoints(connectorBackPoints), this.laneDefaultMaterial)\r\n      );\r\n    }\r\n\r\n    this.lanesLines.forEach(line => this.add(line));\r\n    this.lanesConnectors.forEach(connector => this.add(connector));\r\n\r\n    // this.createCenterIndicators();\r\n  }\r\n\r\n  createCenterIndicators () {\r\n    const material = new MeshBasicMaterial({\r\n      color: 0x00ff00,\r\n    });\r\n\r\n    this.surface.lanesMiddleCoords.forEach((center, i) => {\r\n      let angle = this.surface.lanesCoords[i].clone();\r\n      let axis = center.clone();\r\n\r\n      angle.rotateAround(axis, Angle.toRadians(-90));\r\n\r\n      let geometry = new BufferGeometry().setFromPoints([\r\n        new Vector3(axis.x, axis.y, 0),\r\n        new Vector3(angle.x, angle.y, 0),\r\n      ]);\r\n\r\n      this.add(new Line(geometry, material));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {number} connectorId\r\n   * @param {LineBasicMaterial} material\r\n   * @param {boolean} visible\r\n   */\r\n  setConnectorsAppearance (connectorId, material, visible = true) {\r\n    connectorId %= this.surface.lanesAmount;\r\n\r\n    this.lanesConnectors[connectorId * 2].material = material;\r\n    this.lanesConnectors[connectorId * 2 + 1].material = material;\r\n\r\n    this.lanesConnectors[connectorId * 2].visible = visible;\r\n    this.lanesConnectors[connectorId * 2 + 1].visible = visible;\r\n  }\r\n\r\n  /**\r\n   * @param {number} lineId\r\n   * @param {LineBasicMaterial} material\r\n   * @param {boolean} visible\r\n   */\r\n  setLinesAppearance (lineId, material, visible = true) {\r\n    lineId %= this.surface.lanesAmount;\r\n\r\n    this.lanesLines[lineId].material = material;\r\n    this.lanesLines[lineId].visible = visible;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  getAmountOfLanes (includeOpen = true) {\r\n    return this.surface.lanesAmount + (includeOpen && this.surface.isOpen ? 1 : 0);\r\n  }\r\n}\r\n","import { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\n\nconst objLoader = new OBJLoader();\nexport default objLoader;\n","/**\n * @param {Vector2 | Vector3} v1\n * @param {Vector2 | Vector3} v2\n * @param {number} epsilon\n */\nexport default function compareVectors (v1, v2, epsilon = Number.EPSILON) {\n  return ((Math.abs(v1.x - v2.x) < epsilon)\n    && (Math.abs(v1.y - v2.y) < epsilon))\n    && (v1.z === undefined || Math.abs(v1.z - v2.z) < epsilon);\n}\n\n","const enemies = ([\r\n  {\r\n    name: 'flipper',\r\n    color: 0xcc0033,\r\n    coords: [\r\n      [\r\n        {x: 0.0735, y: 0.7184}, {x: 0.2424, y: 0.5},\r\n        {x: 0.0735, y: 0.2584}, {x: 0.4735, y: 0.5},\r\n        {x: 0.8735, y: 0.2584}, {x: 0.7046, y: 0.5},\r\n        {x: 0.8735, y: 0.7184}, {x: 0.4735, y: 0.5},\r\n        {x: 0.0735, y: 0.7184},\r\n      ],\r\n    ]\r\n  },\r\n  {\r\n    name: 'fuseball',\r\n    color:\r\n      [\r\n        0x1408f7,\r\n        0xd5f008,\r\n        0xf20808,\r\n        0xffffff,\r\n        0xde18ce,\r\n      ],\r\n    coords: [\r\n      [\r\n        {x: 0.5, y: 0.5}, {x: 0.2008, y: 0.555},\r\n        {x: 0.1262, y: 0.4646},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.5}, {x: 0.3854, y: 0.3428},\r\n        {x: 0.2538, y: 0.2839}, {x: 0.3, y: 0.2},\r\n        {x: 0.2479, y: 0.1484},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.5}, {x: 0.6349, y: 0.6061},\r\n        {x: 0.7214, y: 0.5727}, {x: 0.8451, y: 0.6159},\r\n        {x: 0.8372, y: 0.7278}, {x: 0.9296, y: 0.7416},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.5}, {x: 0.5033, y: 0.6611},\r\n        {x: 0.4326, y: 0.7239}, {x: 0.5308, y: 0.7828},\r\n        {x: 0.4679, y: 0.8575}, {x: 0.5446, y: 0.9596},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.5}, {x: 0.6, y: 0.4},\r\n        {x: 0.6978, y: 0.4253}, {x: 0.6978, y: 0.3428},\r\n        {x: 0.8117, y: 0.3546}, {x: 0.8097, y: 0.2643},\r\n        {x: 0.9276, y: 0.2760},\r\n      ],\r\n    ]\r\n  },\r\n  {\r\n    name: 'flipperTanker',\r\n    color: 0xff00cc,\r\n    coords: [\r\n      [\r\n        { x: 0.5, y: 0.1 }, { x: 0.5, y: 0.4 },\r\n        { x: 0.1, y: 0.5 }, { x: 0.5, y: 0.1 },\r\n      ],\r\n      [\r\n        { x: 0.5, y: 0.1 }, { x: 0.6, y: 0.5 },\r\n        { x: 0.9, y: 0.5 }, { x: 0.5, y: 0.1 },\r\n      ],\r\n      [\r\n        {x: 0.9, y: 0.5}, {x: 0.5, y: 0.9},\r\n        {x: 0.5, y: 0.6}, {x: 0.9, y: 0.5},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.9}, {x: 0.1, y: 0.5},\r\n        {x: 0.4, y: 0.5}, {x: 0.5, y: 0.9},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.6}, {x: 0.6, y: 0.5},\r\n        {x: 0.5, y: 0.4}, {x: 0.4, y: 0.5},\r\n        {x: 0.5, y: 0.6},\r\n      ],\r\n    ]\r\n  },\r\n  {\r\n    name: 'fuseballTanker',\r\n    color: [\r\n      0xff00cc,\r\n      0xff00cc,\r\n      0xff00cc,\r\n      0xff00cc,\r\n      0xff00cc,\r\n      0x00ff00,\r\n      0x000099,\r\n      0xeeff41,\r\n      0xffffff,\r\n    ],\r\n    coords: [\r\n      [\r\n        {x: 0.5, y: 0.1}, {x: 0.5, y: 0.4},\r\n        {x: 0.1, y: 0.5}, {x: 0.5, y: 0.1},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.1}, {x: 0.6, y: 0.5},\r\n        {x: 0.9, y: 0.5}, {x: 0.5, y: 0.1},\r\n      ],\r\n      [\r\n        {x: 0.9, y: 0.5}, {x: 0.5, y: 0.9},\r\n        {x: 0.5, y: 0.6}, {x: 0.9, y: 0.5},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.9}, {x: 0.1, y: 0.5},\r\n        {x: 0.4, y: 0.5}, {x: 0.5, y: 0.9},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.6}, {x: 0.6, y: 0.5},\r\n        {x: 0.5, y: 0.4}, {x: 0.4, y: 0.5},\r\n        {x: 0.5, y: 0.6},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.5}, {x: 0.6, y: 0.5},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.5}, {x: 0.5, y: 0.6},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.5}, {x: 0.4, y: 0.5},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.5}, {x: 0.5, y: 0.4},\r\n      ],\r\n    ]\r\n  },\r\n\r\n  {\r\n    name: 'pulsarTanker',\r\n    color: [\r\n      0xff00cc,\r\n      0xff00cc,\r\n      0xff00cc,\r\n      0xff00cc,\r\n      0xff00cc,\r\n      0x00ffff,\r\n    ],\r\n    coords: [\r\n      [\r\n        {x: 0.5, y: 0.1}, {x: 0.5, y: 0.4},\r\n        {x: 0.1, y: 0.5}, {x: 0.5, y: 0.1},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.1}, {x: 0.6, y: 0.5},\r\n        {x: 0.9, y: 0.5}, {x: 0.5, y: 0.1},\r\n      ],\r\n      [\r\n        {x: 0.9, y: 0.5}, {x: 0.5, y: 0.9},\r\n        {x: 0.5, y: 0.6}, {x: 0.9, y: 0.5},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.9}, {x: 0.1, y: 0.5},\r\n        {x: 0.4, y: 0.5}, {x: 0.5, y: 0.9},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.6}, {x: 0.6, y: 0.5},\r\n        {x: 0.5, y: 0.4}, {x: 0.4, y: 0.5},\r\n        {x: 0.5, y: 0.6},\r\n      ],\r\n      [\r\n        {x: 0.4281, y: 0.4718}, {x: 0.4607, y: 0.5607},\r\n        {x: 0.5, y: 0.4}, {x: 0.5392, y: 0.5607},\r\n        {x: 0.5779, y: 0.4718},\r\n      ],\r\n    ]\r\n  },\r\n  {\r\n    name: 'pulsar',\r\n    color: 0x00ffff,\r\n    coords: [\r\n      [\r\n        { x: 0, y: 0.5 }, { x: 0.2, y: 0.2 },\r\n        { x: 0.3615, y: 0.7383 }, { x: 0.5, y: 0.2 },\r\n        { x: 0.6335, y: 0.7501 }, { x: 0.8, y: 0.2 },\r\n        { x: 1, y: 0.5 },\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    name: 'spiker',\r\n    color: 0x00ff33,\r\n    coords: [\r\n      [\r\n        {x: 0.4452, y: 0.5008}, {x: 0.4923, y: 0.4597},\r\n        {x: 0.4499, y: 0.4231}, {x: 0.3965, y: 0.4293},\r\n        {x: 0.3403, y: 0.4947}, {x: 0.3737, y: 0.5737},\r\n        {x: 0.4391, y: 0.6041}, {x: 0.5424, y: 0.5676},\r\n        {x: 0.6002, y: 0.4947}, {x: 0.5759, y: 0.4232},\r\n        {x: 0.5212, y: 0.3777}, {x: 0.4345, y: 0.3701},\r\n        {x: 0.3388, y: 0.3913}, {x: 0.2704, y: 0.5023},\r\n        {x: 0.3099, y: 0.6071}, {x: 0.4011, y: 0.6664},\r\n        {x: 0.5120, y: 0.6740}, {x: 0.6048, y: 0.6254},\r\n        {x: 0.6625, y: 0.5570}, {x: 0.6853, y: 0.4719},\r\n        {x: 0.6838, y: 0.3928}, {x: 0.6154, y: 0.3199},\r\n        {x: 0.5151, y: 0.2682}, {x: 0.3585, y: 0.2713},\r\n      ]\r\n    ]\r\n  }\r\n]);\r\n\r\nexport default enemies;\r\n","const explosions = ([\r\n  {\r\n    name: 'player',\r\n    color:\r\n      [\r\n        0xffffff,\r\n        0xffff00,\r\n        0xff0000,\r\n        0xffffff,\r\n        0xffff00,\r\n      ],\r\n    coords: [\r\n      [\r\n        { x: 0.5, y: 0.8 }, { x: 0.5966, y: 0.8819 },\r\n        { x: 0.6112, y: 0.7561 }, { x: 0.7898, y: 0.8527 },\r\n        { x: 0.7862, y: 0.7707 },\r\n      ],\r\n      [\r\n        {x: 0.7862, y: 0.7707}, {x: 0.8555, y: 0.7287},\r\n        {x: 0.7, y: 0.5}, {x: 0.9156, y: 0.4480},\r\n        {x: 0.5984, y: 0.3313}, {x: 0.7461, y: 0.0943}\r\n      ],\r\n      [\r\n        {x: 0.7461, y: 0.0943}, {x: 0.4963, y: 0.1727},\r\n        {x: 0.4726, y: 0.0524}, {x: 0.3869, y: 0.2110},\r\n        {x: 0.2575, y: 0.048}\r\n      ],\r\n      [\r\n        {x: 0.2575, y: 0.048}, {x: 0.2192, y: 0.2110},\r\n        {x: 0.0606, y: 0.1964}, {x: 0.1828, y: 0.4097},\r\n        {x: 0.0879, y: 0.4480}\r\n      ],\r\n      [\r\n        {x: 0.0879, y: 0.4480}, {x: 0.1791, y: 0.5391},\r\n        {x: 0.0879, y: 0.6850}, {x: 0.3651, y: 0.6412},\r\n        {x: 0.3505, y: 0.90379}, {x: 0.5, y: 0.8},\r\n      ],\r\n    ]\r\n  },\r\n  {\r\n    name: 'enemy',\r\n    color:\r\n      [\r\n        0xffffff,\r\n        0xffffff,\r\n        0xffffff,\r\n        0xffffff,\r\n        0xffffff,\r\n        0xffffff,\r\n        0xffffff,\r\n        0xffffff,\r\n      ],\r\n    coords: [\r\n      [\r\n        {x: 0.1, y: 0.5}, {x: 0.9, y: 0.5},\r\n      ],\r\n      [\r\n        {x: 0.1280, y: 0.3528}, {x: 0.8696, y: 0.6527},\r\n      ],\r\n      [\r\n        {x: 0.2174, y: 0.2168}, {x: 0.7814, y: 0.7842},\r\n      ],\r\n      [\r\n        {x: 0.3350, y: 0.1356}, {x: 0.6670, y: 0.8634},\r\n      ],\r\n      [\r\n        {x: 0.5, y: 0.1}, {x: 0.5, y: 0.9},\r\n      ],\r\n      [\r\n        {x: 0.6728, y: 0.1392}, {x: 0.3311, y: 0.8626},\r\n      ],\r\n      [\r\n        {x: 0.7851, y: 0.2194}, {x: 0.2168, y: 0.7825},\r\n      ],\r\n      [\r\n        {x: 0.8653, y: 0.3371}, {x: 0.1361, y: 0.6661},\r\n      ],\r\n    ]\r\n  },\r\n]);\r\n\r\nexport default explosions;\r\n","import { BufferGeometry, Group, Line, MeshBasicMaterial, Vector2, Vector3 } from 'three';\r\nimport enemies from '@/Assets/Enemies';\r\nimport explosions from '@/Assets/Explosions';\r\nimport BoundingBox2 from '@/Helpers/BoundingBox2';\r\n\r\nexport default class SurfaceObjectWrapper extends Group {\r\n  /** @var {SurfaceObject} */\r\n  object;\r\n  /** @var {Surface} */\r\n  surface;\r\n\r\n  /** @var {Group} */\r\n  modelGroup;\r\n  /** @var {Group} */\r\n  explosionGroup;\r\n\r\n  /** @var {?string} */\r\n  objectType = null;\r\n\r\n  /**\r\n   * @param {SurfaceObject} object\r\n   * @param {Surface} surface\r\n   * @param {string} objectType\r\n   */\r\n  constructor (object, surface, objectType) {\r\n    super();\r\n\r\n    this.surface = surface;\r\n    this.objectType = objectType;\r\n    this.setObjectRef(object);\r\n\r\n    this.clear();\r\n    this.loadModel();\r\n\r\n    if (this.object.canExplode) {\r\n      this.loadExplosion();\r\n      this.setVisualsToNormal();\r\n    }\r\n\r\n    this.position.set(\r\n      this.surface.lanesMiddleCoords[this.object.laneId].x,\r\n      this.surface.lanesMiddleCoords[this.object.laneId].y,\r\n      this.object.zPosition * this.surface.depth\r\n    );\r\n\r\n    this.rotation.z = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n  }\r\n\r\n  update () {\r\n    if (this.object === null) {\r\n      return;\r\n    }\r\n\r\n    this.manageVisibility();\r\n    this.updateState();\r\n    this.move();\r\n    this.rotate();\r\n  }\r\n\r\n  manageVisibility () {\r\n    this.visible = this.object.alive;\r\n  }\r\n\r\n  /**\r\n   * @param {SurfaceObject} object\r\n   */\r\n  setObjectRef (object) {\r\n    if (this.objectType !== object.type) {\r\n      throw new Error(`Can't render ${object.type} with ${this.objectType}Renderer.`);\r\n    }\r\n\r\n    this.object = object;\r\n\r\n    this.position.set(\r\n      this.surface.lanesMiddleCoords[this.object.laneId].x,\r\n      this.surface.lanesMiddleCoords[this.object.laneId].y,\r\n      this.object.zPosition * this.surface.depth\r\n    );\r\n\r\n    this.rotation.z = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n    this.visible = true;\r\n\r\n    if (this.modelGroup !== undefined) {\r\n      this.setVisualsToNormal();\r\n    }\r\n  }\r\n\r\n  breakObjectRef () {\r\n    this.object = null;\r\n    this.visible = false;\r\n  }\r\n\r\n  setVisualsToNormal () {\r\n    throw new Error('Method \\'setVisualsToNormal()\\' must be implemented.');\r\n  }\r\n\r\n  setVisualsToExplode () {\r\n    throw new Error('Method \\'setVisualsToExplode()\\' must be implemented.');\r\n  }\r\n\r\n  updateState () {\r\n    throw new Error('Method \\'updateState()\\' must be implemented.');\r\n  }\r\n\r\n  move () {\r\n    throw new Error('Method \\'move()\\' must be implemented.');\r\n  }\r\n\r\n  rotate () {\r\n    throw new Error('Method \\'rotate()\\' must be implemented.');\r\n  }\r\n\r\n  loadModel () {\r\n    throw new Error('Method \\'loadModel()\\' must be implemented.');\r\n  }\r\n\r\n  loadExplosion () {\r\n    this.explosionGroup = new Group();\r\n    this.explosionGroup.visible = false;\r\n\r\n    let isEnemy = enemies.find(enemy => enemy.name === this.object.type) !== undefined;\r\n\r\n    let explosionDataset = explosions.find(explosion => explosion.name === (isEnemy ? 'enemy' : 'player'));\r\n    if (explosionDataset === undefined) {\r\n      throw new Error('Unknown explosion: ' + this.object.type);\r\n    }\r\n\r\n    let boundingBox2 = BoundingBox2.create([].concat(...explosionDataset.coords));\r\n\r\n    explosionDataset.coords.forEach((xyArray, i) => {\r\n      let material = new MeshBasicMaterial({\r\n          color: Array.isArray(explosionDataset.color) ? explosionDataset.color[i] : explosionDataset.color,\r\n        }\r\n      );\r\n\r\n      let geometry = new BufferGeometry().setFromPoints(\r\n        xyArray\r\n          .map(xyArray => new Vector2(xyArray.x, xyArray.y))\r\n          .map(vector2 => vector2.sub(boundingBox2.getCenter()))\r\n          .map(vector2 => new Vector3(vector2.x, vector2.y, 0))\r\n      );\r\n\r\n      this.explosionGroup.add(new Line(geometry, material));\r\n    });\r\n\r\n    this.add(this.explosionGroup);\r\n  }\r\n}\r\n","import * as Three from 'three';\r\nimport { Group, MeshBasicMaterial } from 'three';\r\nimport objLoader from '@/utils/objLoader';\r\nimport readonly from '@/utils/readonly';\r\nimport compareVectors from '@/utils/compareVectors';\r\nimport SurfaceObjectWrapper from '@/Renderer/Surface/SurfaceObjectWrapper';\r\nimport Shooter from '@/Object/Shooters/Shooter';\r\n\r\nexport default class ShooterRenderer extends SurfaceObjectWrapper {\r\n  @readonly\r\n  static MODEL_PATH = '../models/player.obj';\r\n  @readonly\r\n  static MODEL_SCALE = 0.15;\r\n  @readonly\r\n  static MODEL_ROTATION = -Math.PI / 2;\r\n  @readonly\r\n  static MODEL_Z_OFFSET = -0.3;\r\n  @readonly\r\n  static SHOOTER_WIREFRAME_COLOR = 0xffff00;\r\n  @readonly\r\n  static EXPLOSION_ROTATION_SPEED = 0.03;\r\n\r\n  /** @var {number} */\r\n  positionChangeSpeed = 0.3;\r\n  /** @var {number} */\r\n  rotationChangeSpeed = 0.2;\r\n\r\n  constructor (shooter, surface) {\r\n    super(shooter, surface, Shooter.TYPE_SHOOTER);\r\n  }\r\n\r\n  setVisualsToNormal () {\r\n    this.explosionGroup.visible = false;\r\n  }\r\n\r\n  setVisualsToExplode () {\r\n    this.explosionGroup.visible = true;\r\n  }\r\n\r\n  updateState () {\r\n    if (this.object.inState(Shooter.STATE_EXPLODING)) {\r\n      this.explodeAnimation();\r\n\r\n    } else if (this.object.inState(Shooter.STATE_DISAPPEARING)) {\r\n      this.disappearingAnimation();\r\n\r\n    } else if (this.object.inState(Shooter.STATE_RENOVATING)) {\r\n      this.renovatingAnimation();\r\n\r\n    } else {\r\n      this.setVisualsToNormal();\r\n    }\r\n  }\r\n\r\n  disappearingAnimation () {\r\n    let scale = Math.pow(this.object.stateProgressInTime() * 2 - 1, 4);\r\n\r\n    if (this.object.stateProgressInTime() <= 0.5) {\r\n      let modelScale = scale;\r\n      this.modelGroup.scale.set(modelScale, modelScale, modelScale);\r\n    } else {\r\n      this.modelGroup.visible = false;\r\n    }\r\n  }\r\n\r\n  renovatingAnimation () {\r\n    let modelScale = Math.pow(this.object.stateProgressInTime(), 2);\r\n    this.modelGroup.scale.set(modelScale, modelScale, modelScale);\r\n    this.modelGroup.visible = true;\r\n  }\r\n\r\n  explodeAnimation () {\r\n    this.setVisualsToExplode();\r\n    this.zRotationOffset += ShooterRenderer.EXPLOSION_ROTATION_SPEED;\r\n\r\n    let scale = Math.pow(this.object.stateProgressInTime() * 2 - 1, 4);\r\n    let explosionScale = 1 - scale;\r\n    this.explosionGroup.scale.set(explosionScale, explosionScale, explosionScale);\r\n\r\n    if (this.object.stateProgressInTime() <= 0.5) {\r\n      let modelScale = scale;\r\n      this.modelGroup.scale.set(modelScale, modelScale, modelScale);\r\n    } else {\r\n      this.modelGroup.visible = false;\r\n    }\r\n  }\r\n\r\n  move () {\r\n    this.position.z = this.object.zPosition * this.surface.depth;\r\n    let desiredPosition = this.surface.lanesMiddleCoords[this.object.laneId];\r\n\r\n    if (compareVectors(desiredPosition, this.position)) {\r\n      return;\r\n    }\r\n\r\n    let movement = desiredPosition.clone();\r\n    movement.sub(this.position);\r\n    movement.setLength(this.positionChangeSpeed);\r\n\r\n    if (Math.abs(movement.x) > Math.abs(desiredPosition.x - this.position.x)) {\r\n      movement.x = desiredPosition.x - this.position.x;\r\n    }\r\n\r\n    if (Math.abs(movement.y) > Math.abs(desiredPosition.y - this.position.y)) {\r\n      movement.y = desiredPosition.y - this.position.y;\r\n    }\r\n\r\n    this.position.x += movement.x;\r\n    this.position.y += movement.y;\r\n  }\r\n\r\n  rotate () {\r\n    let desiredRotation = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n\r\n    if (desiredRotation === this.rotation.z) {\r\n      return;\r\n    }\r\n\r\n    if (Math.abs(desiredRotation - this.rotation.z) > this.rotationChangeSpeed) {\r\n      let leftAngularDistance, rightAngularDistance;\r\n\r\n      if (desiredRotation < this.rotation.z) {\r\n        leftAngularDistance = this.rotation.z - desiredRotation;\r\n        rightAngularDistance = 2 * Math.PI - this.rotation.z + desiredRotation;\r\n      } else {\r\n        leftAngularDistance = 2 * Math.PI - desiredRotation + this.rotation.z;\r\n        rightAngularDistance = desiredRotation - this.rotation.z;\r\n      }\r\n\r\n      let rotationDirection = leftAngularDistance > rightAngularDistance ? 1 : -1;\r\n      this.rotation.z += rotationDirection * this.rotationChangeSpeed;\r\n\r\n      if (this.rotation.z >= 2 * Math.PI) {\r\n        this.rotation.z -= 2 * Math.PI;\r\n      } else if (this.rotation.z < 0) {\r\n        this.rotation.z += 2 * Math.PI;\r\n      }\r\n    } else {\r\n      this.rotation.z = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n    }\r\n  }\r\n\r\n  loadModel () {\r\n    let that = this;\r\n    this.modelGroup = new Group();\r\n\r\n    objLoader.load(\r\n      ShooterRenderer.MODEL_PATH,\r\n      (object) => {\r\n        object.traverse(function (child) {\r\n          if (child.isMesh) {\r\n            const shooterWireframe = new Three.LineSegments(\r\n              new Three.WireframeGeometry(child.geometry),\r\n              new Three.LineBasicMaterial({\r\n                color: ShooterRenderer.SHOOTER_WIREFRAME_COLOR,\r\n              })\r\n            );\r\n            child.add(shooterWireframe);\r\n\r\n            child.material = new MeshBasicMaterial({\r\n              color: 0,\r\n              polygonOffset: true,\r\n              polygonOffsetFactor: 2,\r\n              polygonOffsetUnits: 1\r\n            });\r\n\r\n            child.scale.set(ShooterRenderer.MODEL_SCALE, ShooterRenderer.MODEL_SCALE, ShooterRenderer.MODEL_SCALE);\r\n            child.rotation.y = ShooterRenderer.MODEL_ROTATION;\r\n            child.position.z = ShooterRenderer.MODEL_Z_OFFSET;\r\n\r\n            that.modelGroup.add(child);\r\n          }\r\n        });\r\n      },\r\n      null,\r\n      x => console.warn(x)\r\n    );\r\n\r\n    this.add(this.modelGroup);\r\n  }\r\n}\r\n","import { BoxGeometry, LineBasicMaterial, LineSegments, Mesh, MeshBasicMaterial, WireframeGeometry } from 'three';\r\nimport SurfaceObjectWrapper from '@/Renderer/Surface/SurfaceObjectWrapper';\r\nimport readonly from '@/utils/readonly';\r\nimport Projectile from '@/Object/Projectiles/Projectile';\r\n\r\nexport default class ProjectileRenderer extends SurfaceObjectWrapper {\r\n  @readonly\r\n  static PROJECTILE_SIZE = 0.1;\r\n  @readonly\r\n  static PROJECTILE_SHOOTER_COLOR = 0xffff00;\r\n  @readonly\r\n  static PROJECTILE_ENEMY_COLOR = 0xff00ff;\r\n  @readonly\r\n  static ROTATION_SPEED = 0.1;\r\n\r\n  /**\r\n   * @param {Projectile} projectile\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (projectile, surface) {\r\n    super(projectile, surface, Projectile.TYPE_PROJECTILE);\r\n  }\r\n\r\n  setObjectRef (object) {\r\n    super.setObjectRef(object);\r\n\r\n    if (this.children.length) {\r\n      this.children[1].material = new LineBasicMaterial({\r\n        color: this.getMaterialColor()\r\n      });\r\n    }\r\n  }\r\n\r\n  updateState () {}\r\n\r\n  move () {\r\n    this.position.z = this.object.zPosition * this.surface.depth;\r\n  }\r\n\r\n  rotate () {\r\n    this.rotation.x += ProjectileRenderer.ROTATION_SPEED;\r\n    this.rotation.y += ProjectileRenderer.ROTATION_SPEED;\r\n  }\r\n\r\n  loadModel () {\r\n    this.clear();\r\n    let geometry = new BoxGeometry(\r\n      ProjectileRenderer.PROJECTILE_SIZE,\r\n      ProjectileRenderer.PROJECTILE_SIZE,\r\n      ProjectileRenderer.PROJECTILE_SIZE\r\n    );\r\n\r\n    let material = new MeshBasicMaterial({\r\n      color: 0,\r\n      polygonOffset: true,\r\n      polygonOffsetFactor: 2,\r\n      polygonOffsetUnits: 1\r\n    });\r\n\r\n    this.add(new Mesh(geometry, material));\r\n\r\n    const projectileWireframe = new LineSegments(\r\n      new WireframeGeometry(geometry),\r\n      new LineBasicMaterial({\r\n        color: this.getMaterialColor()\r\n      })\r\n    );\r\n    this.add(projectileWireframe);\r\n  }\r\n\r\n  getMaterialColor () {\r\n    return this.object.source === Projectile.SOURCE_SHOOTER\r\n      ? ProjectileRenderer.PROJECTILE_SHOOTER_COLOR\r\n      : ProjectileRenderer.PROJECTILE_ENEMY_COLOR;\r\n  }\r\n}\r\n","import ProjectileRenderer from '@/Renderer/Projectiles/ProjectileRenderer';\r\nimport { Group } from 'three';\r\n\r\nexport default class ProjectileRendererManager extends Group {\r\n  /** @var {ProjectileManager} */\r\n  projectileManager;\r\n  /** @var {Surface} */\r\n  surface;\r\n\r\n  /** @var {ProjectileRenderer[]} */\r\n  projectileRenderers = [];\r\n  /** @var {number[]} */\r\n  projectileRenderersAvailabilityMap = [];\r\n\r\n  /**\r\n   * @param {ProjectileManager} projectileManager\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (projectileManager, surface) {\r\n    super();\r\n\r\n    this.projectileManager = projectileManager;\r\n    this.surface = surface;\r\n  }\r\n\r\n  update () {\r\n    if (this.projectileManager.rendererHelperNewProjectilesIds.length !== 0) {\r\n      this.projectileManager.shooterProjectiles\r\n        .filter(projectile => this.projectileManager.rendererHelperNewProjectilesIds.includes(projectile.objectId))\r\n        .forEach(projectile => {\r\n          this.pushProjectile(projectile);\r\n        });\r\n\r\n      this.projectileManager.enemyProjectiles\r\n        .filter(projectile => this.projectileManager.rendererHelperNewProjectilesIds.includes(projectile.objectId))\r\n        .forEach(projectile => {\r\n          this.pushProjectile(projectile);\r\n        });\r\n\r\n      this.projectileManager.rendererHelperNewProjectilesIds.length = 0;\r\n    }\r\n\r\n    this.projectileRenderers.forEach((projectileRenderer, index) => {\r\n      if (projectileRenderer.object === null) {\r\n        return;\r\n      }\r\n\r\n      if (!projectileRenderer.object.alive) {\r\n        projectileRenderer.breakObjectRef();\r\n\r\n        this.projectileRenderersAvailabilityMap.push(index);\r\n      } else {\r\n        projectileRenderer.update();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Projectile} projectile\r\n   */\r\n  pushProjectile (projectile) {\r\n    if (this.projectileRenderersAvailabilityMap.length) {\r\n      // console.log(`Reusing projectile renderer #${this.projectileRenderersAvailabilityMap.slice(0, 1)}`);\r\n      this.projectileRenderers[this.projectileRenderersAvailabilityMap.shift()].setObjectRef(projectile);\r\n    } else {\r\n      // console.log(`Creating new projectile renderer #${this.projectileRenderers.length}`);\r\n      this.projectileRenderers.push(new ProjectileRenderer(projectile, this.surface));\r\n      this.add(this.projectileRenderers[this.projectileRenderers.length - 1]);\r\n    }\r\n  }\r\n}\r\n","import { BufferGeometry, Group, Line, MeshBasicMaterial, Vector2, Vector3 } from 'three';\r\nimport SurfaceObjectWrapper from '@/Renderer/Surface/SurfaceObjectWrapper';\r\nimport enemies from '@/Assets/Enemies';\r\nimport BoundingBox2 from '@/Helpers/BoundingBox2';\r\nimport readonly from '@/utils/readonly';\r\n\r\nexport default class EnemyRenderer extends SurfaceObjectWrapper {\r\n  @readonly\r\n  static EXPLOSION_ROTATION_SPEED = 0.03;\r\n\r\n  /** @var {BufferGeometry[]} */\r\n  geometry;\r\n  /** @var {MeshBasicMaterial[]} */\r\n  materials;\r\n\r\n  /** @var {Vector2} */\r\n  positionBase = new Vector2();\r\n  /** @var {Vector2} */\r\n  positionOffset = new Vector2();\r\n\r\n  /** @var {number} */\r\n  zRotationBase = 0;\r\n  /** @var {number} */\r\n  zRotationOffset = 0;\r\n\r\n  /**\r\n   * @var {{\r\n   *  valid: boolean,\r\n   *  continuousRotationUpdate: boolean,\r\n   *  relativeHalfStep: number,\r\n   *  sourceLaneId: number,\r\n   *  targetLaneId: number,\r\n   *  rotationDirection: number\r\n   * }}\r\n   */\r\n  rotatingStateCache = {\r\n    valid: false,\r\n    continuousRotationUpdate: false,\r\n    relativeHalfStep: 0,\r\n    sourceLaneId: 0,\r\n    targetLaneId: 0,\r\n    rotationDirection: 0\r\n  };\r\n\r\n  /**\r\n   * @param {Enemy} enemy\r\n   * @param {Surface} surface\r\n   * @param {string} enemyType\r\n   */\r\n  constructor (enemy, surface, enemyType) {\r\n    super(enemy, surface, enemyType);\r\n\r\n    this.setLaneOffset();\r\n  }\r\n\r\n  setObjectRef (object) {\r\n    if (object.type !== this.objectType) {\r\n      throw new Error(`Can't associate ${object.type} with ${this.objectType} renderer`);\r\n    }\r\n\r\n    super.setObjectRef(object);\r\n  }\r\n\r\n  setVisualsToNormal () {\r\n    this.modelGroup.visible = true;\r\n    this.modelGroup.scale.set(1, 1, 1);\r\n    this.explosionGroup.visible = false;\r\n  }\r\n\r\n  setVisualsToExplode () {\r\n    this.explosionGroup.visible = true;\r\n  }\r\n\r\n  explodeAnimation () {\r\n    this.setVisualsToExplode();\r\n    this.zRotationOffset += EnemyRenderer.EXPLOSION_ROTATION_SPEED;\r\n\r\n    let scale = Math.pow(this.object.stateProgressInTime() * 2 - 1, 4);\r\n    let explosionScale = 1 - scale;\r\n    this.explosionGroup.scale.set(explosionScale, explosionScale, explosionScale);\r\n\r\n    if (this.object.stateProgressInTime() <= 0.5) {\r\n      let modelScale = scale;\r\n      this.modelGroup.scale.set(modelScale, modelScale, modelScale);\r\n    } else {\r\n      this.modelGroup.visible = false;\r\n    }\r\n  }\r\n\r\n  disappearingAnimation () {\r\n    let scale = Math.pow(this.object.stateProgressInTime() * 2 - 1, 4);\r\n\r\n    if (this.object.stateProgressInTime() <= 0.5) {\r\n      let modelScale = scale;\r\n      this.modelGroup.scale.set(modelScale, modelScale, modelScale);\r\n    } else {\r\n      this.modelGroup.visible = false;\r\n    }\r\n  }\r\n\r\n  move () {\r\n    this.position.set(\r\n      this.positionBase.x + this.positionOffset.x,\r\n      this.positionBase.y + this.positionOffset.y,\r\n      this.object.zPosition * this.surface.depth\r\n    );\r\n  }\r\n\r\n  rotate () {\r\n    this.rotation.z = this.zRotationBase + this.zRotationOffset;\r\n  }\r\n\r\n  setLaneOffset (offset = 0.5) {\r\n    let laneCoords = this.surface.lanesCoords[this.object.laneId].clone();\r\n    let laneCenterCoords = this.surface.lanesMiddleCoords[this.object.laneId].clone();\r\n\r\n    let scalar = (offset - 0.5) * 2;\r\n    laneCenterCoords.sub(laneCoords).multiplyScalar(scalar);\r\n\r\n    this.positionOffset = laneCenterCoords;\r\n  }\r\n\r\n  /**\r\n   * @param {number} rotationDirection 1 for CCW, -1 for CW\r\n   */\r\n  calculateRotationStateCacheVariables (rotationDirection) {\r\n    this.rotatingStateCache.rotationDirection = rotationDirection;\r\n\r\n    this.rotatingStateCache.sourceLaneId = this.object.laneId;\r\n    this.rotatingStateCache.targetLaneId = this.surface.getActualLaneIdFromProjectedMovement(\r\n      this.object.laneId + this.rotatingStateCache.rotationDirection\r\n    );\r\n\r\n    let currentLaneRotation = this.surface.lanesCenterDirectionRadians[this.rotatingStateCache.sourceLaneId];\r\n    let targetLaneRotation = this.surface.lanesCenterDirectionRadians[this.rotatingStateCache.targetLaneId];\r\n    let targetRealRotation = (targetLaneRotation + Math.PI) % (Math.PI * 2);\r\n\r\n    let relativeStep;\r\n    if (this.rotatingStateCache.rotationDirection === 1) {\r\n      if (currentLaneRotation > targetRealRotation) {\r\n        relativeStep = currentLaneRotation - targetRealRotation;\r\n      } else {\r\n        relativeStep = currentLaneRotation + (Math.PI * 2 - targetRealRotation);\r\n      }\r\n    } else {\r\n      if (currentLaneRotation > targetRealRotation) {\r\n        relativeStep = (Math.PI * 2 - currentLaneRotation) + targetRealRotation;\r\n      } else {\r\n        relativeStep = targetRealRotation - currentLaneRotation;\r\n      }\r\n    }\r\n\r\n    this.rotatingStateCache.relativeHalfStep = relativeStep / 2;\r\n    this.rotatingStateCache.valid = true;\r\n  }\r\n\r\n  invalidateRotationStateCache () {\r\n    this.rotatingStateCache.valid = false;\r\n  }\r\n\r\n  isRotationStateCacheValid () {\r\n    return this.rotatingStateCache.valid;\r\n  }\r\n\r\n  loadModel () {\r\n    this.modelGroup = new Group();\r\n\r\n    let enemyDataset = enemies.find(enemy => enemy.name === this.object.type);\r\n    if (enemyDataset === undefined) {\r\n      throw new Error('Unknown object: ' + this.object.type);\r\n    }\r\n\r\n    let boundingBox2 = BoundingBox2.create([].concat(...enemyDataset.coords));\r\n\r\n    enemyDataset.coords.forEach((xyArray, i) => {\r\n      let material = new MeshBasicMaterial({\r\n          color: Array.isArray(enemyDataset.color) ? enemyDataset.color[i] : enemyDataset.color,\r\n        }\r\n      );\r\n\r\n      let geometry = new BufferGeometry().setFromPoints(\r\n        xyArray\r\n          .map(xyArray => new Vector2(xyArray.x, xyArray.y))\r\n          .map(vector2 => vector2.sub(boundingBox2.getCenter()))\r\n          .map(vector2 => new Vector3(vector2.x, vector2.y, 0))\r\n      );\r\n\r\n      this.modelGroup.add(new Line(geometry, material));\r\n    });\r\n\r\n    this.add(this.modelGroup);\r\n  }\r\n}\r\n","import EnemyRenderer from '@/Renderer/Enemies/EnemyRenderer';\r\nimport EnemyFlipper from '@/Object/Enemies/EnemyFlipper';\r\nimport { Vector2 } from 'three';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\n\r\nexport default class EnemyFlipperRenderer extends EnemyRenderer {\r\n  /**\r\n   * @param {EnemyFlipper} enemyFlipper\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (enemyFlipper, surface) {\r\n    super(enemyFlipper, surface, Enemy.TYPE_FLIPPER);\r\n  }\r\n\r\n  updateState () {\r\n    if (\r\n      (this.object.inState(EnemyFlipper.STATE_ROTATING_BEGIN) || this.object.inState(EnemyFlipper.STATE_ROTATING_END))\r\n      && (this.object.isFlagSet(EnemyFlipper.FLAG_ROTATION_CW) || this.object.isFlagSet(EnemyFlipper.FLAG_ROTATION_CCW))\r\n    ) {\r\n\r\n      if (this.object.inState(EnemyFlipper.STATE_ROTATING_BEGIN)\r\n        && this.object.prevState.equals(EnemyFlipper.STATE_ROTATING_END)\r\n        && !this.rotatingStateCache.continuousRotationUpdate) {\r\n        this.rotatingStateCache.continuousRotationUpdate = true;\r\n        this.rotatingStateCache.valid = false;\r\n      }\r\n\r\n      if (this.object.inState(EnemyFlipper.STATE_ROTATING_END)) {\r\n        this.rotatingStateCache.continuousRotationUpdate = false;\r\n      }\r\n\r\n      if (!this.isRotationStateCacheValid()) {\r\n        this.calculateRotationStateCacheVariables(this.object.isFlagSet(EnemyFlipper.FLAG_ROTATION_CCW) ? 1 : -1);\r\n      }\r\n\r\n      let rotationAxisLaneId = this.object.isFlagSet(EnemyFlipper.FLAG_ROTATION_CW)\r\n        ? this.rotatingStateCache.sourceLaneId\r\n        : this.rotatingStateCache.targetLaneId;\r\n\r\n      this.zRotationBase = this.surface.lanesCenterDirectionRadians[rotationAxisLaneId];\r\n      this.positionBase = this.surface.lanesMiddleCoords[rotationAxisLaneId].clone();\r\n\r\n      if (this.object.inState(EnemyFlipper.STATE_ROTATING_BEGIN)) {\r\n        if (this.object.isFlagSet(EnemyFlipper.FLAG_ROTATION_CW)) {\r\n          this.zRotationOffset = this.rotatingStateCache.relativeHalfStep * this.object.stateProgressInTime();\r\n        } else {\r\n          this.zRotationOffset = this.rotatingStateCache.relativeHalfStep * (2 - this.object.stateProgressInTime());\r\n        }\r\n      } else {\r\n        if (this.object.isFlagSet(EnemyFlipper.FLAG_ROTATION_CW)) {\r\n          this.zRotationOffset = this.rotatingStateCache.relativeHalfStep * (this.object.stateProgressInTime() + 1);\r\n        } else {\r\n          this.zRotationOffset = this.rotatingStateCache.relativeHalfStep * (1 - this.object.stateProgressInTime());\r\n        }\r\n      }\r\n\r\n      let positionRotationXYOffset = new Vector2().subVectors(\r\n        this.surface.lanesCoords[rotationAxisLaneId],\r\n        this.surface.lanesMiddleCoords[rotationAxisLaneId]\r\n      ).rotateAround(new Vector2(0, 0), this.zRotationOffset);\r\n\r\n      this.positionBase = this.surface.lanesCoords[rotationAxisLaneId].clone().sub(positionRotationXYOffset);\r\n\r\n    } else if (this.object.inState(EnemyFlipper.STATE_EXPLODING)) {\r\n      this.explodeAnimation();\r\n\r\n    } else if (this.object.inState(EnemyFlipper.STATE_DISAPPEARING)) {\r\n      this.disappearingAnimation();\r\n\r\n    } else {\r\n      this.zRotationBase = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n      this.positionBase = this.surface.lanesMiddleCoords[this.object.laneId].clone();\r\n      this.zRotationOffset = 0;\r\n\r\n      this.invalidateRotationStateCache();\r\n    }\r\n  }\r\n}\r\n","import EnemyRenderer from '@/Renderer/Enemies/EnemyRenderer';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport readonly from '@/utils/readonly';\r\nimport EnemySpiker from '@/Object/Enemies/EnemySpiker';\r\n\r\nexport default class EnemySpikerRenderer extends EnemyRenderer {\r\n  @readonly\r\n  static ROTATION_SPEED = 0.1;\r\n\r\n  /**\r\n   * @param {EnemySpiker} enemySpiker\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (enemySpiker, surface) {\r\n    super(enemySpiker, surface, Enemy.TYPE_SPIKER);\r\n  }\r\n\r\n  updateState () {\r\n    this.positionBase = this.surface.lanesMiddleCoords[this.object.laneId].clone();\r\n    this.zRotationBase = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n\r\n    if (this.object.inState(EnemySpiker.STATE_EXPLODING)) {\r\n      this.explodeAnimation();\r\n\r\n    } else if (this.object.inState(EnemySpiker.STATE_DISAPPEARING)) {\r\n      this.disappearingAnimation();\r\n\r\n    } else {\r\n      this.zRotationOffset += EnemySpikerRenderer.ROTATION_SPEED;\r\n    }\r\n  }\r\n}\r\n","import EnemyRenderer from '@/Renderer/Enemies/EnemyRenderer';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport readonly from '@/utils/readonly';\r\nimport { BufferGeometry, Line, MeshBasicMaterial, Vector3 } from 'three';\r\n\r\nexport default class EnemySpikeRenderer extends EnemyRenderer {\r\n  @readonly\r\n  static SPIKE_COLOR = 0x00ff00;\r\n\r\n  /**\r\n   * @param {EnemySpike} enemySpike\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (enemySpike, surface) {\r\n    super(enemySpike, surface, Enemy.TYPE_SPIKE);\r\n  }\r\n\r\n  updateState () {\r\n    // noinspection JSUnresolvedFunction\r\n    if (this.object.shouldRerenderSpikeDueToSpikeLengthChange()) {\r\n      this.updateModel();\r\n    }\r\n\r\n    this.positionBase = this.surface.lanesMiddleCoords[this.object.laneId].clone();\r\n    this.zRotationBase = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n  }\r\n\r\n  updateModel () {\r\n    this.children[0].geometry =\r\n      new BufferGeometry().setFromPoints([\r\n        new Vector3(0, 0, 0),\r\n        new Vector3(0, 0, (1 - this.object.zPosition) * this.surface.depth)\r\n      ]);\r\n  }\r\n\r\n  loadModel () {\r\n    this.clear();\r\n    this.geometry = [];\r\n    this.materials = [];\r\n\r\n    this.materials.push(\r\n      new MeshBasicMaterial({\r\n        color: EnemySpikeRenderer.SPIKE_COLOR,\r\n      })\r\n    );\r\n\r\n    this.geometry.push(\r\n      new BufferGeometry().setFromPoints([\r\n        new Vector3(0, 0, 0),\r\n        new Vector3(0, 0, (1 - this.object.zPosition) * this.surface.depth)\r\n      ])\r\n    );\r\n\r\n    this.add(new Line(this.geometry[0], this.materials[0]));\r\n  }\r\n}\r\n","import EnemyRenderer from '@/Renderer/Enemies/EnemyRenderer';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport EnemyTanker from '@/Object/Enemies/EnemyTanker';\r\n\r\nexport default class EnemyFlipperTankerRenderer extends EnemyRenderer {\r\n  /**\r\n   * @param {EnemyFlipperTanker} enemyFlipperTanker\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (enemyFlipperTanker, surface) {\r\n    super(enemyFlipperTanker, surface, Enemy.TYPE_FLIPPER_TANKER);\r\n  }\r\n\r\n  updateState () {\r\n    this.positionBase = this.surface.lanesMiddleCoords[this.object.laneId].clone();\r\n    this.zRotationBase = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n\r\n    if (this.object.inState(EnemyTanker.STATE_EXPLODING)) {\r\n      this.explodeAnimation();\r\n\r\n    } else if (this.object.inState(EnemyTanker.STATE_DISAPPEARING)) {\r\n      this.disappearingAnimation();\r\n    }\r\n  }\r\n}\r\n","import EnemyRenderer from '@/Renderer/Enemies/EnemyRenderer';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport readonly from '@/utils/readonly';\r\nimport EnemyFuseball from '@/Object/Enemies/EnemyFuseball';\r\n\r\nexport default class EnemyFuseballRenderer extends EnemyRenderer {\r\n  @readonly\r\n  static ROTATION_SPEED = 0.02;\r\n\r\n  /**\r\n   * @param {EnemySpiker} enemySpiker\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (enemySpiker, surface) {\r\n    super(enemySpiker, surface, Enemy.TYPE_FUSEBALL);\r\n  }\r\n\r\n  updateState () {\r\n    // noinspection JSValidateTypes\r\n    /** @var {EnemyFuseball} */\r\n    let fuseball = this.object;\r\n\r\n    this.positionBase = this.surface.lanesMiddleCoords[fuseball.laneId].clone();\r\n    this.zRotationBase = 0;\r\n\r\n    if (fuseball.inState(EnemyFuseball.STATE_SWITCHING_LANE) || fuseball.inState(EnemyFuseball.STATE_EXPLODING)) {\r\n      if (fuseball.isFlagSet(EnemyFuseball.FLAG_SWITCHING_LANE_CCW)) {\r\n        this.setLaneOffset(1 - fuseball.lastLaneSwitchingProgress);\r\n      } else {\r\n        this.setLaneOffset(fuseball.lastLaneSwitchingProgress);\r\n      }\r\n    } else {\r\n      this.setLaneOffset(0);\r\n    }\r\n\r\n    if (fuseball.inState(EnemyFuseball.STATE_EXPLODING)) {\r\n      this.explodeAnimation();\r\n\r\n    } else if (this.object.inState(EnemyFuseball.STATE_DISAPPEARING)) {\r\n      this.disappearingAnimation();\r\n\r\n    } else {\r\n      this.zRotationOffset += EnemyFuseballRenderer.ROTATION_SPEED;\r\n    }\r\n  }\r\n}\r\n","import EnemyRenderer from '@/Renderer/Enemies/EnemyRenderer';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport EnemyTanker from '@/Object/Enemies/EnemyTanker';\r\n\r\nexport default class EnemyFuseballTankerRenderer extends EnemyRenderer {\r\n  /**\r\n   * @param {EnemyFlipperTanker} enemyFlipperTanker\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (enemyFlipperTanker, surface) {\r\n    super(enemyFlipperTanker, surface, Enemy.TYPE_FUSEBALL_TANKER);\r\n  }\r\n\r\n  updateState () {\r\n    this.positionBase = this.surface.lanesMiddleCoords[this.object.laneId].clone();\r\n    this.zRotationBase = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n\r\n    if (this.object.inState(EnemyTanker.STATE_EXPLODING)) {\r\n      this.explodeAnimation();\r\n\r\n    } else if (this.object.inState(EnemyTanker.STATE_DISAPPEARING)) {\r\n      this.disappearingAnimation();\r\n    }\r\n  }\r\n}\r\n","import EnemyRenderer from '@/Renderer/Enemies/EnemyRenderer';\r\nimport EnemyPulsar from '@/Object/Enemies/EnemyPulsar';\r\nimport { MeshBasicMaterial, Vector2 } from 'three';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport readonly from '@/utils/readonly';\r\n\r\nexport default class EnemyPulsarRenderer extends EnemyRenderer {\r\n  @readonly\r\n  static NEUTRAL_COLOR = 0x00ffff;\r\n  @readonly\r\n  static PULSE_COLOR = 0xffffff;\r\n\r\n  @readonly\r\n  static BASE_Y_SCALE = 0.2;\r\n  @readonly\r\n  static PULSE_Y_SCALE = 0.8;\r\n\r\n  /** @var {number} */\r\n  colorHelperPrevState = -1;\r\n\r\n  /**\r\n   * @param {EnemyPulsar} enemyPulsar\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (enemyPulsar, surface) {\r\n    super(enemyPulsar, surface, Enemy.TYPE_PULSAR);\r\n  }\r\n\r\n  updateState () {\r\n    if (\r\n      (this.object.inState(EnemyPulsar.STATE_ROTATING_BEGIN) || this.object.inState(EnemyPulsar.STATE_ROTATING_END))\r\n      && (this.object.isFlagSet(EnemyPulsar.FLAG_ROTATION_CW) || this.object.isFlagSet(EnemyPulsar.FLAG_ROTATION_CCW))\r\n    ) {\r\n      if (this.object.inState(EnemyPulsar.STATE_ROTATING_BEGIN)\r\n        && this.object.prevState.equals(EnemyPulsar.STATE_ROTATING_END)\r\n        && !this.rotatingStateCache.continuousRotationUpdate) {\r\n        this.rotatingStateCache.continuousRotationUpdate = true;\r\n        this.rotatingStateCache.valid = false;\r\n      }\r\n\r\n      if (this.object.inState(EnemyPulsar.STATE_ROTATING_END)) {\r\n        this.rotatingStateCache.continuousRotationUpdate = false;\r\n      }\r\n\r\n      if (!this.isRotationStateCacheValid()) {\r\n        this.calculateRotationStateCacheVariables(this.object.isFlagSet(EnemyPulsar.FLAG_ROTATION_CCW) ? 1 : -1);\r\n      }\r\n\r\n      let rotationAxisLaneId = this.object.isFlagSet(EnemyPulsar.FLAG_ROTATION_CW)\r\n        ? this.rotatingStateCache.sourceLaneId\r\n        : this.rotatingStateCache.targetLaneId;\r\n\r\n      this.zRotationBase = this.surface.lanesCenterDirectionRadians[rotationAxisLaneId];\r\n      this.positionBase = this.surface.lanesMiddleCoords[rotationAxisLaneId].clone();\r\n\r\n      if (this.object.inState(EnemyPulsar.STATE_ROTATING_BEGIN)) {\r\n        if (this.object.isFlagSet(EnemyPulsar.FLAG_ROTATION_CW)) {\r\n          this.zRotationOffset = this.rotatingStateCache.relativeHalfStep * this.object.stateProgressInTime();\r\n        } else {\r\n          this.zRotationOffset = this.rotatingStateCache.relativeHalfStep * (2 - this.object.stateProgressInTime());\r\n        }\r\n      } else {\r\n        if (this.object.isFlagSet(EnemyPulsar.FLAG_ROTATION_CW)) {\r\n          this.zRotationOffset = this.rotatingStateCache.relativeHalfStep * (this.object.stateProgressInTime() + 1);\r\n        } else {\r\n          this.zRotationOffset = this.rotatingStateCache.relativeHalfStep * (1 - this.object.stateProgressInTime());\r\n        }\r\n      }\r\n\r\n      let positionRotationXYOffset = new Vector2().subVectors(\r\n        this.surface.lanesCoords[rotationAxisLaneId],\r\n        this.surface.lanesMiddleCoords[rotationAxisLaneId]\r\n      ).rotateAround(new Vector2(0, 0), this.zRotationOffset);\r\n\r\n      this.positionBase = this.surface.lanesCoords[rotationAxisLaneId].clone().sub(positionRotationXYOffset);\r\n\r\n    } else if (this.object.inState(EnemyPulsar.STATE_EXPLODING)) {\r\n      this.explodeAnimation();\r\n\r\n    } else if (this.object.inState(EnemyPulsar.STATE_DISAPPEARING)) {\r\n      this.disappearingAnimation();\r\n\r\n    } else {\r\n      this.zRotationBase = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n      this.positionBase = this.surface.lanesMiddleCoords[this.object.laneId].clone();\r\n      this.zRotationOffset = 0;\r\n\r\n      this.invalidateRotationStateCache();\r\n    }\r\n\r\n    this.setScale();\r\n    this.setMaterial();\r\n  }\r\n\r\n  setScale () {\r\n    // noinspection JSUnresolvedVariable\r\n    let scale = EnemyPulsarRenderer.BASE_Y_SCALE;\r\n\r\n    if (this.object.inState(EnemyPulsar.STATE_WARNING)) {\r\n      scale += this.object.stateProgressInTime() * EnemyPulsarRenderer.PULSE_Y_SCALE;\r\n    }\r\n\r\n    if (this.object.inState(EnemyPulsar.STATE_PULSATING)) {\r\n      scale += (1 + Math.sin(this.object.stateProgressInTime() * Math.PI * 11.6)) * EnemyPulsarRenderer.PULSE_Y_SCALE;\r\n    }\r\n\r\n    if (this.object.isFlagSet(EnemyPulsar.FLAG_ROTATION_CCW)) {\r\n      scale *= -1;\r\n    }\r\n\r\n    // noinspection JSUnresolvedVariable\r\n    if (this.object.rendererHelperLaneChangesAmount % 2 === 1) {\r\n      scale *= -1;\r\n    }\r\n\r\n    this.modelGroup.scale.setY(scale);\r\n  }\r\n\r\n  setMaterial () {\r\n    if (this.colorHelperPrevState !== this.object.state.id) {\r\n      let neutral = !this.object.inState(EnemyPulsar.STATE_WARNING)\r\n        && !this.object.inState(EnemyPulsar.STATE_PULSATING);\r\n\r\n      this.modelGroup.children[0].material = new MeshBasicMaterial({\r\n        color: neutral ? EnemyPulsarRenderer.NEUTRAL_COLOR : EnemyPulsarRenderer.PULSE_COLOR\r\n      });\r\n\r\n      this.colorHelperPrevState = this.object.state.id;\r\n    }\r\n  }\r\n}\r\n","import EnemyRenderer from '@/Renderer/Enemies/EnemyRenderer';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport EnemyTanker from '@/Object/Enemies/EnemyTanker';\r\n\r\nexport default class EnemyPulsarTankerRenderer extends EnemyRenderer {\r\n  /**\r\n   * @param {EnemyFlipperTanker} enemyFlipperTanker\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (enemyFlipperTanker, surface) {\r\n    super(enemyFlipperTanker, surface, Enemy.TYPE_PULSAR_TANKER);\r\n  }\r\n\r\n  updateState () {\r\n    this.positionBase = this.surface.lanesMiddleCoords[this.object.laneId].clone();\r\n    this.zRotationBase = this.surface.lanesCenterDirectionRadians[this.object.laneId];\r\n\r\n    if (this.object.inState(EnemyTanker.STATE_EXPLODING)) {\r\n      this.explodeAnimation();\r\n\r\n    } else if (this.object.inState(EnemyTanker.STATE_DISAPPEARING)) {\r\n      this.disappearingAnimation();\r\n\r\n    }\r\n  }\r\n}\r\n","import { Group } from 'three';\r\nimport Enemy from '@/Object/Enemies/Enemy';\r\nimport EnemyFlipperRenderer from '@/Renderer/Enemies/EnemyFlipperRenderer';\r\nimport EnemySpikerRenderer from '@/Renderer/Enemies/EnemySpikerRenderer';\r\nimport EnemySpikeRenderer from '@/Renderer/Enemies/EnemySpikeRenderer';\r\nimport EnemyFlipperTankerRenderer from '@/Renderer/Enemies/EnemyFlipperTankerRenderer';\r\nimport EnemyFuseballRenderer from '@/Renderer/Enemies/EnemyFuseballRenderer';\r\nimport EnemyFuseballTankerRenderer from '@/Renderer/Enemies/EnemyFuseballTankerRenderer';\r\nimport EnemyPulsarRenderer from '@/Renderer/Enemies/EnemyPulsarRenderer';\r\nimport EnemyPulsarTankerRenderer from '@/Renderer/Enemies/EnemyPulsarTankerRenderer';\r\n\r\nexport default class EnemyRendererManager extends Group {\r\n  /** @var {SurfaceObjectsManager} */\r\n  surfaceObjectsManager;\r\n  /** @var {Surface} */\r\n  surface;\r\n\r\n  /** @var {EnemyRenderer[]} */\r\n  enemyRenderers = [];\r\n  /** @var {number[][]} */\r\n  enemyRenderersAvailabilityMap = [];\r\n\r\n  /**\r\n   * @param {SurfaceObjectsManager} surfaceObjectsManager\r\n   * @param {Surface} surface\r\n   */\r\n  constructor (surfaceObjectsManager, surface) {\r\n    super();\r\n\r\n    this.surfaceObjectsManager = surfaceObjectsManager;\r\n    this.surface = surface;\r\n  }\r\n\r\n  update () {\r\n    if (this.surfaceObjectsManager.rendererHelperNewObjectsIds.length !== 0) {\r\n      this.surfaceObjectsManager.enemies\r\n        .filter(enemy => this.surfaceObjectsManager.rendererHelperNewObjectsIds.includes(enemy.objectId))\r\n        .forEach(enemy => {\r\n          this.pushEnemy(enemy);\r\n        });\r\n\r\n      this.surfaceObjectsManager.spikes\r\n        .filter(spike => this.surfaceObjectsManager.rendererHelperNewObjectsIds.includes(spike.objectId))\r\n        .forEach(spike => {\r\n          this.pushEnemy(spike);\r\n        });\r\n\r\n      this.surfaceObjectsManager.rendererHelperNewObjectsIds.length = 0;\r\n    }\r\n\r\n    this.enemyRenderers.forEach((enemyRenderer, index) => {\r\n      if (enemyRenderer.object === null) {\r\n        return;\r\n      }\r\n\r\n      if (!enemyRenderer.object.alive) {\r\n        if (!(enemyRenderer.objectType in this.enemyRenderersAvailabilityMap)) {\r\n          this.enemyRenderersAvailabilityMap[enemyRenderer.objectType] = [];\r\n        }\r\n\r\n        this.enemyRenderersAvailabilityMap[enemyRenderer.objectType].push(index);\r\n\r\n        enemyRenderer.breakObjectRef();\r\n      } else {\r\n        enemyRenderer.update();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Enemy} enemy\r\n   */\r\n  pushEnemy (enemy) {\r\n    if (enemy.type in this.enemyRenderersAvailabilityMap && this.enemyRenderersAvailabilityMap[enemy.type].length) {\r\n      // console.log(`Reusing enemy renderer #${this.enemyRenderersAvailabilityMap[enemy.type].slice(0, 1)}`);\r\n      this.enemyRenderers[this.enemyRenderersAvailabilityMap[enemy.type].shift()].setObjectRef(enemy);\r\n    } else {\r\n      // console.log(`Creating new enemy renderer #${this.enemyRenderers.length} for ${enemy.type}`);\r\n      this.enemyRenderers.push(this.enemyRendererFactory(enemy));\r\n      this.add(this.enemyRenderers[this.enemyRenderers.length - 1]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Enemy|EnemyFlipper|EnemySpiker|EnemySpike|EnemyFlipperTanker|EnemyPulsar} enemy\r\n   */\r\n  enemyRendererFactory (enemy) {\r\n    switch (enemy.type) {\r\n      case Enemy.TYPE_FLIPPER:\r\n        return new EnemyFlipperRenderer(enemy, this.surface);\r\n      case Enemy.TYPE_SPIKER:\r\n        return new EnemySpikerRenderer(enemy, this.surface);\r\n      case Enemy.TYPE_SPIKE:\r\n        return new EnemySpikeRenderer(enemy, this.surface);\r\n      case Enemy.TYPE_FLIPPER_TANKER:\r\n        return new EnemyFlipperTankerRenderer(enemy, this.surface);\r\n      case Enemy.TYPE_FUSEBALL:\r\n        return new EnemyFuseballRenderer(enemy, this.surface);\r\n      case Enemy.TYPE_FUSEBALL_TANKER:\r\n        return new EnemyFuseballTankerRenderer(enemy, this.surface);\r\n      case Enemy.TYPE_PULSAR:\r\n        return new EnemyPulsarRenderer(enemy, this.surface);\r\n      case Enemy.TYPE_PULSAR_TANKER:\r\n        return new EnemyPulsarTankerRenderer(enemy, this.surface);\r\n      default:\r\n        throw new Error(`Can't find constructor for enemy of type ${enemy.type}`);\r\n    }\r\n  }\r\n}\r\n","import { Group } from 'three';\r\nimport SurfaceRenderer from '@/Renderer/Surface/SurfaceRenderer';\r\nimport ShooterRenderer from '@/Renderer/Shooters/ShooterRenderer';\r\nimport ProjectileRendererManager from '@/Renderer/Surface/ProjectileRendererManager';\r\nimport EnemyRendererManager from '@/Renderer/Surface/EnemyRendererManager';\r\nimport readonly from '@/utils/readonly';\r\n\r\nexport default class LevelRenderer extends Group {\r\n  @readonly\r\n  static CAMERA_TO_SHOOTER_DISTANCE = 6;\r\n\r\n  /** @var {?Level} */\r\n  level = null;\r\n\r\n  /** @var {PerspectiveCamera} */\r\n  camera;\r\n  /** @var {SurfaceRenderer} */\r\n  surfaceRenderer;\r\n  /** @var {ShooterRenderer} */\r\n  shooterRenderer;\r\n  /** @var {ProjectileRendererManager} */\r\n  projectileRendererManager;\r\n  /** @var {EnemyRendererManager} */\r\n  enemyRendererManager;\r\n\r\n  // noinspection JSValidateJSDoc\r\n  /**\r\n   * @param {PerspectiveCamera} camera\r\n   */\r\n  constructor (camera) {\r\n    super();\r\n\r\n    this.camera = camera;\r\n  }\r\n\r\n  bindLevel (level) {\r\n    this.level = level;\r\n\r\n    this.surfaceRenderer = new SurfaceRenderer(this.level.surface, this.level.currentLevel);\r\n    this.shooterRenderer = new ShooterRenderer(this.level.shooter, this.level.surface);\r\n    this.enemyRendererManager = new EnemyRendererManager(this.level.surfaceObjectsManager, this.level.surface);\r\n    this.projectileRendererManager = new ProjectileRendererManager(this.level.projectileManager, this.level.surface);\r\n\r\n    this.add(this.surfaceRenderer);\r\n    this.add(this.shooterRenderer);\r\n    this.add(this.enemyRendererManager);\r\n    this.add(this.projectileRendererManager);\r\n\r\n    this.position.setY(level.surface.zOffset);\r\n  }\r\n\r\n  releaseLevel () {\r\n    this.remove(this.surfaceRenderer);\r\n    this.remove(this.shooterRenderer);\r\n    this.remove(this.enemyRendererManager);\r\n    this.remove(this.projectileRendererManager);\r\n\r\n    this.level = null;\r\n    this.surfaceRenderer = undefined;\r\n    this.shooterRenderer = undefined;\r\n    this.enemyRendererManager = undefined;\r\n    this.projectileRendererManager = undefined;\r\n  }\r\n\r\n  followShooter () {\r\n    let surfaceDepth = this.surfaceRenderer.surface.depth;\r\n    let cameraZPosition = this.shooterRenderer.position.z;\r\n\r\n    if (cameraZPosition >= surfaceDepth) {\r\n      cameraZPosition += Math.pow(cameraZPosition - surfaceDepth, 2) * 0.05;\r\n    }\r\n\r\n    if (cameraZPosition < 0) {\r\n      cameraZPosition *= 0.9;\r\n    }\r\n\r\n    this.camera.position.z = cameraZPosition - LevelRenderer.CAMERA_TO_SHOOTER_DISTANCE;\r\n    this.camera.lookAt(this.camera.position.x, this.camera.position.y, this.camera.position.z + 10);\r\n  }\r\n\r\n  update () {\r\n    if (this.level !== null) {\r\n      this.surfaceRenderer.update();\r\n      this.shooterRenderer.update();\r\n      this.enemyRendererManager.update();\r\n      this.projectileRendererManager.update();\r\n      this.followShooter();\r\n    }\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport { DoubleSide, Mesh, MeshBasicMaterial, PlaneGeometry } from 'three';\r\nimport randomRange from '@/utils/randomRange';\r\nimport readonly from '@/utils/readonly';\r\n\r\nexport default class Canvas3d extends Mesh {\r\n  @readonly\r\n  static KEY_INPUT_DELAY = 200;\r\n\r\n  @readonly\r\n  static COLOR_RED = 'rgba(255, 0, 0, 1)';\r\n  @readonly\r\n  static COLOR_BLUE = 'rgb(20,20,255)';\r\n  @readonly\r\n  static COLOR_GREEN = 'rgb(13,194,13)';\r\n  @readonly\r\n  static COLOR_WHITE = 'rgb(255,255,255)';\r\n  @readonly\r\n  static COLOR_YELLOW = 'rgb(255,255,0)';\r\n  @readonly\r\n  static COLOR_CYAN = 'rgb(100,255,200)';\r\n\r\n  /** @var {CanvasRenderingContext2D} */\r\n  context;\r\n  /** @var {CanvasTexture} */\r\n  texture;\r\n\r\n  /** @var {string} */\r\n  fontName = 'VectorBattle';\r\n  /** @var {FontFace} */\r\n  vectorBattleFont;\r\n  /** @var {boolean} */\r\n  fontReady = false;\r\n\r\n  /** @var {number} */\r\n  canvasResX;\r\n  /** @var {number} */\r\n  canvasResY;\r\n\r\n  /** @var {ScreenContentManager} */\r\n  screenContentManager;\r\n  /** @var {number} */\r\n  lastKeyInputTimestamp = 0;\r\n\r\n  /** @var {boolean} */\r\n  debug = false;\r\n\r\n  /**\r\n   * @param {ScreenContentManager} screenContentManager\r\n   * @param {number} width\r\n   * @param {number} height\r\n   * @param {number} canvasResX\r\n   * @param {number} canvasResY\r\n   */\r\n  constructor (screenContentManager, width = 8, height = 8, canvasResX = 1024, canvasResY = 1024) {\r\n    const contextRef = document.createElement('canvas').getContext('2d');\r\n    contextRef.canvas.width = 1024;\r\n    contextRef.canvas.height = 1024;\r\n\r\n    const texture = new THREE.CanvasTexture(contextRef.canvas);\r\n    texture.minFilter = THREE.LinearFilter;\r\n\r\n    super(\r\n      new PlaneGeometry(width, height),\r\n      new MeshBasicMaterial({\r\n        map: texture,\r\n        side: DoubleSide,\r\n        transparent: true,\r\n      })\r\n    );\r\n\r\n    this.context = contextRef;\r\n    this.texture = texture;\r\n    this.canvasResX = canvasResX;\r\n    this.canvasResY = canvasResY;\r\n\r\n    this.setLineWidth();\r\n    this.setFontSizePx(60);\r\n\r\n    // noinspection JSUnresolvedFunction\r\n    this.vectorBattleFont = new FontFace('VectorBattle', 'url(VectorBattle.ttf)');\r\n    // noinspection JSUnresolvedFunction\r\n    this.vectorBattleFont.load().then(font => {\r\n      document.fonts.add(font);\r\n      this.fontReady = true;\r\n    });\r\n\r\n    this.screenContentManager = screenContentManager;\r\n  }\r\n\r\n  release () {\r\n\r\n  }\r\n\r\n  keyInputDelay () {\r\n    let now = Date.now();\r\n\r\n    if (now - this.lastKeyInputTimestamp < Canvas3d.KEY_INPUT_DELAY) {\r\n      return false;\r\n    }\r\n\r\n    this.lastKeyInputTimestamp = now;\r\n    return true;\r\n  }\r\n\r\n  clearCanvas () {\r\n    this.context.clearRect(0, 0, this.canvasResX, this.canvasResY);\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   */\r\n  setLineWidth (width = 2) {\r\n    this.context.lineWidth = width;\r\n  }\r\n\r\n  /**\r\n   * @param {number} size\r\n   */\r\n  setFontSizePx (size) {\r\n    this.context.font = `${size}px ${this.fontName}`;\r\n  }\r\n\r\n  /**\r\n   * @param {string} text\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {string} color\r\n   * @param {number} spacing\r\n   */\r\n  drawText (text, x, y, color, spacing = 2) {\r\n    if (typeof text === 'number') {\r\n      text = text.toString();\r\n    }\r\n\r\n    if (spacing > 0 && spacing < 3) {\r\n      text = text.split('').join(String.fromCharCode(8200 + spacing));\r\n    }\r\n\r\n    if (this.debug) {\r\n      this.setLineWidth(1);\r\n      let textMetrics = this.context.measureText(text);\r\n      let offset = 8;\r\n\r\n      this.drawRect(\r\n        x - offset, y + offset,\r\n        textMetrics.width + offset * 2, -textMetrics.actualBoundingBoxAscent - offset * 2,\r\n        Canvas3d.COLOR_WHITE\r\n      );\r\n\r\n      this.drawLine(\r\n        x + textMetrics.width / 2, y - textMetrics.actualBoundingBoxAscent / 2 - 50,\r\n        x + textMetrics.width / 2, y + 50,\r\n        Canvas3d.COLOR_WHITE\r\n      );\r\n\r\n      this.setLineWidth();\r\n    }\r\n\r\n    this.context.strokeStyle = color;\r\n    this.context.strokeText(text, x, y);\r\n    this.context.fillStyle = color;\r\n    this.context.fillText(text, x, y);\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {string} color\r\n   */\r\n  drawLine (x, y, x2, y2, color) {\r\n    this.context.strokeStyle = color;\r\n    this.context.beginPath();\r\n    this.context.moveTo(x, y);\r\n    this.context.lineTo(x2, y2);\r\n    this.context.stroke();\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} w\r\n   * @param {number} h\r\n   * @param {string} color\r\n   */\r\n  drawRect (x, y, w, h, color) {\r\n    this.context.strokeStyle = color;\r\n    this.context.strokeRect(x, y, w, h);\r\n  }\r\n\r\n  displayCanvasBorder () {\r\n    this.drawRect(1, 1, this.canvasResX - 2, this.canvasResY - 2, Canvas3d.COLOR_RED);\r\n  }\r\n\r\n  update () {\r\n    if (!this.fontReady) {\r\n      return;\r\n    }\r\n\r\n    this.draw();\r\n\r\n    if (this.debug) {\r\n      this.displayCanvasBorder();\r\n    }\r\n\r\n    this.queueTextureUpdate();\r\n  }\r\n\r\n  draw () {\r\n    this.clearCanvas();\r\n\r\n    let color = `rgb(${randomRange(0, 256)}, ${randomRange(0, 256)}, ${randomRange(0, 256)})`;\r\n    this.drawText('TEMPEST', randomRange(256, 500), randomRange(500, 600), color);\r\n  }\r\n\r\n  queueTextureUpdate () {\r\n    this.material.map.needsUpdate = true;\r\n  }\r\n\r\n  alignNumberToRight (number, size = 6) {\r\n    return number.toString().padStart(size, this.debug ? '_' : ' ');\r\n  }\r\n}\r\n","export default class ContentManager {\r\n  content = [];\r\n  updateFlag = false;\r\n\r\n  /**\r\n   * @param {string} key\r\n   * @param {*} value\r\n   */\r\n  set (key, value) {\r\n    this.content[key] = value;\r\n    this.setUpdateFlag();\r\n  }\r\n\r\n  /**\r\n   * @param {string} key\r\n   * @return {*}\r\n   */\r\n  get (key) {\r\n    return this.content[key];\r\n  }\r\n\r\n  setUpdateFlag () {\r\n    this.updateFlag = true;\r\n  }\r\n\r\n  unsetUpdateFlag () {\r\n    this.updateFlag = false;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n  isUpdateFlagSet () {\r\n    return this.updateFlag;\r\n  }\r\n}\r\n","import ContentManager from '@/Helpers/ContentManager';\r\nimport readonly from '@/utils/readonly';\r\n\r\nexport default class ScreenContentManager extends ContentManager {\r\n  @readonly\r\n  static KEY_PLAYER_ID = 'player_id';\r\n  @readonly\r\n  static KEY_SCORE = 'score';\r\n  @readonly\r\n  static KEY_HIGHEST_SCORE = 'highest_score';\r\n  @readonly\r\n  static KEY_HIGH_SCORES = 'high_scores';\r\n  @readonly\r\n  static KEY_LIVES = 'lives';\r\n  @readonly\r\n  static KEY_LEVEL = 'level';\r\n  @readonly\r\n  static KEY_SELECT_OFFSET = 'select_offset';\r\n  @readonly\r\n  static KEY_SELECT_ACTIVE = 'select_active';\r\n  @readonly\r\n  static KEY_LEVELS = 'levels';\r\n  @readonly\r\n  static KEY_CREDITS = 'credits';\r\n  @readonly\r\n  static KEY_SUPERZAPPER_USED = 'superzapper_used';\r\n  @readonly\r\n  static KEY_RANK_POSITION = 'rank_position';\r\n  @readonly\r\n  static KEY_LEVEL_SELECTED_CALLBACK = 'level_selected_callback';\r\n  @readonly\r\n  static KEY_PUSH_HIGH_SCORE_CALLBACK = 'push_high_score_callback';\r\n  @readonly\r\n  static KEY_CLOSE_HIGH_SCORES_SCREEN_CALLBACK = 'close_high_scores_screen_callback';\r\n\r\n  /**\r\n   * @param {number} score\r\n   */\r\n  setScore (score) {\r\n    this.set(ScreenContentManager.KEY_SCORE, score);\r\n  }\r\n\r\n  /**\r\n   * @param {{name: string, score: number}[]} highScores\r\n   */\r\n  setHighScores (highScores) {\r\n    this.set(ScreenContentManager.KEY_HIGH_SCORES, highScores);\r\n    this.set(ScreenContentManager.KEY_HIGHEST_SCORE, highScores[0]);\r\n  }\r\n\r\n  /**\r\n   * @param {number} credits\r\n   */\r\n  setCredits (credits) {\r\n    this.set(ScreenContentManager.KEY_CREDITS, credits);\r\n  }\r\n\r\n  /**\r\n   * @param {number} lives\r\n   */\r\n  setLives (lives) {\r\n    this.set(ScreenContentManager.KEY_LIVES, lives);\r\n  }\r\n\r\n  /**\r\n   * @param {number} level\r\n   */\r\n  setLevel (level) {\r\n    this.set(ScreenContentManager.KEY_LEVEL, level);\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} superzapperUsed\r\n   */\r\n  setSuperzapperUsed (superzapperUsed) {\r\n    this.set(ScreenContentManager.KEY_SUPERZAPPER_USED, superzapperUsed);\r\n  }\r\n\r\n  /**\r\n   * @param {number} offset\r\n   */\r\n  setSelectOffset (offset) {\r\n    this.set(ScreenContentManager.KEY_SELECT_OFFSET, offset);\r\n  }\r\n\r\n  /**\r\n   * @param {number} active\r\n   */\r\n  setSelectActive (active) {\r\n    this.set(ScreenContentManager.KEY_SELECT_ACTIVE, active);\r\n  }\r\n\r\n  /**\r\n   * @param {{id: number, score: number}[]} levels\r\n   */\r\n  setSelectLevels (levels) {\r\n    this.set(ScreenContentManager.KEY_LEVELS, levels);\r\n  }\r\n\r\n  /**\r\n   * @param {function} levelSelectedCallback\r\n   */\r\n  setLevelSelectedCallback (levelSelectedCallback) {\r\n    this.set(ScreenContentManager.KEY_LEVEL_SELECTED_CALLBACK, levelSelectedCallback);\r\n  }\r\n\r\n  /**\r\n   * @param {function} closeHighScoresScreenCallback\r\n   */\r\n  setCloseHighScoresScreenCallback (closeHighScoresScreenCallback) {\r\n    this.set(ScreenContentManager.KEY_CLOSE_HIGH_SCORES_SCREEN_CALLBACK, closeHighScoresScreenCallback);\r\n  }\r\n\r\n  /**\r\n   * @param {function} pushHighScoreCallback\r\n   */\r\n  setPushHighScoreCallback (pushHighScoreCallback) {\r\n    this.set(ScreenContentManager.KEY_PUSH_HIGH_SCORE_CALLBACK, pushHighScoreCallback);\r\n  }\r\n}\r\n","import Canvas3d from '@/Object/Screen/Canvas3d';\r\nimport ScreenContentManager from '@/Object/Screen/ScreenContentManager';\r\nimport messageBroker, { MessageBroker } from '@/Helpers/MessageBroker';\r\n\r\nexport default class ScreenPlay extends Canvas3d {\r\n  /** @var {number} */\r\n  score = 0;\r\n  /** @var {number} */\r\n  targetScore = 0;\r\n  /** @var {number} */\r\n  scoreRisingSpeed = 10;\r\n  /** @var {boolean} */\r\n  displaySuperzapperHint = true;\r\n\r\n  constructor (screenContentManager, width = 8, height = 8, canvasResX = 1024, canvasResY = 1024) {\r\n    super(screenContentManager, width, height, canvasResX, canvasResY);\r\n\r\n    this.score = this.screenContentManager.get(ScreenContentManager.KEY_SCORE);\r\n  }\r\n\r\n  update () {\r\n    this.targetScore = this.screenContentManager.get(ScreenContentManager.KEY_SCORE);\r\n\r\n    if (this.score !== this.targetScore) {\r\n      this.score += this.scoreRisingSpeed;\r\n\r\n      if (this.score > this.targetScore) {\r\n        this.score = this.targetScore;\r\n      }\r\n    }\r\n\r\n    this.messageBrokerScreenTopicConsumer();\r\n\r\n    super.update();\r\n  }\r\n\r\n  messageBrokerScreenTopicConsumer () {\r\n    let message = messageBroker.consume(MessageBroker.TOPIC_SCREEN);\r\n\r\n    if (message === null) {\r\n      return;\r\n    }\r\n\r\n    if (message.isMessage(MessageBroker.MESSAGE_PLAYER_SUPERZAPPER_USED)) {\r\n      this.displaySuperzapperHint = false;\r\n    }\r\n  }\r\n\r\n  draw () {\r\n    this.clearCanvas();\r\n\r\n    this.setFontSizePx(60);\r\n    this.drawText(\r\n      this.alignNumberToRight(this.score),\r\n      50, 120,\r\n      Canvas3d.COLOR_BLUE\r\n    );\r\n\r\n    for (let i = 0; i < this.screenContentManager.get(ScreenContentManager.KEY_LIVES); i++) {\r\n      this.drawLiveIcon(50 + i * 62, 150);\r\n    }\r\n\r\n    this.setFontSizePx(25);\r\n\r\n    if (this.displaySuperzapperHint) {\r\n      if (this.screenContentManager.get(ScreenContentManager.KEY_SUPERZAPPER_USED) === false) {\r\n        this.drawText(\r\n          'Press E to use SuperZapper',\r\n          240, 1000,\r\n          Canvas3d.COLOR_BLUE\r\n        );\r\n      }\r\n    }\r\n\r\n    this.drawText(\r\n      this.alignNumberToRight(this.screenContentManager.get(ScreenContentManager.KEY_HIGHEST_SCORE).score),\r\n      400, 90,\r\n      Canvas3d.COLOR_BLUE\r\n    );\r\n    this.drawText(\r\n      this.screenContentManager.get(ScreenContentManager.KEY_HIGHEST_SCORE).name,\r\n      580, 90,\r\n      Canvas3d.COLOR_BLUE\r\n    );\r\n\r\n    this.drawText('LEVEL', 400, 140, Canvas3d.COLOR_GREEN);\r\n    this.drawText(\r\n      this.alignNumberToRight(this.screenContentManager.get(ScreenContentManager.KEY_LEVEL)),\r\n      505, 140,\r\n      Canvas3d.COLOR_GREEN\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param scale\r\n   */\r\n  drawLiveIcon (x, y, scale = 1) {\r\n    let unit = 3 * scale;\r\n    this.context.strokeStyle = Canvas3d.COLOR_RED;\r\n\r\n    this.context.beginPath();\r\n    this.context.moveTo(x, y + 3 * unit);\r\n    this.context.lineTo(x + 5 * unit, y + 6 * unit);\r\n    this.context.lineTo(x + 5 * unit, y + 3.5 * unit);\r\n    this.context.lineTo(x + 10 * unit, y + 3.5 * unit);\r\n    this.context.lineTo(x + 10 * unit, y + 6 * unit);\r\n    this.context.lineTo(x + 15 * unit, y + 3 * unit);\r\n    this.context.lineTo(x + 7.5 * unit, y);\r\n    this.context.lineTo(x, y + 3 * unit);\r\n    this.context.stroke();\r\n  }\r\n}\r\n","// Task polega na opisaniu plansz jako obiekt js'owy - json.\r\n// Trzeba spojrzeć jak wygląda plansza i opisać każdy z jej wierzchołków jako zestaw koordynatów {x, y}.\r\n//\r\n// https://www.geogebra.org/calculator\r\n\r\nconst surfaces = ([\r\n  {\r\n    \"id\": 1,\r\n    \"name\": \"Loop\",\r\n    \"isOpen\": false,\r\n    \"coords\": [\r\n      {x: 0, y: 5.1258}, {x: -0.9807, y: 4.9307},\r\n      {x: -1.8122, y: 4.3751}, {x: -2.3678, y: 3.5437},\r\n      {x: -2.5629, y: 2.5629}, {x: -2.3678, y: 1.5821},\r\n      {x: -1.8122, y: 0.7506}, {x: -0.9807, y: 0.1950},\r\n      {x: 0, y: 0}, {x: 0.9807, y: 0.1950},\r\n      {x: 1.8122, y: 0.7506}, {x: 2.3678, y: 1.5821},\r\n      {x: 2.5629, y: 2.5629}, {x: 2.3678, y: 3.5437},\r\n      {x: 1.8122, y: 4.3751}, {x: 0.9807, y: 4.9307}\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Box\",\r\n    \"isOpen\": false,\r\n    \"coords\": [\r\n      {x: 0, y: 4}, {x: -1, y: 4},\r\n      {x: -2, y: 4}, {x: -2, y: 3},\r\n      {x: -2, y: 2}, {x: -2, y: 1},\r\n      {x: -2, y: 0}, {x: -1, y: 0},\r\n      {x: 0, y: 0}, {x: 1, y: 0},\r\n      {x: 2, y: 0}, {x: 2, y: 1},\r\n      {x: 2, y: 2}, {x: 2, y: 3},\r\n      {x: 2, y: 4}, {x: 1, y: 4},]\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"name\": \"Cross\",\r\n    \"isOpen\": false,\r\n    \"coords\": [\r\n      {x: 0, y: 4}, {x: -1, y: 4},\r\n      {x: -1, y: 3}, {x: -2, y: 3},\r\n      {x: -2, y: 2}, {x: -2, y: 1},\r\n      {x: -1, y: 1}, {x: -1, y: 0},\r\n      {x: 0, y: 0}, {x: 1, y: 0},\r\n      {x: 1, y: 1}, {x: 2, y: 1},\r\n      {x: 2, y: 2}, {x: 2, y: 3},\r\n      {x: 1, y: 3}, {x: 1, y: 4},]\r\n  },\r\n  {\r\n    \"id\": 4,\r\n    \"name\": \"Peanut\",\r\n    \"isOpen\": false,\r\n    \"coords\": [\r\n      {x: -0.9063, y: 2.4226}, {x: -1.8911, y: 2.2489},\r\n      {x: -2.4646, y: 1.5701}, {x: -2.4646, y: 0.5701},\r\n      {x: -1.8911, y: -0.2489}, {x: -0.9063, y: -0.4226},\r\n      {x: 0, y: 0}, {x: 1, y: 0},\r\n      {x: 1.9063, y: -0.4226}, {x: 2.8911, y: -0.2489},\r\n      {x: 3.4646, y: 0.5701}, {x: 3.4646, y: 1.5701},\r\n      {x: 2.8911, y: 2.2489}, {x: 1.9063, y: 2.4226},\r\n      {x: 1, y: 2}, {x: 0, y: 2}\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 5,\r\n    \"name\": \"Medal\",\r\n    \"isOpen\": false,\r\n    \"coords\": [\r\n      {x: -0.3442, y: 3.8689}, {x: -1.0513, y: 3.1618},\r\n      {x: -2.0173, y: 2.9030}, {x: -2.0173, y: 1.9030},\r\n      {x: -1.0506, y: 1.6464}, {x: -0.3420, y: 0.9396},\r\n      {x: 0, y: 0}, {x: 1, y: 0},\r\n      {x: 1.3420, y: 0.9396}, {x: 2.0506, y: 1.6464},\r\n      {x: 3.0173, y: 1.9030}, {x: 3.0173, y: 2.9030},\r\n      {x: 2.0513, y: 3.1618}, {x: 1.3442, y: 3.8689},\r\n      {x: 1.0022, y: 4.8086}, {x: 0.0022, y: 4.8086},\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 6,\r\n    \"name\": \"Triangle\",\r\n    \"isOpen\": false,\r\n    \"coords\": [\r\n      {x: 0, y: 5}, {x: -0.5967, y: 4.0054},\r\n      {x: -1.1977, y: 3.0037}, {x: -1.7974, y: 2.0041},\r\n      {x: -2.3962, y: 1.0063}, {x: -3, y: 0},\r\n      {x: -2, y: 0}, {x: -1, y: 0},\r\n      {x: 0, y: 0}, {x: 1, y: 0},\r\n      {x: 2, y: 0}, {x: 3, y: 0},\r\n      {x: 2.3962, y: 1.0063}, {x: 1.7974, y: 2.0041},\r\n      {x: 1.1977, y: 3.0037}, {x: 0.5967, y: 4.0054}\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 7,\r\n    \"name\": \"Clover\",\r\n    \"isOpen\": false,\r\n    \"coords\": [\r\n      {x: 0.0028, y: -0.7071}, {x: 0.4568, y: -1.5981},\r\n      {x: 1.4445, y: -1.4416}, {x: 1.6010, y: -0.4539},\r\n      {x: 0.71, y: 0}, {x: 1.6010, y: 0.4539},\r\n      {x: 1.4445, y: 1.4416}, {x: 0.4568, y: 1.5981},\r\n      {x: 0.0028, y: 0.7071}, {x: -0.4568, y: 1.5981},\r\n      {x: -1.4445, y: 1.4416}, {x: -1.6010, y: 0.4539},\r\n      {x: -0.71, y: 0}, {x: -1.6010, y: -0.4539},\r\n      {x: -1.4445, y: -1.4416}, {x: -0.4568, y: -1.5981}\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 8,\r\n    \"name\": \"The V\",\r\n    \"isOpen\": true,\r\n    \"zOffset\": -0.5,\r\n    \"coords\": [\r\n      {x: -2.9599, y: 6.3475}, {x: -2.5372, y: 5.4411},\r\n      {x: -2.1143, y: 4.5342}, {x: -1.6913, y: 3.6271},\r\n      {x: -1.2683, y: 2.7199}, {x: -0.8455, y: 1.8133},\r\n      {x: -0.4226, y: 0.9063}, {x: 0, y: 0},\r\n      {x: 1, y: 0}, {x: 1.4226, y: 0.9063},\r\n      {x: 1.8455, y: 1.8133}, {x: 2.2683, y: 2.7199},\r\n      {x: 2.6913, y: 3.6271}, {x: 3.1143, y: 4.5342},\r\n      {x: 3.5372, y: 5.4411}, {x: 3.9599, y: 6.3475},\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 9,\r\n    \"name\": \"Staircase\",\r\n    \"isOpen\": true,\r\n    \"zOffset\": -1,\r\n    \"coords\": [\r\n      {x: -3, y: 4}, {x: -3, y: 3},\r\n      {x: -2, y: 3}, {x: -2, y: 2},\r\n      {x: -1, y: 2}, {x: -1, y: 1},\r\n      {x: 0, y: 1}, {x: 0, y: 0},\r\n      {x: 1, y: 0}, {x: 1, y: 1},\r\n      {x: 2, y: 1}, {x: 2, y: 2},\r\n      {x: 3, y: 2}, {x: 3, y: 3},\r\n      {x: 4, y: 3}, {x: 4, y: 4}\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 10,\r\n    \"name\": \"Bowl\",\r\n    \"isOpen\": true,\r\n    \"zOffset\": -0.5,\r\n    \"coords\": [\r\n      {x: -2.4317, y: 5.8348},\r\n      {x: -2.4317, y: 4.8348}, {x: -2.4142, y: 3.8350},\r\n      {x: -2.3793, y: 2.8356}, {x: -2.2057, y: 1.8508},\r\n      {x: -1.7057, y: 0.9848}, {x: -0.9396, y: 0.3420},\r\n      {x: 0, y: 0}, {x: 1, y: 0},\r\n      {x: 1.9396, y: 0.3420}, {x: 2.7057, y: 0.9848},\r\n      {x: 3.2057, y: 1.8508}, {x: 3.3793, y: 2.8356},\r\n      {x: 3.4142, y: 3.8350}, {x: 3.4317, y: 4.8348},\r\n      {x: 3.4317, y: 5.8348},\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 11,\r\n    \"name\": \"Plane\",\r\n    \"isOpen\": true,\r\n    \"zOffset\": -1.5,\r\n    \"coords\": [\r\n      {x: -7, y: 0}, {x: -6, y: 0},\r\n      {x: -5, y: 0}, {x: -4, y: 0},\r\n      {x: -3, y: 0}, {x: -2, y: 0},\r\n      {x: -1, y: 0}, {x: 0, y: 0},\r\n      {x: 1, y: 0}, {x: 2, y: 0},\r\n      {x: 3, y: 0}, {x: 4, y: 0},\r\n      {x: 5, y: 0}, {x: 6, y: 0},\r\n      {x: 7, y: 0}, {x: 8, y: 0}\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 12,\r\n    \"name\": \"ILY\",\r\n    \"isOpen\": false,\r\n    \"coords\": [\r\n      {x: -0.1421, y: 3.1885}, {x: -0.7849, y: 3.9546},\r\n      {x: -1.7508, y: 3.6958}, {x: -2.0928, y: 2.7561},\r\n      {x: -2.0928, y: 1.7561}, {x: -1.7508, y: 0.81},\r\n      {x: -0.9848, y: 0.1736}, {x: 0, y: 0},\r\n      {x: 0.9848, y: 0.1736}, {x: 1.7508, y: 0.81},\r\n      {x: 2.0928, y: 1.7561}, {x: 2.0928, y: 2.7561},\r\n      {x: 1.7508, y: 3.6958}, {x: 0.7849, y: 3.9546},\r\n      {x: 0.1421, y: 3.1885}, {x: 0.0029, y: 2.1982}\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 13,\r\n    \"name\": \"Star\",\r\n    \"isOpen\": false,\r\n    \"coords\": [\r\n      {x: 0, y: -1.3065}, {x: 0.7932, y: -1.9153},\r\n      {x: 0.9237, y: -0.9238}, {x: 1.9152, y: -0.7933},\r\n      {x: 1.3064, y: 0}, {x: 1.9152, y: 0.7933},\r\n      {x: 0.9237, y: 0.9238}, {x: 0.7932, y: 1.9153},\r\n      {x: 0, y: 1.3065}, {x: -0.7932, y: 1.9153},\r\n      {x: -0.9237, y: 0.9238}, {x: -1.9152, y: 0.7933},\r\n      {x: -1.3064, y: 0}, {x: -1.9152, y: -0.7933},\r\n      {x: -0.9237, y: -0.9238}, {x: -0.7932, y: -1.9153}\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 14,\r\n    \"name\": \"Wave\",\r\n    \"isOpen\": true,\r\n    \"zOffset\": -1,\r\n    \"coords\": [\r\n      {x: -4.4792, y: 1.8039},\r\n      {x: -3.9056, y: 0.9848}, {x: -3.7320, y: 0},\r\n      {x: -3.2320, y: -0.8660}, {x: -2.3660, y: -1.3660},\r\n      {x: -1.3660, y: -1.3660}, {x: -0.5, y: -0.8660},\r\n      {x: 0, y: 0}, {x: 1, y: 0},\r\n      {x: 1.5, y: -0.8660}, {x: 2.3660, y: -1.3660},\r\n      {x: 3.3660, y: -1.3660}, {x: 4.2320, y: -0.8660},\r\n      {x: 4.7320, y: 0}, {x: 4.9056, y: 0.9848},\r\n      {x: 5.4792, y: 1.8039}\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 15,\r\n    \"name\": \"Mountains\",\r\n    \"isOpen\": true,\r\n    \"zOffset\": -1,\r\n    \"coords\": [\r\n      {x: -2.1405, y: 3.2564},\r\n      {x: -2.6405, y: 4.1224}, {x: -2.1405, y: 3.2564},\r\n      {x: -1.7985, y: 2.3167}, {x: -1.5396, y: 1.3508},\r\n      {x: -1.3660, y: 0.3660}, {x: -0.8660, y: -0.5},\r\n      {x: 0, y: 0}, {x: 0.9848, y: -0.1736},\r\n      {x: 1.4696, y: 0.6660}, {x: 1.6432, y: 1.6508},\r\n      {x: 2.1432, y: 2.5168}, {x: 3.1280, y: 2.3432},\r\n      {x: 3.4700, y: 3.2829}, {x: 3.8121, y: 4.2226},\r\n      {x: 4.1541, y: 5.1623}\r\n    ]\r\n  },\r\n  {\r\n    \"id\": 16,\r\n    \"name\": \"Infinity\",\r\n    \"isOpen\": false,\r\n    \"coords\": [\r\n      {x: -0.2738, y: 1.9396},\r\n      {x: -1.3079, y: 2.1985}, {x: -2.2738, y: 1.9396},\r\n      {x: -2.6159, y: 1}, {x: -2.2738, y: 0.0603},\r\n      {x: -1.3079, y: -0.1985}, {x: -0.3420, y: 0.0603},\r\n      {x: 0, y: 1},\r\n      {x: 0.3420, y: 0.0603}, {x: 1.3079, y: -0.1985},\r\n      {x: 2.2738, y: 0.0603}, {x: 2.6159, y: 1},\r\n      {x: 2.2738, y: 1.9396}, {x: 1.3079, y: 2.1985},\r\n      {x: 0.2738, y: 1.9396}, {x: 0, y: 1},\r\n    ]\r\n  },\r\n]);\r\n\r\nexport default surfaces;\r\n","import Canvas3d from '@/Object/Screen/Canvas3d';\r\nimport ScreenContentManager from '@/Object/Screen/ScreenContentManager';\r\nimport keyboardInput from '@/utils/KeyboardInput';\r\nimport surfaces from '@/Assets/Surfaces';\r\nimport BoundingBox2 from '@/Helpers/BoundingBox2';\r\nimport messageBroker, { MessageBroker } from '@/Helpers/MessageBroker';\r\nimport readonly from '@/utils/readonly';\r\n\r\nexport default class ScreenSelectSurface extends Canvas3d {\r\n  @readonly\r\n  static SURFACE_COLORS = ['rgba(0, 0, 255, 1)', 'rgba(255, 0, 0, 1)', 'rgba(0, 255, 0, 1)'];\r\n\r\n  /** @var {number} */\r\n  selectedLevel = 1;\r\n\r\n  constructor (screenContentManager, width = 8, height = 8, canvasResX = 1024, canvasResY = 1024) {\r\n    super(screenContentManager, width, height, canvasResX, canvasResY);\r\n\r\n    this.registerKeys();\r\n  }\r\n\r\n  release () {\r\n    this.unregisterKeys();\r\n  }\r\n\r\n  registerKeys () {\r\n    keyboardInput.register('KeyA', () => { this.moveLeft(); });\r\n    keyboardInput.register('KeyD', () => { this.moveRight(); });\r\n    keyboardInput.register('Space', () => { this.selectLevel(); });\r\n  }\r\n\r\n  unregisterKeys () {\r\n    keyboardInput.unregister('KeyA');\r\n    keyboardInput.unregister('KeyD');\r\n    keyboardInput.unregister('Space');\r\n  }\r\n\r\n  selectLevel () {\r\n    if (this.keyInputDelay()) {\r\n      this.screenContentManager.get(ScreenContentManager.KEY_LEVEL_SELECTED_CALLBACK)(this.selectedLevel, true);\r\n      messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_MENU_SELECT);\r\n    }\r\n  }\r\n\r\n  moveLeft () {\r\n    if (this.keyInputDelay()) {\r\n      this.moveSelection(-1);\r\n      messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_MENU_CHANGE);\r\n    }\r\n  }\r\n\r\n  moveRight () {\r\n    if (this.keyInputDelay()) {\r\n      this.moveSelection(1);\r\n      messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_MENU_CHANGE);\r\n    }\r\n  }\r\n\r\n  moveSelection (direction) {\r\n    let currentActive = this.screenContentManager.get(ScreenContentManager.KEY_SELECT_ACTIVE);\r\n    let currentOffset = this.screenContentManager.get(ScreenContentManager.KEY_SELECT_OFFSET);\r\n\r\n    let desiredSelection = currentActive + currentOffset + direction;\r\n\r\n    if (desiredSelection < 0) {\r\n      return;\r\n    }\r\n\r\n    let levelsLength = this.screenContentManager.get(ScreenContentManager.KEY_LEVELS).length;\r\n    if (desiredSelection >= levelsLength) {\r\n      return;\r\n    }\r\n\r\n    if (direction === 1) {\r\n      if (currentActive >= 4) {\r\n        currentOffset++;\r\n      } else {\r\n        currentActive++;\r\n      }\r\n    } else {\r\n      if (currentActive <= 0) {\r\n        currentOffset--;\r\n      } else {\r\n        currentActive--;\r\n      }\r\n    }\r\n\r\n    this.selectedLevel = this.screenContentManager.get(ScreenContentManager.KEY_LEVELS)[desiredSelection].id;\r\n\r\n    this.screenContentManager.set(ScreenContentManager.KEY_SELECT_ACTIVE, currentActive);\r\n    this.screenContentManager.set(ScreenContentManager.KEY_SELECT_OFFSET, currentOffset);\r\n  }\r\n\r\n  draw () {\r\n    this.clearCanvas();\r\n\r\n    this.setFontSizePx(20);\r\n    this.drawText('© ROMAN DABAL & PIOTR KLOSEK ©', 282, 60, Canvas3d.COLOR_BLUE);\r\n\r\n    this.setFontSizePx(30);\r\n    this.drawText('rate yourself', 371, 480, Canvas3d.COLOR_GREEN);\r\n    this.drawText('Use A and D to change', 270, 530, Canvas3d.COLOR_CYAN);\r\n    this.drawText('Press fire to select', 284, 580, Canvas3d.COLOR_YELLOW);\r\n    this.drawText('novice', 140, 750, Canvas3d.COLOR_RED);\r\n    this.drawText('expert', 845, 750, Canvas3d.COLOR_RED);\r\n\r\n    this.setFontSizePx(25);\r\n    this.drawText('level', 30, 800, Canvas3d.COLOR_GREEN);\r\n    this.drawText('hole', 30, 860, Canvas3d.COLOR_GREEN);\r\n    this.drawText('bonus', 30, 920, Canvas3d.COLOR_GREEN);\r\n\r\n    let offset = this.screenContentManager.get(ScreenContentManager.KEY_SELECT_OFFSET);\r\n    let levels = this.screenContentManager.get(ScreenContentManager.KEY_LEVELS);\r\n    let xOffset = 160;\r\n    let xStep = 175;\r\n\r\n    for (let i = 0; i < levels.length - offset && i < 5; i++) {\r\n      let level = levels[i + offset];\r\n      let surfaceId = ((level.id - 1) % 16) + 1;\r\n\r\n      this.drawText(\r\n        this.alignNumberToRight(level.id), xOffset + (i * xStep) - 40, 800, Canvas3d.COLOR_GREEN\r\n      );\r\n\r\n      let surfaceColor = Math.floor(level.id / 16) % 3;\r\n      this.context.strokeStyle = ScreenSelectSurface.SURFACE_COLORS[surfaceColor];\r\n      this.drawMapIcon(xOffset + (i * xStep) + 58, 845, surfaceId);\r\n\r\n      this.drawText(\r\n        this.alignNumberToRight(level.scoreBonus), xOffset + (i * xStep), 920, Canvas3d.COLOR_RED\r\n      );\r\n    }\r\n\r\n    this.setFontSizePx(75);\r\n    this.drawText('TEMPEST 2021', 160, 300, Canvas3d.COLOR_WHITE);\r\n\r\n    this.drawRect(\r\n      140 + xStep * this.screenContentManager.get(ScreenContentManager.KEY_SELECT_ACTIVE),\r\n      765, xStep - 20, 165,\r\n      ScreenSelectSurface.COLOR_BLUE\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} surfaceId\r\n   * @param {number} scale\r\n   */\r\n  drawMapIcon (x, y, surfaceId, scale = 1) {\r\n    let unit = 10 * scale;\r\n\r\n    let surface = surfaces.find(surface => surface.id === surfaceId);\r\n    if (surface === undefined) {\r\n      return;\r\n    }\r\n\r\n    let boundingBox2 = new BoundingBox2.create(surface.coords);\r\n\r\n    this.context.beginPath();\r\n\r\n    for (let i = 0; i < surface.coords.length + (surface.isOpen ? 0 : 1); i++) {\r\n      let cx = x + (boundingBox2.getCenter().x - surface.coords[i % 16].x) * unit;\r\n      let cy = y + (boundingBox2.getCenter().y - surface.coords[i % 16].y) * unit;\r\n\r\n      if (i !== 0) {\r\n        this.context.lineTo(cx, cy);\r\n      } else {\r\n        this.context.moveTo(cx, cy);\r\n      }\r\n    }\r\n\r\n    this.context.stroke();\r\n  }\r\n}\r\n","import Canvas3d from '@/Object/Screen/Canvas3d';\r\nimport keyboardInput from '@/utils/KeyboardInput';\r\nimport ScreenContentManager from '@/Object/Screen/ScreenContentManager';\r\nimport messageBroker, { MessageBroker } from '@/Helpers/MessageBroker';\r\n\r\nexport default class ScreenHighScores extends Canvas3d {\r\n  /** @var {string[]} */\r\n  playerName = ['A', 'A', 'A'];\r\n  /** @var {number} */\r\n  place = 8;\r\n  /** @var {number} */\r\n  score = 0;\r\n  /** @var {{name: string, score: number}[]} */\r\n  highScores;\r\n  /** @var {number} */\r\n  currentStep = 0;\r\n\r\n  constructor (screenContentManager, width = 8, height = 8, canvasResX = 1024, canvasResY = 1024) {\r\n    super(screenContentManager, width, height, canvasResX, canvasResY);\r\n\r\n    this.highScores = [...this.screenContentManager.get(ScreenContentManager.KEY_HIGH_SCORES)];\r\n    this.score = this.screenContentManager.get(ScreenContentManager.KEY_SCORE);\r\n\r\n    this.place = this.highScores.findIndex(row => row.score <= this.score);\r\n    if (this.place >= 0) {\r\n      this.highScores.splice(this.place, 0, { name: 'AAA', score: this.score });\r\n      this.highScores.pop();\r\n    } else {\r\n      this.currentStep = 3;\r\n    }\r\n\r\n    this.registerKeys();\r\n  }\r\n\r\n  release () {\r\n    this.unregisterKeys();\r\n  }\r\n\r\n  registerKeys () {\r\n    keyboardInput.register('KeyA', () => { this.prevChar(); });\r\n    keyboardInput.register('KeyD', () => { this.nextChar(); });\r\n    keyboardInput.register('Space', () => { this.step(); });\r\n  }\r\n\r\n  unregisterKeys () {\r\n    keyboardInput.unregister('KeyA');\r\n    keyboardInput.unregister('KeyD');\r\n    keyboardInput.unregister('Space');\r\n  }\r\n\r\n  nextChar () {\r\n    if (this.currentStep >= 3 || !this.keyInputDelay()) {\r\n      return;\r\n    }\r\n\r\n    let char = this.playerName[this.currentStep].charCodeAt(0);\r\n\r\n    if (char < 90) {\r\n      char++;\r\n    }\r\n\r\n    this.playerName[this.currentStep] = String.fromCharCode(char);\r\n    this.highScores[this.place].name = this.playerName.join('');\r\n\r\n    messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_MENU_CHANGE);\r\n  }\r\n\r\n  prevChar () {\r\n    if (this.currentStep >= 3 || !this.keyInputDelay()) {\r\n      return;\r\n    }\r\n\r\n    let char = this.playerName[this.currentStep].charCodeAt(0);\r\n\r\n    if (char > 65) {\r\n      char--;\r\n    }\r\n\r\n    this.playerName[this.currentStep] = String.fromCharCode(char);\r\n    this.highScores[this.place].name = this.playerName.join('');\r\n\r\n    messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_MENU_CHANGE);\r\n  }\r\n\r\n  step () {\r\n    if (!this.keyInputDelay()) {\r\n      return;\r\n    }\r\n\r\n    if (this.currentStep >= 3) {\r\n      this.screenContentManager.get(ScreenContentManager.KEY_PUSH_HIGH_SCORE_CALLBACK)(\r\n        this.score,\r\n        this.playerName.join('')\r\n      );\r\n\r\n      this.screenContentManager.get(ScreenContentManager.KEY_CLOSE_HIGH_SCORES_SCREEN_CALLBACK)();\r\n    }\r\n\r\n    this.currentStep++;\r\n\r\n    messageBroker.publish(MessageBroker.TOPIC_AUDIO, MessageBroker.MESSAGE_MENU_SELECT);\r\n  }\r\n\r\n  draw () {\r\n    this.clearCanvas();\r\n\r\n    this.setFontSizePx(30);\r\n\r\n    this.drawText(this.alignNumberToRight(this.score), 372, 90, Canvas3d.COLOR_BLUE);\r\n\r\n    this.drawText(this.playerName.join(''), 548, 90, Canvas3d.COLOR_BLUE);\r\n\r\n    this.drawText('game over', 423, 140, Canvas3d.COLOR_BLUE);\r\n\r\n    for (let i = 0; i < this.highScores.length; i++) {\r\n      this.drawText(this.alignNumberToRight(this.highScores[i].score), 550, 340 + (i * 50), Canvas3d.COLOR_GREEN);\r\n      this.drawText(this.highScores[i].name, 400, 340 + (i * 50), Canvas3d.COLOR_GREEN);\r\n      this.drawText(this.alignNumberToRight(i + 1), 200, 340 + (i * 50), Canvas3d.COLOR_GREEN);\r\n    }\r\n\r\n    // this.drawText('Ranking from 1 to 99', 280, 760, Canvas3d.COLOR_YELLOW);\r\n    // this.drawText(\r\n    //   this.alignNumberToRight(this.place === -1 ? 99 : this.place + 1) + '.',\r\n    //   260, 810,\r\n    //   Canvas3d.COLOR_YELLOW\r\n    // );\r\n    // this.drawText('player 1', 450, 810, Canvas3d.COLOR_WHITE);\r\n\r\n    // this.drawText('© Peterkowic', 355, 950, Canvas3d.COLOR_GREEN);\r\n    this.drawText('Bonus every 20000', 325, 1000, Canvas3d.COLOR_CYAN);\r\n\r\n    this.drawText('Use A and D change', 310, 800, Canvas3d.COLOR_CYAN);\r\n    this.drawText('Press fire to confirm', 274, 850, Canvas3d.COLOR_YELLOW);\r\n\r\n    this.setFontSizePx(60);\r\n    this.drawText('HIGH SCORES', 260, 260, Canvas3d.COLOR_YELLOW);\r\n  }\r\n}\r\n","const levels = ([\r\n  { id: 1, selectable: true, scoreBonus: 0, targetScore: 3000 },\r\n  { id: 2, selectable: false, scoreBonus: 0, targetScore: 6000 },\r\n  { id: 3, selectable: true, scoreBonus: 6000, targetScore: 11000 },\r\n  { id: 4, selectable: false, scoreBonus: 0, targetScore: 16000 },\r\n  { id: 5, selectable: true, scoreBonus: 16000, targetScore: 24000 },\r\n  { id: 6, selectable: false, scoreBonus: 0, targetScore: 32000 },\r\n  { id: 7, selectable: true, scoreBonus: 32000, targetScore: 43000 },\r\n  { id: 8, selectable: false, scoreBonus: 0, targetScore: 54000 },\r\n  { id: 9, selectable: true, scoreBonus: 54000, targetScore: 64000 },\r\n  { id: 10, selectable: false, scoreBonus: 0, targetScore: 74000 },\r\n  { id: 11, selectable: true, scoreBonus: 74000, targetScore: 84000 },\r\n  { id: 12, selectable: false, scoreBonus: 0, targetScore: 94000 },\r\n  { id: 13, selectable: true, scoreBonus: 94000, targetScore: 104000 },\r\n  { id: 14, selectable: false, scoreBonus: 0, targetScore: 114000 },\r\n  { id: 15, selectable: true, scoreBonus: 114000, targetScore: 124000 },\r\n  { id: 16, selectable: false, scoreBonus: 0, targetScore: 134000 },\r\n  { id: 17, selectable: true, scoreBonus: 134000, targetScore: 140000 },\r\n  { id: 18, selectable: false, scoreBonus: 0, targetScore: 146000 },\r\n  { id: 19, selectable: false, scoreBonus: 0, targetScore: 152000 },\r\n  { id: 20, selectable: true, scoreBonus: 152000, targetScore: 161000 },\r\n  { id: 21, selectable: false, scoreBonus: 0, targetScore: 170000 },\r\n  { id: 22, selectable: true, scoreBonus: 170000, targetScore: 179000 },\r\n  { id: 23, selectable: false, scoreBonus: 0, targetScore: 188000 },\r\n  { id: 24, selectable: true, scoreBonus: 188000, targetScore: 198000 },\r\n  { id: 25, selectable: false, scoreBonus: 0, targetScore: 208000 },\r\n  { id: 26, selectable: true, scoreBonus: 208000, targetScore: 217000 },\r\n  { id: 27, selectable: false, scoreBonus: 0, targetScore: 226000 },\r\n  { id: 28, selectable: true, scoreBonus: 226000, targetScore: 233300 },\r\n  { id: 29, selectable: false, scoreBonus: 0, targetScore: 240700 },\r\n  { id: 30, selectable: false, scoreBonus: 0, targetScore: 248000 },\r\n  { id: 31, selectable: true, scoreBonus: 248000, targetScore: 256500 },\r\n  { id: 32, selectable: false, scoreBonus: 0, targetScore: 265000 },\r\n  { id: 33, selectable: true, scoreBonus: 265000, targetScore: 276700 },\r\n  { id: 34, selectable: false, scoreBonus: 0, targetScore: 288300 },\r\n  { id: 35, selectable: false, scoreBonus: 0, targetScore: 300000 },\r\n  { id: 36, selectable: true, scoreBonus: 300000, targetScore: 310000 },\r\n  { id: 37, selectable: false, scoreBonus: 0, targetScore: 320000 },\r\n  { id: 38, selectable: false, scoreBonus: 0, targetScore: 330000 },\r\n  { id: 39, selectable: false, scoreBonus: 0, targetScore: 340000 },\r\n  { id: 40, selectable: true, scoreBonus: 340000, targetScore: 350500 },\r\n  { id: 41, selectable: false, scoreBonus: 0, targetScore: 361000 },\r\n  { id: 42, selectable: false, scoreBonus: 0, targetScore: 371500 },\r\n  { id: 43, selectable: false, scoreBonus: 0, targetScore: 382000 },\r\n  { id: 44, selectable: true, scoreBonus: 382000, targetScore: 393000 },\r\n  { id: 45, selectable: false, scoreBonus: 0, targetScore: 404000 },\r\n  { id: 46, selectable: false, scoreBonus: 0, targetScore: 415000 },\r\n  { id: 47, selectable: true, scoreBonus: 415000, targetScore: 427000 },\r\n  { id: 48, selectable: false, scoreBonus: 0, targetScore: 439000 },\r\n  { id: 49, selectable: true, scoreBonus: 439000, targetScore: 456700 },\r\n  { id: 50, selectable: false, scoreBonus: 0, targetScore: 474300 },\r\n  { id: 51, selectable: false, scoreBonus: 0, targetScore: 492000 },\r\n  { id: 52, selectable: true, scoreBonus: 492000, targetScore: 501800 },\r\n  { id: 53, selectable: false, scoreBonus: 0, targetScore: 511500 },\r\n  { id: 54, selectable: false, scoreBonus: 0, targetScore: 521300 },\r\n  { id: 55, selectable: false, scoreBonus: 0, targetScore: 531000 },\r\n  { id: 56, selectable: true, scoreBonus: 531000, targetScore: 546000 },\r\n  { id: 57, selectable: false, scoreBonus: 0, targetScore: 561000 },\r\n  { id: 58, selectable: false, scoreBonus: 0, targetScore: 576000 },\r\n  { id: 59, selectable: false, scoreBonus: 0, targetScore: 591000 },\r\n  { id: 60, selectable: true, scoreBonus: 591000, targetScore: 602000 },\r\n  { id: 61, selectable: false, scoreBonus: 0, targetScore: 613000 },\r\n  { id: 62, selectable: false, scoreBonus: 0, targetScore: 624000 },\r\n  { id: 63, selectable: true, scoreBonus: 624000, targetScore: 640000 },\r\n  { id: 64, selectable: false, scoreBonus: 0, targetScore: 656000 },\r\n  { id: 65, selectable: true, scoreBonus: 656000, targetScore: 669800 },\r\n  { id: 66, selectable: false, scoreBonus: 0, targetScore: 683500 },\r\n  { id: 67, selectable: false, scoreBonus: 0, targetScore: 697300 },\r\n  { id: 68, selectable: false, scoreBonus: 0, targetScore: 711000 },\r\n  { id: 69, selectable: false, scoreBonus: 0, targetScore: 724800 },\r\n  { id: 70, selectable: false, scoreBonus: 0, targetScore: 738500 },\r\n  { id: 71, selectable: false, scoreBonus: 0, targetScore: 752300 },\r\n  { id: 72, selectable: false, scoreBonus: 0, targetScore: 766000 },\r\n  { id: 73, selectable: true, scoreBonus: 766000, targetScore: 776300 },\r\n  { id: 74, selectable: false, scoreBonus: 0, targetScore: 786500 },\r\n  { id: 75, selectable: false, scoreBonus: 0, targetScore: 796800 },\r\n  { id: 76, selectable: false, scoreBonus: 0, targetScore: 807000 },\r\n  { id: 77, selectable: false, scoreBonus: 0, targetScore: 817300 },\r\n  { id: 78, selectable: false, scoreBonus: 0, targetScore: 827500 },\r\n  { id: 79, selectable: false, scoreBonus: 0, targetScore: 837800 },\r\n  { id: 80, selectable: false, scoreBonus: 0, targetScore: 848000 },\r\n  { id: 81, selectable: true, scoreBonus: 848000, targetScore: 855900 },\r\n  { id: 82, selectable: false, scoreBonus: 0, targetScore: 863800 },\r\n  { id: 83, selectable: false, scoreBonus: 0, targetScore: 871700 },\r\n  { id: 84, selectable: false, scoreBonus: 0, targetScore: 879600 },\r\n  { id: 85, selectable: false, scoreBonus: 0, targetScore: 887400 },\r\n  { id: 86, selectable: false, scoreBonus: 0, targetScore: 895300 },\r\n  { id: 87, selectable: false, scoreBonus: 0, targetScore: 903200 },\r\n  { id: 88, selectable: false, scoreBonus: 0, targetScore: 911100 },\r\n  { id: 89, selectable: false, scoreBonus: 0, targetScore: 919000 },\r\n  { id: 90, selectable: false, scoreBonus: 0, targetScore: 926900 },\r\n  { id: 91, selectable: false, scoreBonus: 0, targetScore: 934800 },\r\n  { id: 92, selectable: false, scoreBonus: 0, targetScore: 942700 },\r\n  { id: 93, selectable: false, scoreBonus: 0, targetScore: 950600 },\r\n  { id: 94, selectable: false, scoreBonus: 0, targetScore: 958400 },\r\n  { id: 95, selectable: false, scoreBonus: 0, targetScore: 966300 },\r\n  { id: 96, selectable: false, scoreBonus: 0, targetScore: 974200 },\r\n  { id: 97, selectable: false, scoreBonus: 0, targetScore: 982100 },\r\n  { id: 98, selectable: false, scoreBonus: 0, targetScore: 990000 },\r\n  { id: 99, selectable: false, scoreBonus: 0, targetScore: 999000 },\r\n]);\r\n\r\nexport default levels;\r\n","import { Audio, AudioLoader } from 'three';\r\nimport readonly from '@/utils/readonly';\r\nimport messageBroker, { MessageBroker } from '@/Helpers/MessageBroker';\r\n\r\nexport default class AudioManager {\r\n  @readonly\r\n  static SOUND_ENEMY_DEATH = 'enemy_death';\r\n  @readonly\r\n  static SOUND_NEXT_LEVEL = 'next_level';\r\n  @readonly\r\n  static SOUND_PLAYER_DEATH = 'player_death';\r\n  @readonly\r\n  static SOUND_PLAYER_LANE_CHANGE = 'player_lane_change';\r\n  @readonly\r\n  static SOUND_PLAYER_SHOOT = 'player_shoot';\r\n  @readonly\r\n  static SOUND_ENEMY_SHOOT = 'enemy_shoot';\r\n\r\n  @readonly\r\n  static SOUND_VOLUME = 0.4;\r\n\r\n  /** {AudioListener} */\r\n  audioListener;\r\n  /** {Audio[]} */\r\n  audio = [];\r\n  /** {AudioBuffer[][]} */\r\n  audioBuffer;\r\n\r\n  constructor (audioListener) {\r\n    this.audioListener = audioListener;\r\n    this.audio.push(new Audio(this.audioListener));\r\n  }\r\n\r\n  playSound (soundName, volume = 1) {\r\n    let availableAudio = this.audio.find(audio => !audio.isPlaying);\r\n\r\n    if (availableAudio === undefined) {\r\n      this.audio.push(new Audio(this.audioListener));\r\n      availableAudio = this.audio[this.audio.length - 1];\r\n    }\r\n\r\n    const audioLoader = new AudioLoader();\r\n    audioLoader.load(`sounds/${soundName}.ogg`, buffer => {\r\n      availableAudio.setBuffer(buffer);\r\n      availableAudio.setVolume(volume * AudioManager.SOUND_VOLUME);\r\n      availableAudio.play();\r\n    });\r\n  }\r\n\r\n  update () {\r\n    let message = messageBroker.consume(MessageBroker.TOPIC_AUDIO);\r\n\r\n    if (message === null) {\r\n      return;\r\n    }\r\n\r\n    switch (message.message) {\r\n      case MessageBroker.MESSAGE_ENEMY_DEATH:\r\n        this.playSound(AudioManager.SOUND_ENEMY_DEATH);\r\n        break;\r\n      case MessageBroker.MESSAGE_PLAYER_DEATH:\r\n        this.playSound(AudioManager.SOUND_PLAYER_DEATH);\r\n        break;\r\n      case MessageBroker.MESSAGE_PLAYER_CHANGED_LANE:\r\n        this.playSound(AudioManager.SOUND_PLAYER_LANE_CHANGE);\r\n        break;\r\n      case MessageBroker.MESSAGE_NEXT_LEVEL:\r\n        this.playSound(AudioManager.SOUND_NEXT_LEVEL);\r\n        break;\r\n      case MessageBroker.MESSAGE_PLAYER_SHOOT:\r\n        this.playSound(AudioManager.SOUND_PLAYER_SHOOT, 0.8);\r\n        break;\r\n      case MessageBroker.MESSAGE_ENEMY_SHOOT:\r\n        this.playSound(AudioManager.SOUND_ENEMY_SHOOT, 0.3);\r\n        break;\r\n      case MessageBroker.MESSAGE_MENU_CHANGE:\r\n        this.playSound(AudioManager.SOUND_PLAYER_LANE_CHANGE);\r\n        break;\r\n      case MessageBroker.MESSAGE_MENU_SELECT:\r\n        this.playSound(AudioManager.SOUND_PLAYER_SHOOT, 0.8);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { AudioListener, Group, PerspectiveCamera, Scene, WebGLRenderer } from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\r\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass';\r\nimport Level from '@/Object/Level';\r\nimport LevelRenderer from '@/Renderer/LevelRenderer';\r\nimport Surface from '@/Object/Surface/Surface';\r\nimport State from '@/Object/State';\r\nimport ScreenPlay from '@/Object/Screen/ScreenPlay';\r\nimport ScreenSelectSurface from '@/Object/Screen/ScreenSelectSurface';\r\nimport ScreenHighScores from '@/Object/Screen/ScreenHighScores';\r\nimport ScreenContentManager from '@/Object/Screen/ScreenContentManager';\r\nimport keyboardInput from '@/utils/KeyboardInput';\r\nimport surfaces from '@/Assets/Surfaces';\r\nimport levels from '@/Assets/Levels';\r\nimport readonly from '@/utils/readonly';\r\nimport AudioManager from '@/Object/Manager/AudioManager';\r\n\r\nexport default class Game {\r\n  @readonly\r\n  static BONUS_EVERY = 20000;\r\n\r\n  @readonly\r\n  static HIGH_SCORES_STORAGE_KEY = 'high_scores';\r\n  @readonly\r\n  static HIGHEST_LEVEL = 'highest_level';\r\n\r\n  @readonly\r\n  static STATE_SELECT_SURFACE = new State(0, 0, 'select_surface');\r\n  @readonly\r\n  static STATE_PLAY = new State(0, 0, 'play');\r\n  @readonly\r\n  static STATE_HIGH_SCORES = new State(0, 0, 'high_scores');\r\n\r\n  @readonly\r\n  static FLAG_LOAD_NEXT_LEVEL = 0x1;\r\n\r\n  /** @var {State} */\r\n  state;\r\n  /** @var {State} */\r\n  prevState;\r\n  /** @var {boolean} */\r\n  screenStateUpdated = false;\r\n  /** @var {number} */\r\n  flags;\r\n\r\n  /** @var {number} */\r\n  level = 1;\r\n  /** @var {number} */\r\n  highestLevel = 99;\r\n  /** @var {{id: number, selectable: boolean, scoreBonus: number, targetScore: number}} */\r\n  levelData;\r\n  /** @var {boolean} */\r\n  firstLevel = true;\r\n  /** @var {number} */\r\n  score = 0;\r\n  /** @var {{name: string, score: number}[]} */\r\n  highScores;\r\n  /** @var {number} */\r\n  lives = 5;\r\n  /** @var {number} */\r\n  credits = 1;\r\n\r\n  /** @var {Scene} */\r\n  scene;\r\n  /** @var {PerspectiveCamera} */\r\n  camera;\r\n  /** @var {WebGLRenderer} */\r\n  renderer;\r\n  /** @var {EffectComposer} */\r\n  composer;\r\n  /** @var {Level} */\r\n  levelObject = null;\r\n  /** @var {LevelRenderer} */\r\n  levelRenderer = null;\r\n\r\n  /** @var {AudioListener} */\r\n  audioListener;\r\n  /** @var {AudioManager} */\r\n  audioManager;\r\n\r\n  /** @var {Group} */\r\n  screenGroup;\r\n  /** @var {Canvas3d} */\r\n  screenObject = null;\r\n  /** @var {ScreenContentManager} */\r\n  screenContentManager;\r\n\r\n  constructor () {\r\n    this.setState(Game.STATE_SELECT_SURFACE);\r\n\r\n    this.setupRenderer();\r\n    this.setupLogic();\r\n  }\r\n\r\n  handleState () {\r\n    if (!this.screenStateUpdated) {\r\n      this.releaseScreen();\r\n\r\n      if (this.state.equals(Game.STATE_PLAY)) {\r\n        this.releaseLevel();\r\n        this.loadScreen(new ScreenPlay(this.screenContentManager));\r\n        this.loadLevel(this.level);\r\n        this.screenContentManager.setLevel(this.level);\r\n\r\n      } else if (this.state.equals(Game.STATE_SELECT_SURFACE)) {\r\n        this.releaseLevel();\r\n\r\n        this.lives = 5;\r\n        this.score = 0;\r\n\r\n        this.populateScreenContentManager();\r\n        this.loadScreen(new ScreenSelectSurface(this.screenContentManager));\r\n\r\n      } else if (this.state.equals(Game.STATE_HIGH_SCORES)) {\r\n        this.releaseLevel();\r\n        this.loadScreen(new ScreenHighScores(this.screenContentManager));\r\n\r\n      }\r\n\r\n      this.saveGameState();\r\n    }\r\n\r\n    this.screenStateUpdated = true;\r\n  }\r\n\r\n  /**\r\n   * @param {State} state\r\n   */\r\n  setState (state) {\r\n    this.prevState = this.state;\r\n    this.state = state;\r\n    this.screenStateUpdated = false;\r\n  }\r\n\r\n  /**\r\n   * @param {number} level\r\n   * @param {boolean} firstLevel\r\n   */\r\n  startLevel (level, firstLevel = false) {\r\n    if (this.levelObject !== null) {\r\n      throw new Error('Can\\'t start level while another one is active!');\r\n    }\r\n\r\n    this.level = level;\r\n    this.firstLevel = firstLevel;\r\n    this.setState(Game.STATE_PLAY);\r\n  }\r\n\r\n  /**\r\n   * @param {number} level\r\n   */\r\n  loadLevel (level) {\r\n    let surfaceId = ((level - 1) % 16) + 1;\r\n    let surface = this.surfacesCollection.find(surface => surface.id === surfaceId);\r\n\r\n    if (surface === undefined) {\r\n      this.setState(Game.STATE_SELECT_SURFACE);\r\n      throw new Error(`Can't find surface level with id === ${surfaceId} !`);\r\n    }\r\n\r\n    // noinspection JSValidateTypes\r\n    this.levelData = levels.find(levelData => levelData.id === level);\r\n\r\n    if (this.levelData === undefined) {\r\n      throw new Error(`Can't find level with id === ${level} !`);\r\n    }\r\n\r\n    let targetScore = this.firstLevel\r\n      ? this.levelData.targetScore - this.levelData.scoreBonus\r\n      : this.levelData.targetScore;\r\n\r\n    this.levelObject = new Level(\r\n      surface,\r\n      this.level,\r\n      this.score,\r\n      targetScore,\r\n      this.rewardCallback.bind(this),\r\n      this.levelWonCallback.bind(this),\r\n      this.shooterKilledCallback.bind(this),\r\n      this.getCurrentScore.bind(this)\r\n    );\r\n\r\n    this.levelObject.registerKeys();\r\n\r\n    this.levelRenderer.bindLevel(this.levelObject);\r\n\r\n    this.populateScreenContentManager();\r\n  }\r\n\r\n  releaseLevel () {\r\n    if (this.levelObject === null) {\r\n      return;\r\n    }\r\n\r\n    this.levelObject.release();\r\n    this.levelObject = null;\r\n\r\n    this.levelRenderer.releaseLevel();\r\n  }\r\n\r\n  /** @param {Canvas3d} screen */\r\n  loadScreen (screen) {\r\n    if (this.screenObject !== null) {\r\n      this.screenObject.release();\r\n    }\r\n\r\n    this.screenObject = screen;\r\n    this.screenGroup.add(this.screenObject);\r\n  }\r\n\r\n  releaseScreen () {\r\n    this.screenGroup.remove(this.screenObject);\r\n    this.screenObject = null;\r\n  }\r\n\r\n  setupLogic () {\r\n    this.screenContentManager = new ScreenContentManager();\r\n\r\n    this.loadGameState();\r\n    this.populateScreenContentManager();\r\n\r\n    // noinspection JSCheckFunctionSignatures\r\n    this.surfacesCollection = Surface.fromDataset(surfaces);\r\n  }\r\n\r\n  loadGameState () {\r\n    console.log('STATE LOADED');\r\n    this.highScores = new Array(8).fill({ name: 'EZY', score: 4096 });\r\n\r\n    let highScores = localStorage.getItem(Game.HIGH_SCORES_STORAGE_KEY);\r\n    if (highScores !== null) {\r\n      highScores = JSON.parse(highScores);\r\n\r\n      if (highScores.length === 8) {\r\n        this.highScores = highScores;\r\n      }\r\n    }\r\n\r\n    this.highestLevel = 1;\r\n    let highestLevel = localStorage.getItem(Game.HIGHEST_LEVEL);\r\n    if (highestLevel !== null) {\r\n      this.highestLevel = parseInt(highestLevel);\r\n    }\r\n  }\r\n\r\n  saveGameState () {\r\n    console.log('STATE SAVED');\r\n    localStorage.setItem(Game.HIGH_SCORES_STORAGE_KEY, JSON.stringify(this.highScores));\r\n    localStorage.setItem(Game.HIGHEST_LEVEL, this.highestLevel.toString());\r\n  }\r\n\r\n  populateScreenContentManager () {\r\n    this.screenContentManager.setLives(this.lives);\r\n    this.screenContentManager.setLevel(this.level);\r\n    this.screenContentManager.setScore(this.score);\r\n    this.screenContentManager.setCredits(this.credits);\r\n    this.screenContentManager.setHighScores(this.highScores);\r\n    this.screenContentManager.setSuperzapperUsed(false);\r\n    this.screenContentManager.setSelectActive(0);\r\n    this.screenContentManager.setSelectOffset(0);\r\n    this.screenContentManager.setSelectLevels(\r\n      levels.filter(level => level.selectable && level.id <= this.highestLevel)\r\n    );\r\n\r\n    this.screenContentManager.setLevelSelectedCallback(this.startLevel.bind(this));\r\n    this.screenContentManager.setPushHighScoreCallback(this.pushScoreToHighScores.bind(this));\r\n    this.screenContentManager.setCloseHighScoresScreenCallback(() => { this.setState(Game.STATE_SELECT_SURFACE); });\r\n  }\r\n\r\n  setupRenderer (highQuality = true) {\r\n    this.scene = new Scene();\r\n\r\n    this.camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    this.camera.position.set(0, 0, -6);\r\n    this.camera.lookAt(0, 0, 10);\r\n\r\n    this.audioListener = new AudioListener();\r\n    this.camera.add(this.audioListener);\r\n\r\n    this.audioManager = new AudioManager(this.audioListener);\r\n\r\n    this.renderer = new WebGLRenderer({ antialias: true });\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    document.body.appendChild(this.renderer.domElement);\r\n\r\n    this.composer = new EffectComposer(this.renderer);\r\n    this.composer.addPass(new RenderPass(this.scene, this.camera));\r\n\r\n    if (highQuality) {\r\n      this.composer.addPass(new UnrealBloomPass({ x: 256, y: 256 }, 2.2, 1.3, 0));\r\n      this.composer.addPass(new SMAAPass(window.innerWidth, window.innerHeight));\r\n    }\r\n\r\n    this.levelRenderer = new LevelRenderer(this.camera);\r\n    this.scene.add(this.levelRenderer);\r\n\r\n    this.screenGroup = new Group();\r\n    this.screenGroup.rotation.y = Math.PI;\r\n    this.scene.add(this.screenGroup);\r\n  }\r\n\r\n  update () {\r\n    requestAnimationFrame(this.update.bind(this));\r\n\r\n    this.handleState();\r\n    keyboardInput.dispatchActions();\r\n\r\n    if (this.screenObject !== null) {\r\n      this.screenObject.update();\r\n    }\r\n\r\n    if (this.levelObject !== null && this.levelRenderer !== null) {\r\n      this.levelObject.update();\r\n      this.levelRenderer.update();\r\n    }\r\n\r\n    this.audioManager.update();\r\n    this.composer.render();\r\n  }\r\n\r\n  rewardCallback (reward) {\r\n    this.score += reward;\r\n\r\n    if (\r\n      this.lives < 5\r\n      && Math.floor(this.score / Game.BONUS_EVERY) !== Math.floor((this.score - reward) / Game.BONUS_EVERY)\r\n    ) {\r\n      this.lives++;\r\n      this.screenContentManager.set(ScreenContentManager.KEY_LIVES, this.lives);\r\n    }\r\n\r\n    this.screenContentManager.setScore(this.score);\r\n  }\r\n\r\n  levelWonCallback () {\r\n    if (this.firstLevel && this.levelData.selectable) {\r\n      this.score += this.levelData.scoreBonus;\r\n      this.screenContentManager.setScore(this.score);\r\n\r\n      if (this.levelData.scoreBonus >= Game.BONUS_EVERY && this.lives < 5) {\r\n        this.lives++;\r\n        this.screenContentManager.set(ScreenContentManager.KEY_LIVES, this.lives);\r\n      }\r\n    }\r\n\r\n    this.firstLevel = false;\r\n\r\n    this.releaseLevel();\r\n    this.startLevel(this.level + 1);\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} true if game can be continued, false otherwise\r\n   */\r\n  shooterKilledCallback () {\r\n    this.lives--;\r\n\r\n    this.screenContentManager.setLives(this.lives);\r\n\r\n    if (this.lives === 0) {\r\n      if (this.level > this.highestLevel) {\r\n        this.highestLevel = this.level;\r\n      }\r\n\r\n      this.setState(Game.STATE_HIGH_SCORES);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @param {number} score\r\n   * @param {string} name\r\n   */\r\n  pushScoreToHighScores (score, name) {\r\n    let index = this.highScores.findIndex(row => row.score <= score);\r\n\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n\r\n    this.highScores.splice(index, 0, { name: name, score: score });\r\n    this.highScores.pop();\r\n  }\r\n\r\n  /**\r\n   * @return {number}\r\n   */\r\n  getCurrentScore () {\r\n    return this.score;\r\n  }\r\n}\r\n","import Game from '@/Object/Game';\r\n\r\nconst game = new Game();\r\ngame.update();\r\n\r\n// import * as THREE from 'three';\r\n// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n// import Surface from '@/Object/Surface/Surface';\r\n// import Level from '@/Object/Level';\r\n// import LevelRenderer from '@/Renderer/LevelRenderer';\r\n// import surfaces from '@/Assets/Surfaces';\r\n//\r\n// import keyboardInput from '@/utils/KeyboardInput';\r\n// import { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\n// import { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\n// import ScreenPlay from '@/Object/Screen/ScreenPlay';\r\n// // import { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\r\n// // import { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass';\r\n//\r\n// // eslint-disable-next-line no-unused-vars\r\n// const scene = new THREE.Scene();\r\n// // eslint-disable-next-line no-unused-vars\r\n// const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n// camera.position.set(0, 0, -6);\r\n// camera.lookAt(0, 0, 0);\r\n//\r\n// const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n// renderer.setSize(window.innerWidth, window.innerHeight);\r\n// document.body.appendChild(renderer.domElement);\r\n//\r\n// const composer = new EffectComposer(renderer);\r\n// const renderPass = new RenderPass(scene, camera);\r\n// composer.addPass(renderPass);\r\n//\r\n// // const unrealBloomPass = new UnrealBloomPass({ x: 256, y: 256 }, 2.2, 1.3, 0);\r\n// // composer.addPass(unrealBloomPass);\r\n// // const smaaPass = new SMAAPass(window.innerWidth, window.innerHeight);\r\n// //\r\n// // composer.addPass(smaaPass);\r\n//\r\n// const controls = new OrbitControls(camera, renderer.domElement);\r\n// controls.update();\r\n//\r\n// //NAZWA SURFACE DO WYRENDEROWANIA\r\n// let nameOfSurfaceToDisplay = 'Peanut';\r\n//\r\n// const surfacesCollection = Surface.fromDataset(surfaces);\r\n// const surfaceToDisplay = surfacesCollection.find(surface => surface.name === nameOfSurfaceToDisplay);\r\n//\r\n// let level, levelRenderer;\r\n//\r\n// //EKRAN DO WYRENDEROWANIA\r\n// const canvas3d = new ScreenPlay(8, 8);\r\n// // const canvas3d = new ScreenSelectSurface(8, 8);\r\n// //const canvas3d = new ScreenHighScores(8, 8);\r\n//\r\n// canvas3d.rotation.y = Math.PI;\r\n//\r\n// if (surfaceToDisplay) {\r\n//   level = new Level(surfaceToDisplay);\r\n//   levelRenderer = new LevelRenderer(level);\r\n//\r\n//   scene.add(levelRenderer);\r\n//   scene.add(canvas3d);\r\n//   animate();\r\n// } else {\r\n//   alert(`BAKA! There is not such surface as ${nameOfSurfaceToDisplay}...`);\r\n// }\r\n//\r\n// function animate () {\r\n//   requestAnimationFrame(animate);\r\n//\r\n//   controls.update();\r\n//   keyboardInput.dispatchActions();\r\n//\r\n//   canvas3d.update();\r\n//\r\n//   level.update();\r\n//   levelRenderer.update();\r\n//\r\n//   composer.render();\r\n//\r\n//   //scene.rotation.y = Math.sin(Date.now() % (Math.PI * 2 * 4000) / 4000) / 5;\r\n// }\r\n//\r\n//\r\n"],"sourceRoot":""}